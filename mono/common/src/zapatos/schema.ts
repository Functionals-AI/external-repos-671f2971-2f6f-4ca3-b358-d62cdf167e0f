/*
** DON'T EDIT THIS FILE **
It's been generated by Zapatos, and is liable to be overwritten

Zapatos: https://jawj.github.io/zapatos/
Copyright (C) 2020 - 2022 George MacKerron
Released under the MIT licence: see LICENCE file
*/

declare module 'zapatos/schema' {

  import type * as db from 'zapatos/db';

  // got a type error on schemaVersionCanary below? update by running `npx zapatos`
  export interface schemaVersionCanary extends db.SchemaVersionCanary { version: 104 }


  /* === schema: foodcards === */

  export namespace foodcards {
  
    /* --- enums --- */
    /* (none) */
  
    /* --- tables --- */
  
    /**
     * **foodcards.incomm_eligibility**
     * - Table in database
     */
    export namespace incomm_eligibility {
      export type Table = 'foodcards.incomm_eligibility';
      export interface Selectable {
        /**
        * **foodcards.incomm_eligibility.participant_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        participant_id: number;
        /**
        * **foodcards.incomm_eligibility.incomm_program_purse_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        incomm_program_purse_id: number;
        /**
        * **foodcards.incomm_eligibility.effective_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        effective_date: Date;
        /**
        * **foodcards.incomm_eligibility.activated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        activated_at: Date | null;
        /**
        * **foodcards.incomm_eligibility.expiration_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        expiration_date: Date;
        /**
        * **foodcards.incomm_eligibility.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at: Date | null;
        /**
        * **foodcards.incomm_eligibility.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **foodcards.incomm_eligibility.participant_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        participant_id: number;
        /**
        * **foodcards.incomm_eligibility.incomm_program_purse_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        incomm_program_purse_id: number;
        /**
        * **foodcards.incomm_eligibility.effective_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        effective_date: db.DateString;
        /**
        * **foodcards.incomm_eligibility.activated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        activated_at: db.TimestampString | null;
        /**
        * **foodcards.incomm_eligibility.expiration_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        expiration_date: db.DateString;
        /**
        * **foodcards.incomm_eligibility.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at: db.TimestampString | null;
        /**
        * **foodcards.incomm_eligibility.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **foodcards.incomm_eligibility.participant_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        participant_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.incomm_eligibility.incomm_program_purse_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        incomm_program_purse_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.incomm_eligibility.effective_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        effective_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.incomm_eligibility.activated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        activated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.incomm_eligibility.expiration_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        expiration_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.incomm_eligibility.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.incomm_eligibility.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **foodcards.incomm_eligibility.participant_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        participant_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **foodcards.incomm_eligibility.incomm_program_purse_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        incomm_program_purse_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **foodcards.incomm_eligibility.effective_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        effective_date: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment;
        /**
        * **foodcards.incomm_eligibility.activated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        activated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **foodcards.incomm_eligibility.expiration_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        expiration_date: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment;
        /**
        * **foodcards.incomm_eligibility.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **foodcards.incomm_eligibility.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **foodcards.incomm_eligibility.participant_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        participant_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **foodcards.incomm_eligibility.incomm_program_purse_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        incomm_program_purse_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **foodcards.incomm_eligibility.effective_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        effective_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment>;
        /**
        * **foodcards.incomm_eligibility.activated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        activated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **foodcards.incomm_eligibility.expiration_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        expiration_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment>;
        /**
        * **foodcards.incomm_eligibility.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **foodcards.incomm_eligibility.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'incomm_eligibility_participant_id_incomm_program_purse_id_key';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **foodcards.incomm_program_purses**
     * - Table in database
     */
    export namespace incomm_program_purses {
      export type Table = 'foodcards.incomm_program_purses';
      export interface Selectable {
        /**
        * **foodcards.incomm_program_purses.id**
        * - `int4` in database
        * - `NOT NULL`, identity column
        */
        id: number;
        /**
        * **foodcards.incomm_program_purses.health_plan_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        health_plan_code: string;
        /**
        * **foodcards.incomm_program_purses.program_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        program_code: string;
        /**
        * **foodcards.incomm_program_purses.purse_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        purse_name: string;
        /**
        * **foodcards.incomm_program_purses.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at: Date | null;
        /**
        * **foodcards.incomm_program_purses.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **foodcards.incomm_program_purses.id**
        * - `int4` in database
        * - `NOT NULL`, identity column
        */
        id: number;
        /**
        * **foodcards.incomm_program_purses.health_plan_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        health_plan_code: string;
        /**
        * **foodcards.incomm_program_purses.program_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        program_code: string;
        /**
        * **foodcards.incomm_program_purses.purse_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        purse_name: string;
        /**
        * **foodcards.incomm_program_purses.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at: db.TimestampString | null;
        /**
        * **foodcards.incomm_program_purses.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **foodcards.incomm_program_purses.id**
        * - `int4` in database
        * - `NOT NULL`, identity column
        */
        id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.incomm_program_purses.health_plan_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        health_plan_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.incomm_program_purses.program_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        program_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.incomm_program_purses.purse_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        purse_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.incomm_program_purses.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.incomm_program_purses.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **foodcards.incomm_program_purses.id**
        * - `int4` in database
        * - `NOT NULL`, identity column
        */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **foodcards.incomm_program_purses.health_plan_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        health_plan_code: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **foodcards.incomm_program_purses.program_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        program_code: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **foodcards.incomm_program_purses.purse_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        purse_name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **foodcards.incomm_program_purses.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **foodcards.incomm_program_purses.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **foodcards.incomm_program_purses.id**
        * - `int4` in database
        * - `NOT NULL`, identity column
        */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **foodcards.incomm_program_purses.health_plan_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        health_plan_code?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **foodcards.incomm_program_purses.program_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        program_code?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **foodcards.incomm_program_purses.purse_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        purse_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **foodcards.incomm_program_purses.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **foodcards.incomm_program_purses.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'incomm_program_purses_health_plan_code_program_code_purse_n_key' | 'incomm_program_purses_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **foodcards.participants**
     * - Table in database
     */
    export namespace participants {
      export type Table = 'foodcards.participants';
      export interface Selectable {
        /**
        * **foodcards.participants.id**
        * - `int4` in database
        * - `NOT NULL`, identity column
        */
        id: number;
        /**
        * **foodcards.participants.source**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source: string;
        /**
        * **foodcards.participants.source_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source_id: string;
        /**
        * **foodcards.participants.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name: string;
        /**
        * **foodcards.participants.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name: string;
        /**
        * **foodcards.participants.address**
        * - `varchar` in database
        * - Nullable, no default
        */
        address: string | null;
        /**
        * **foodcards.participants.unit_number**
        * - `varchar` in database
        * - Nullable, no default
        */
        unit_number: string | null;
        /**
        * **foodcards.participants.city**
        * - `varchar` in database
        * - Nullable, no default
        */
        city: string | null;
        /**
        * **foodcards.participants.state**
        * - `varchar` in database
        * - Nullable, no default
        */
        state: string | null;
        /**
        * **foodcards.participants.zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        zip_code: string | null;
        /**
        * **foodcards.participants.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone: string | null;
        /**
        * **foodcards.participants.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **foodcards.participants.language**
        * - `varchar` in database
        * - Nullable, no default
        */
        language: string | null;
        /**
        * **foodcards.participants.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at: Date | null;
        /**
        * **foodcards.participants.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **foodcards.participants.id**
        * - `int4` in database
        * - `NOT NULL`, identity column
        */
        id: number;
        /**
        * **foodcards.participants.source**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source: string;
        /**
        * **foodcards.participants.source_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source_id: string;
        /**
        * **foodcards.participants.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name: string;
        /**
        * **foodcards.participants.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name: string;
        /**
        * **foodcards.participants.address**
        * - `varchar` in database
        * - Nullable, no default
        */
        address: string | null;
        /**
        * **foodcards.participants.unit_number**
        * - `varchar` in database
        * - Nullable, no default
        */
        unit_number: string | null;
        /**
        * **foodcards.participants.city**
        * - `varchar` in database
        * - Nullable, no default
        */
        city: string | null;
        /**
        * **foodcards.participants.state**
        * - `varchar` in database
        * - Nullable, no default
        */
        state: string | null;
        /**
        * **foodcards.participants.zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        zip_code: string | null;
        /**
        * **foodcards.participants.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone: string | null;
        /**
        * **foodcards.participants.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **foodcards.participants.language**
        * - `varchar` in database
        * - Nullable, no default
        */
        language: string | null;
        /**
        * **foodcards.participants.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at: db.TimestampString | null;
        /**
        * **foodcards.participants.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **foodcards.participants.id**
        * - `int4` in database
        * - `NOT NULL`, identity column
        */
        id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.participants.source**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.participants.source_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.participants.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.participants.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.participants.address**
        * - `varchar` in database
        * - Nullable, no default
        */
        address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.participants.unit_number**
        * - `varchar` in database
        * - Nullable, no default
        */
        unit_number?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.participants.city**
        * - `varchar` in database
        * - Nullable, no default
        */
        city?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.participants.state**
        * - `varchar` in database
        * - Nullable, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.participants.zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        zip_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.participants.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.participants.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.participants.language**
        * - `varchar` in database
        * - Nullable, no default
        */
        language?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.participants.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **foodcards.participants.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **foodcards.participants.id**
        * - `int4` in database
        * - `NOT NULL`, identity column
        */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **foodcards.participants.source**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **foodcards.participants.source_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **foodcards.participants.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **foodcards.participants.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **foodcards.participants.address**
        * - `varchar` in database
        * - Nullable, no default
        */
        address?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **foodcards.participants.unit_number**
        * - `varchar` in database
        * - Nullable, no default
        */
        unit_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **foodcards.participants.city**
        * - `varchar` in database
        * - Nullable, no default
        */
        city?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **foodcards.participants.state**
        * - `varchar` in database
        * - Nullable, no default
        */
        state?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **foodcards.participants.zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        zip_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **foodcards.participants.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **foodcards.participants.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **foodcards.participants.language**
        * - `varchar` in database
        * - Nullable, no default
        */
        language?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **foodcards.participants.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **foodcards.participants.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **foodcards.participants.id**
        * - `int4` in database
        * - `NOT NULL`, identity column
        */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **foodcards.participants.source**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **foodcards.participants.source_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **foodcards.participants.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **foodcards.participants.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **foodcards.participants.address**
        * - `varchar` in database
        * - Nullable, no default
        */
        address?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **foodcards.participants.unit_number**
        * - `varchar` in database
        * - Nullable, no default
        */
        unit_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **foodcards.participants.city**
        * - `varchar` in database
        * - Nullable, no default
        */
        city?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **foodcards.participants.state**
        * - `varchar` in database
        * - Nullable, no default
        */
        state?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **foodcards.participants.zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        zip_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **foodcards.participants.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **foodcards.participants.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **foodcards.participants.language**
        * - `varchar` in database
        * - Nullable, no default
        */
        language?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **foodcards.participants.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **foodcards.participants.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'participants_pkey' | 'participants_source_id_key';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /* --- aggregate types --- */
  
    export type Table = incomm_eligibility.Table | incomm_program_purses.Table | participants.Table;
    export type Selectable = incomm_eligibility.Selectable | incomm_program_purses.Selectable | participants.Selectable;
    export type JSONSelectable = incomm_eligibility.JSONSelectable | incomm_program_purses.JSONSelectable | participants.JSONSelectable;
    export type Whereable = incomm_eligibility.Whereable | incomm_program_purses.Whereable | participants.Whereable;
    export type Insertable = incomm_eligibility.Insertable | incomm_program_purses.Insertable | participants.Insertable;
    export type Updatable = incomm_eligibility.Updatable | incomm_program_purses.Updatable | participants.Updatable;
    export type UniqueIndex = incomm_eligibility.UniqueIndex | incomm_program_purses.UniqueIndex | participants.UniqueIndex;
    export type Column = incomm_eligibility.Column | incomm_program_purses.Column | participants.Column;
  
    export type AllBaseTables = [incomm_eligibility.Table, incomm_program_purses.Table, participants.Table];
    export type AllForeignTables = [];
    export type AllViews = [];
    export type AllMaterializedViews = [];
    export type AllTablesAndViews = [incomm_eligibility.Table, incomm_program_purses.Table, participants.Table];
  }


  /* === schema: telenutrition === */

  export namespace telenutrition {
  
    /* --- enums --- */
    /* (none) */
  
    /* --- tables --- */
  
    /**
     * **telenutrition.account_food_offering_vendor_mapping**
     * - Table in database
     */
    export namespace account_food_offering_vendor_mapping {
      export type Table = 'telenutrition.account_food_offering_vendor_mapping';
      export interface Selectable {
        /**
        * **telenutrition.account_food_offering_vendor_mapping.account_food_offering_vendor_mapping_id**
        * - `int4` in database
        * - Generated column
        */
        account_food_offering_vendor_mapping_id: number;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id: number | null;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.food_offering_type_id**
        * - `int4` in database
        * - Nullable, no default
        */
        food_offering_type_id: number | null;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.food_vendor_id**
        * - `int4` in database
        * - Nullable, no default
        */
        food_vendor_id: number | null;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.account_food_offering_vendor_mapping.account_food_offering_vendor_mapping_id**
        * - `int4` in database
        * - Generated column
        */
        account_food_offering_vendor_mapping_id: number;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id: number | null;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.food_offering_type_id**
        * - `int4` in database
        * - Nullable, no default
        */
        food_offering_type_id: number | null;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.food_vendor_id**
        * - `int4` in database
        * - Nullable, no default
        */
        food_vendor_id: number | null;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.account_food_offering_vendor_mapping.account_food_offering_vendor_mapping_id**
        * - `int4` in database
        * - Generated column
        */
        account_food_offering_vendor_mapping_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.food_offering_type_id**
        * - `int4` in database
        * - Nullable, no default
        */
        food_offering_type_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.food_vendor_id**
        * - `int4` in database
        * - Nullable, no default
        */
        food_vendor_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.account_food_offering_vendor_mapping.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.food_offering_type_id**
        * - `int4` in database
        * - Nullable, no default
        */
        food_offering_type_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.food_vendor_id**
        * - `int4` in database
        * - Nullable, no default
        */
        food_vendor_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.account_food_offering_vendor_mapping.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.food_offering_type_id**
        * - `int4` in database
        * - Nullable, no default
        */
        food_offering_type_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.food_vendor_id**
        * - `int4` in database
        * - Nullable, no default
        */
        food_vendor_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'account_food_offering_vendor_mapping_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.account_food_offering_vendor_mapping_history**
     * - Table in database
     */
    export namespace account_food_offering_vendor_mapping_history {
      export type Table = 'telenutrition.account_food_offering_vendor_mapping_history';
      export interface Selectable {
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.event_id**
        * - `int4` in database
        * - Generated column
        */
        event_id: number;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type: string;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.account_food_offering_vendor_mapping_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_food_offering_vendor_mapping_id: number;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id: number | null;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.food_offering_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_offering_type_id: number;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.food_vendor_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_vendor_id: number;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.event_id**
        * - `int4` in database
        * - Generated column
        */
        event_id: number;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type: string;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.account_food_offering_vendor_mapping_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_food_offering_vendor_mapping_id: number;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id: number | null;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.food_offering_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_offering_type_id: number;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.food_vendor_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_vendor_id: number;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.event_id**
        * - `int4` in database
        * - Generated column
        */
        event_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.account_food_offering_vendor_mapping_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_food_offering_vendor_mapping_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.food_offering_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_offering_type_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.food_vendor_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_vendor_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.account_food_offering_vendor_mapping_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_food_offering_vendor_mapping_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.food_offering_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_offering_type_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.food_vendor_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_vendor_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.account_food_offering_vendor_mapping_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_food_offering_vendor_mapping_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.food_offering_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_offering_type_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.food_vendor_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_vendor_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.account_food_offering_vendor_mapping_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'account_food_offering_vendor_mapping_history_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.account_payment_method_type**
     * - Table in database
     */
    export namespace account_payment_method_type {
      export type Table = 'telenutrition.account_payment_method_type';
      export interface Selectable {
        /**
        * **telenutrition.account_payment_method_type.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id: number;
        /**
        * **telenutrition.account_payment_method_type.payment_method_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payment_method_type_id: number;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.account_payment_method_type.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id: number;
        /**
        * **telenutrition.account_payment_method_type.payment_method_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payment_method_type_id: number;
      }
      export interface Whereable {
        /**
        * **telenutrition.account_payment_method_type.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.account_payment_method_type.payment_method_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payment_method_type_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.account_payment_method_type.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.account_payment_method_type.payment_method_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payment_method_type_id: number | db.Parameter<number> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.account_payment_method_type.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.account_payment_method_type.payment_method_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payment_method_type_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
      }
      export type UniqueIndex = 'account_payment_method_type_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.activity**
     * - Table in database
     */
    export namespace activity {
      export type Table = 'telenutrition.activity';
      export interface Selectable {
        /**
        * **telenutrition.activity.activity_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.activity_activity_id_seq'::regclass)`
        */
        activity_id: number;
        /**
        * **telenutrition.activity.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.activity.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.activity.activity_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.activity_activity_id_seq'::regclass)`
        */
        activity_id: number;
        /**
        * **telenutrition.activity.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.activity.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string;
      }
      export interface Whereable {
        /**
        * **telenutrition.activity.activity_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.activity_activity_id_seq'::regclass)`
        */
        activity_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.activity.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.activity.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.activity.activity_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.activity_activity_id_seq'::regclass)`
        */
        activity_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.activity.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.activity.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string | db.Parameter<string> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.activity.activity_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.activity_activity_id_seq'::regclass)`
        */
        activity_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.activity.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.activity.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      }
      export type UniqueIndex = 'activity_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.activity_user**
     * - Table in database
     */
    export namespace activity_user {
      export type Table = 'telenutrition.activity_user';
      export interface Selectable {
        /**
        * **telenutrition.activity_user.activity_user_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        activity_user_id: string;
        /**
        * **telenutrition.activity_user.activity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        activity_id: number;
        /**
        * **telenutrition.activity_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id: number;
        /**
        * **telenutrition.activity_user.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number;
        /**
        * **telenutrition.activity_user.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta: db.JSONValue | null;
        /**
        * **telenutrition.activity_user.activity_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        activity_at: Date;
        /**
        * **telenutrition.activity_user.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.activity_user.activity_user_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        activity_user_id: string;
        /**
        * **telenutrition.activity_user.activity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        activity_id: number;
        /**
        * **telenutrition.activity_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id: number;
        /**
        * **telenutrition.activity_user.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number;
        /**
        * **telenutrition.activity_user.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta: db.JSONValue | null;
        /**
        * **telenutrition.activity_user.activity_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        activity_at: db.TimestampString;
        /**
        * **telenutrition.activity_user.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **telenutrition.activity_user.activity_user_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        activity_user_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.activity_user.activity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        activity_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.activity_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.activity_user.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.activity_user.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.activity_user.activity_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        activity_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.activity_user.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.activity_user.activity_user_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        activity_user_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.activity_user.activity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        activity_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.activity_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.activity_user.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.activity_user.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.activity_user.activity_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        activity_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.activity_user.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.activity_user.activity_user_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        activity_user_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.activity_user.activity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        activity_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.activity_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.activity_user.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.activity_user.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.activity_user.activity_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        activity_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.activity_user.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'activity_user_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.appointment_cancel_reason**
     * - Table in database
     */
    export namespace appointment_cancel_reason {
      export type Table = 'telenutrition.appointment_cancel_reason';
      export interface Selectable {
        /**
        * **telenutrition.appointment_cancel_reason.cancel_reason_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.appointment_cancel_reason_cancel_reason_id_seq'::regclass)`
        */
        cancel_reason_id: number;
        /**
        * **telenutrition.appointment_cancel_reason.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name: string;
        /**
        * **telenutrition.appointment_cancel_reason.slot_available**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        slot_available: boolean;
        /**
        * **telenutrition.appointment_cancel_reason.reschedule**
        * - `bool` in database
        * - Nullable, no default
        */
        reschedule: boolean | null;
        /**
        * **telenutrition.appointment_cancel_reason.no_show**
        * - `bool` in database
        * - Nullable, no default
        */
        no_show: boolean | null;
        /**
        * **telenutrition.appointment_cancel_reason.patient_rescheduled**
        * - `bool` in database
        * - Nullable, no default
        */
        patient_rescheduled: boolean | null;
        /**
        * **telenutrition.appointment_cancel_reason.provider_unavailable**
        * - `bool` in database
        * - Nullable, no default
        */
        provider_unavailable: boolean | null;
        /**
        * **telenutrition.appointment_cancel_reason.roles**
        * - `_text` in database
        * - Nullable, no default
        */
        roles: string[] | null;
        /**
        * **telenutrition.appointment_cancel_reason.visible**
        * - `bool` in database
        * - Nullable, default: `true`
        */
        visible: boolean | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.appointment_cancel_reason.cancel_reason_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.appointment_cancel_reason_cancel_reason_id_seq'::regclass)`
        */
        cancel_reason_id: number;
        /**
        * **telenutrition.appointment_cancel_reason.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name: string;
        /**
        * **telenutrition.appointment_cancel_reason.slot_available**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        slot_available: boolean;
        /**
        * **telenutrition.appointment_cancel_reason.reschedule**
        * - `bool` in database
        * - Nullable, no default
        */
        reschedule: boolean | null;
        /**
        * **telenutrition.appointment_cancel_reason.no_show**
        * - `bool` in database
        * - Nullable, no default
        */
        no_show: boolean | null;
        /**
        * **telenutrition.appointment_cancel_reason.patient_rescheduled**
        * - `bool` in database
        * - Nullable, no default
        */
        patient_rescheduled: boolean | null;
        /**
        * **telenutrition.appointment_cancel_reason.provider_unavailable**
        * - `bool` in database
        * - Nullable, no default
        */
        provider_unavailable: boolean | null;
        /**
        * **telenutrition.appointment_cancel_reason.roles**
        * - `_text` in database
        * - Nullable, no default
        */
        roles: string[] | null;
        /**
        * **telenutrition.appointment_cancel_reason.visible**
        * - `bool` in database
        * - Nullable, default: `true`
        */
        visible: boolean | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.appointment_cancel_reason.cancel_reason_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.appointment_cancel_reason_cancel_reason_id_seq'::regclass)`
        */
        cancel_reason_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.appointment_cancel_reason.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.appointment_cancel_reason.slot_available**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        slot_available?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.appointment_cancel_reason.reschedule**
        * - `bool` in database
        * - Nullable, no default
        */
        reschedule?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.appointment_cancel_reason.no_show**
        * - `bool` in database
        * - Nullable, no default
        */
        no_show?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.appointment_cancel_reason.patient_rescheduled**
        * - `bool` in database
        * - Nullable, no default
        */
        patient_rescheduled?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.appointment_cancel_reason.provider_unavailable**
        * - `bool` in database
        * - Nullable, no default
        */
        provider_unavailable?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.appointment_cancel_reason.roles**
        * - `_text` in database
        * - Nullable, no default
        */
        roles?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.appointment_cancel_reason.visible**
        * - `bool` in database
        * - Nullable, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.appointment_cancel_reason.cancel_reason_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.appointment_cancel_reason_cancel_reason_id_seq'::regclass)`
        */
        cancel_reason_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.appointment_cancel_reason.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.appointment_cancel_reason.slot_available**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        slot_available: boolean | db.Parameter<boolean> | db.SQLFragment;
        /**
        * **telenutrition.appointment_cancel_reason.reschedule**
        * - `bool` in database
        * - Nullable, no default
        */
        reschedule?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.appointment_cancel_reason.no_show**
        * - `bool` in database
        * - Nullable, no default
        */
        no_show?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.appointment_cancel_reason.patient_rescheduled**
        * - `bool` in database
        * - Nullable, no default
        */
        patient_rescheduled?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.appointment_cancel_reason.provider_unavailable**
        * - `bool` in database
        * - Nullable, no default
        */
        provider_unavailable?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.appointment_cancel_reason.roles**
        * - `_text` in database
        * - Nullable, no default
        */
        roles?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.appointment_cancel_reason.visible**
        * - `bool` in database
        * - Nullable, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.appointment_cancel_reason.cancel_reason_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.appointment_cancel_reason_cancel_reason_id_seq'::regclass)`
        */
        cancel_reason_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.appointment_cancel_reason.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.appointment_cancel_reason.slot_available**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        slot_available?: boolean | db.Parameter<boolean> | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment>;
        /**
        * **telenutrition.appointment_cancel_reason.reschedule**
        * - `bool` in database
        * - Nullable, no default
        */
        reschedule?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.appointment_cancel_reason.no_show**
        * - `bool` in database
        * - Nullable, no default
        */
        no_show?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.appointment_cancel_reason.patient_rescheduled**
        * - `bool` in database
        * - Nullable, no default
        */
        patient_rescheduled?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.appointment_cancel_reason.provider_unavailable**
        * - `bool` in database
        * - Nullable, no default
        */
        provider_unavailable?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.appointment_cancel_reason.roles**
        * - `_text` in database
        * - Nullable, no default
        */
        roles?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.appointment_cancel_reason.visible**
        * - `bool` in database
        * - Nullable, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'appointment_cancel_reason_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.athena_api_auth**
     * - Table in database
     */
    export namespace athena_api_auth {
      export type Table = 'telenutrition.athena_api_auth';
      export interface Selectable {
        /**
        * **telenutrition.athena_api_auth.auth_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.athena_api_auth_id_seq'::regclass)`
        */
        auth_id: number;
        /**
        * **telenutrition.athena_api_auth.token**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        token: string;
        /**
        * **telenutrition.athena_api_auth.expires_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        expires_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.athena_api_auth.auth_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.athena_api_auth_id_seq'::regclass)`
        */
        auth_id: number;
        /**
        * **telenutrition.athena_api_auth.token**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        token: string;
        /**
        * **telenutrition.athena_api_auth.expires_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        expires_at: db.TimestampTzString | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.athena_api_auth.auth_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.athena_api_auth_id_seq'::regclass)`
        */
        auth_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.athena_api_auth.token**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        token?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.athena_api_auth.expires_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        expires_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.athena_api_auth.auth_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.athena_api_auth_id_seq'::regclass)`
        */
        auth_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.athena_api_auth.token**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        token: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.athena_api_auth.expires_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        expires_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.athena_api_auth.auth_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.athena_api_auth_id_seq'::regclass)`
        */
        auth_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.athena_api_auth.token**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        token?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.athena_api_auth.expires_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        expires_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'athena_api_auth_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.billing_code**
     * - Table in database
     */
    export namespace billing_code {
      export type Table = 'telenutrition.billing_code';
      export interface Selectable {
        /**
        * **telenutrition.billing_code.code_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code_id: string;
        /**
        * **telenutrition.billing_code.description**
        * - `text` in database
        * - Nullable, no default
        */
        description: string | null;
        /**
        * **telenutrition.billing_code.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
        /**
        * **telenutrition.billing_code.billing_rule_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        billing_rule_id: number;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.billing_code.code_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code_id: string;
        /**
        * **telenutrition.billing_code.description**
        * - `text` in database
        * - Nullable, no default
        */
        description: string | null;
        /**
        * **telenutrition.billing_code.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
        /**
        * **telenutrition.billing_code.billing_rule_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        billing_rule_id: number;
      }
      export interface Whereable {
        /**
        * **telenutrition.billing_code.code_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_code.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_code.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_code.billing_rule_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        billing_rule_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.billing_code.code_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.billing_code.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_code.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_code.billing_rule_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        billing_rule_id: number | db.Parameter<number> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.billing_code.code_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.billing_code.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_code.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_code.billing_rule_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        billing_rule_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
      }
      export type UniqueIndex = 'billing_code_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.billing_contract**
     * - Table in database
     */
    export namespace billing_contract {
      export type Table = 'telenutrition.billing_contract';
      export interface Selectable {
        /**
        * **telenutrition.billing_contract.billing_contract_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_code_account_account_code_id_seq'::regclass)`
        */
        billing_contract_id: number;
        /**
        * **telenutrition.billing_contract.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id: number;
        /**
        * **telenutrition.billing_contract.code_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code_id: string;
        /**
        * **telenutrition.billing_contract.rate**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        rate: string;
        /**
        * **telenutrition.billing_contract.active_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        active_at: Date;
        /**
        * **telenutrition.billing_contract.inactive_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        inactive_at: Date | null;
        /**
        * **telenutrition.billing_contract.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
        /**
        * **telenutrition.billing_contract.billing_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        billing_rule_id: number | null;
        /**
        * **telenutrition.billing_contract.param_values**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        param_values: string[];
        /**
        * **telenutrition.billing_contract.processed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        processed_at: Date | null;
        /**
        * **telenutrition.billing_contract.contract_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        contract_type: string;
        /**
        * **telenutrition.billing_contract.inactive**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        inactive: boolean;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.billing_contract.billing_contract_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_code_account_account_code_id_seq'::regclass)`
        */
        billing_contract_id: number;
        /**
        * **telenutrition.billing_contract.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id: number;
        /**
        * **telenutrition.billing_contract.code_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code_id: string;
        /**
        * **telenutrition.billing_contract.rate**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        rate: string;
        /**
        * **telenutrition.billing_contract.active_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        active_at: db.TimestampString;
        /**
        * **telenutrition.billing_contract.inactive_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        inactive_at: db.TimestampString | null;
        /**
        * **telenutrition.billing_contract.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
        /**
        * **telenutrition.billing_contract.billing_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        billing_rule_id: number | null;
        /**
        * **telenutrition.billing_contract.param_values**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        param_values: string[];
        /**
        * **telenutrition.billing_contract.processed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        processed_at: db.TimestampString | null;
        /**
        * **telenutrition.billing_contract.contract_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        contract_type: string;
        /**
        * **telenutrition.billing_contract.inactive**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        inactive: boolean;
      }
      export interface Whereable {
        /**
        * **telenutrition.billing_contract.billing_contract_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_code_account_account_code_id_seq'::regclass)`
        */
        billing_contract_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_contract.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_contract.code_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_contract.rate**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        rate?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_contract.active_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        active_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_contract.inactive_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        inactive_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_contract.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_contract.billing_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        billing_rule_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_contract.param_values**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        param_values?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_contract.processed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        processed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_contract.contract_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        contract_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_contract.inactive**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        inactive?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.billing_contract.billing_contract_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_code_account_account_code_id_seq'::regclass)`
        */
        billing_contract_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_contract.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.billing_contract.code_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.billing_contract.rate**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        rate: (number | string) | db.Parameter<(number | string)> | db.SQLFragment;
        /**
        * **telenutrition.billing_contract.active_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        active_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.billing_contract.inactive_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        inactive_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_contract.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_contract.billing_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        billing_rule_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_contract.param_values**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        param_values: string[] | db.Parameter<string[]> | db.SQLFragment;
        /**
        * **telenutrition.billing_contract.processed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        processed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_contract.contract_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        contract_type: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.billing_contract.inactive**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        inactive?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.billing_contract.billing_contract_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_code_account_account_code_id_seq'::regclass)`
        */
        billing_contract_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_contract.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.billing_contract.code_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.billing_contract.rate**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        rate?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment>;
        /**
        * **telenutrition.billing_contract.active_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        active_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.billing_contract.inactive_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        inactive_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_contract.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_contract.billing_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        billing_rule_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_contract.param_values**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        param_values?: string[] | db.Parameter<string[]> | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment>;
        /**
        * **telenutrition.billing_contract.processed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        processed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_contract.contract_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        contract_type?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.billing_contract.inactive**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        inactive?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'billing_code_account_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.billing_rule**
     * - Table in database
     */
    export namespace billing_rule {
      export type Table = 'telenutrition.billing_rule';
      export interface Selectable {
        /**
        * **telenutrition.billing_rule.billing_rule_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_rule_billing_rule_id_seq'::regclass)`
        */
        billing_rule_id: number;
        /**
        * **telenutrition.billing_rule.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.billing_rule.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string;
        /**
        * **telenutrition.billing_rule.params**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        params: string[];
        /**
        * **telenutrition.billing_rule.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.billing_rule.processing_error**
        * - `text` in database
        * - Nullable, no default
        */
        processing_error: string | null;
        /**
        * **telenutrition.billing_rule.issue_query**
        * - `text` in database
        * - Nullable, no default
        */
        issue_query: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.billing_rule.billing_rule_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_rule_billing_rule_id_seq'::regclass)`
        */
        billing_rule_id: number;
        /**
        * **telenutrition.billing_rule.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.billing_rule.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string;
        /**
        * **telenutrition.billing_rule.params**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        params: string[];
        /**
        * **telenutrition.billing_rule.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.billing_rule.processing_error**
        * - `text` in database
        * - Nullable, no default
        */
        processing_error: string | null;
        /**
        * **telenutrition.billing_rule.issue_query**
        * - `text` in database
        * - Nullable, no default
        */
        issue_query: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.billing_rule.billing_rule_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_rule_billing_rule_id_seq'::regclass)`
        */
        billing_rule_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_rule.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_rule.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_rule.params**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        params?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_rule.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_rule.processing_error**
        * - `text` in database
        * - Nullable, no default
        */
        processing_error?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_rule.issue_query**
        * - `text` in database
        * - Nullable, no default
        */
        issue_query?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.billing_rule.billing_rule_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_rule_billing_rule_id_seq'::regclass)`
        */
        billing_rule_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_rule.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.billing_rule.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.billing_rule.params**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        params: string[] | db.Parameter<string[]> | db.SQLFragment;
        /**
        * **telenutrition.billing_rule.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_rule.processing_error**
        * - `text` in database
        * - Nullable, no default
        */
        processing_error?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_rule.issue_query**
        * - `text` in database
        * - Nullable, no default
        */
        issue_query?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.billing_rule.billing_rule_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_rule_billing_rule_id_seq'::regclass)`
        */
        billing_rule_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_rule.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.billing_rule.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.billing_rule.params**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        params?: string[] | db.Parameter<string[]> | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment>;
        /**
        * **telenutrition.billing_rule.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_rule.processing_error**
        * - `text` in database
        * - Nullable, no default
        */
        processing_error?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_rule.issue_query**
        * - `text` in database
        * - Nullable, no default
        */
        issue_query?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'billing_rule_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.billing_rule_history**
     * - Table in database
     */
    export namespace billing_rule_history {
      export type Table = 'telenutrition.billing_rule_history';
      export interface Selectable {
        /**
        * **telenutrition.billing_rule_history.billing_rule_history_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_rule_history_billing_rule_history_id_seq'::regclass)`
        */
        billing_rule_history_id: number;
        /**
        * **telenutrition.billing_rule_history.billing_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        billing_rule_id: number | null;
        /**
        * **telenutrition.billing_rule_history.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.billing_rule_history.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string;
        /**
        * **telenutrition.billing_rule_history.params**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        params: string[];
        /**
        * **telenutrition.billing_rule_history.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.billing_rule_history.issue_query**
        * - `text` in database
        * - Nullable, no default
        */
        issue_query: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.billing_rule_history.billing_rule_history_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_rule_history_billing_rule_history_id_seq'::regclass)`
        */
        billing_rule_history_id: number;
        /**
        * **telenutrition.billing_rule_history.billing_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        billing_rule_id: number | null;
        /**
        * **telenutrition.billing_rule_history.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.billing_rule_history.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string;
        /**
        * **telenutrition.billing_rule_history.params**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        params: string[];
        /**
        * **telenutrition.billing_rule_history.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.billing_rule_history.issue_query**
        * - `text` in database
        * - Nullable, no default
        */
        issue_query: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.billing_rule_history.billing_rule_history_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_rule_history_billing_rule_history_id_seq'::regclass)`
        */
        billing_rule_history_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_rule_history.billing_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        billing_rule_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_rule_history.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_rule_history.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_rule_history.params**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        params?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_rule_history.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_rule_history.issue_query**
        * - `text` in database
        * - Nullable, no default
        */
        issue_query?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.billing_rule_history.billing_rule_history_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_rule_history_billing_rule_history_id_seq'::regclass)`
        */
        billing_rule_history_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_rule_history.billing_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        billing_rule_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_rule_history.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.billing_rule_history.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.billing_rule_history.params**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        params: string[] | db.Parameter<string[]> | db.SQLFragment;
        /**
        * **telenutrition.billing_rule_history.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_rule_history.issue_query**
        * - `text` in database
        * - Nullable, no default
        */
        issue_query?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.billing_rule_history.billing_rule_history_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_rule_history_billing_rule_history_id_seq'::regclass)`
        */
        billing_rule_history_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_rule_history.billing_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        billing_rule_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_rule_history.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.billing_rule_history.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.billing_rule_history.params**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        params?: string[] | db.Parameter<string[]> | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment>;
        /**
        * **telenutrition.billing_rule_history.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_rule_history.issue_query**
        * - `text` in database
        * - Nullable, no default
        */
        issue_query?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'billing_rule_history_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.billing_service_facility**
     * - Table in database
     */
    export namespace billing_service_facility {
      export type Table = 'telenutrition.billing_service_facility';
      export interface Selectable {
        /**
        * **telenutrition.billing_service_facility.service_facility_organization_name**
        * - `text` in database
        * - Nullable, no default
        */
        service_facility_organization_name: string | null;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_address1**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_address1: string | null;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_address2**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_address2: string | null;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_city**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_city: string | null;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_state**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        service_facility_address_state: string;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_zip_code: string | null;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_zip_plus_four_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_zip_plus_four_code: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.billing_service_facility.service_facility_organization_name**
        * - `text` in database
        * - Nullable, no default
        */
        service_facility_organization_name: string | null;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_address1**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_address1: string | null;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_address2**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_address2: string | null;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_city**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_city: string | null;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_state**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        service_facility_address_state: string;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_zip_code: string | null;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_zip_plus_four_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_zip_plus_four_code: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.billing_service_facility.service_facility_organization_name**
        * - `text` in database
        * - Nullable, no default
        */
        service_facility_organization_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_address1**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_address1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_address2**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_address2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_city**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_city?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_state**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        service_facility_address_state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_zip_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_zip_plus_four_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_zip_plus_four_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.billing_service_facility.service_facility_organization_name**
        * - `text` in database
        * - Nullable, no default
        */
        service_facility_organization_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_address1**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_address1?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_address2**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_address2?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_city**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_city?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_state**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        service_facility_address_state: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_zip_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_zip_plus_four_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_zip_plus_four_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.billing_service_facility.service_facility_organization_name**
        * - `text` in database
        * - Nullable, no default
        */
        service_facility_organization_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_address1**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_address1?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_address2**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_address2?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_city**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_city?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_state**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        service_facility_address_state?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_zip_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_service_facility.service_facility_address_zip_plus_four_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        service_facility_address_zip_plus_four_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'billing_service_facility_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.billing_transaction**
     * - Table in database
     */
    export namespace billing_transaction {
      export type Table = 'telenutrition.billing_transaction';
      export interface Selectable {
        /**
        * **telenutrition.billing_transaction.billing_transaction_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_invoice_invoice_id_seq'::regclass)`
        */
        billing_transaction_id: number;
        /**
        * **telenutrition.billing_transaction.billing_contract_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        billing_contract_id: number;
        /**
        * **telenutrition.billing_transaction.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number;
        /**
        * **telenutrition.billing_transaction.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta: db.JSONValue | null;
        /**
        * **telenutrition.billing_transaction.invoiced_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        invoiced_at: Date;
        /**
        * **telenutrition.billing_transaction.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
        /**
        * **telenutrition.billing_transaction.status**
        * - `text` in database
        * - `NOT NULL`, default: `'pending'::text`
        */
        status: string;
        /**
        * **telenutrition.billing_transaction.code_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code_id: string;
        /**
        * **telenutrition.billing_transaction.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id: number;
        /**
        * **telenutrition.billing_transaction.transaction_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        transaction_type: string;
        /**
        * **telenutrition.billing_transaction.charge_amount_cents**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        charge_amount_cents: number;
        /**
        * **telenutrition.billing_transaction.transaction_key**
        * - `text` in database
        * - Nullable, no default
        */
        transaction_key: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.billing_transaction.billing_transaction_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_invoice_invoice_id_seq'::regclass)`
        */
        billing_transaction_id: number;
        /**
        * **telenutrition.billing_transaction.billing_contract_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        billing_contract_id: number;
        /**
        * **telenutrition.billing_transaction.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number;
        /**
        * **telenutrition.billing_transaction.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta: db.JSONValue | null;
        /**
        * **telenutrition.billing_transaction.invoiced_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        invoiced_at: db.TimestampString;
        /**
        * **telenutrition.billing_transaction.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
        /**
        * **telenutrition.billing_transaction.status**
        * - `text` in database
        * - `NOT NULL`, default: `'pending'::text`
        */
        status: string;
        /**
        * **telenutrition.billing_transaction.code_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code_id: string;
        /**
        * **telenutrition.billing_transaction.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id: number;
        /**
        * **telenutrition.billing_transaction.transaction_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        transaction_type: string;
        /**
        * **telenutrition.billing_transaction.charge_amount_cents**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        charge_amount_cents: number;
        /**
        * **telenutrition.billing_transaction.transaction_key**
        * - `text` in database
        * - Nullable, no default
        */
        transaction_key: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.billing_transaction.billing_transaction_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_invoice_invoice_id_seq'::regclass)`
        */
        billing_transaction_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_transaction.billing_contract_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        billing_contract_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_transaction.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_transaction.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_transaction.invoiced_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        invoiced_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_transaction.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_transaction.status**
        * - `text` in database
        * - `NOT NULL`, default: `'pending'::text`
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_transaction.code_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_transaction.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_transaction.transaction_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        transaction_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_transaction.charge_amount_cents**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        charge_amount_cents?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.billing_transaction.transaction_key**
        * - `text` in database
        * - Nullable, no default
        */
        transaction_key?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.billing_transaction.billing_transaction_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_invoice_invoice_id_seq'::regclass)`
        */
        billing_transaction_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_transaction.billing_contract_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        billing_contract_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.billing_transaction.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.billing_transaction.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_transaction.invoiced_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        invoiced_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.billing_transaction.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_transaction.status**
        * - `text` in database
        * - `NOT NULL`, default: `'pending'::text`
        */
        status?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.billing_transaction.code_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.billing_transaction.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.billing_transaction.transaction_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        transaction_type: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.billing_transaction.charge_amount_cents**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        charge_amount_cents: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.billing_transaction.transaction_key**
        * - `text` in database
        * - Nullable, no default
        */
        transaction_key?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.billing_transaction.billing_transaction_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.billing_invoice_invoice_id_seq'::regclass)`
        */
        billing_transaction_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_transaction.billing_contract_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        billing_contract_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.billing_transaction.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.billing_transaction.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_transaction.invoiced_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        invoiced_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.billing_transaction.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_transaction.status**
        * - `text` in database
        * - `NOT NULL`, default: `'pending'::text`
        */
        status?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.billing_transaction.code_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.billing_transaction.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.billing_transaction.transaction_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        transaction_type?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.billing_transaction.charge_amount_cents**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        charge_amount_cents?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.billing_transaction.transaction_key**
        * - `text` in database
        * - Nullable, no default
        */
        transaction_key?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'billing_invoice_pkey' | 'billing_transaction_transaction_key_unique';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.clinical_encounter**
     * - Table in database
     */
    export namespace clinical_encounter {
      export type Table = 'telenutrition.clinical_encounter';
      export interface Selectable {
        /**
        * **telenutrition.clinical_encounter.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, identity column
        */
        encounter_id: number;
        /**
        * **telenutrition.clinical_encounter.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
        /**
        * **telenutrition.clinical_encounter.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id: number | null;
        /**
        * **telenutrition.clinical_encounter.department_id**
        * - `int4` in database
        * - Nullable, no default
        */
        department_id: number | null;
        /**
        * **telenutrition.clinical_encounter.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.clinical_encounter.encounter_type**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_type: string | null;
        /**
        * **telenutrition.clinical_encounter.encounter_date**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_date: string | null;
        /**
        * **telenutrition.clinical_encounter.actual_starttime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_starttime: Date | null;
        /**
        * **telenutrition.clinical_encounter.encounter_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        encounter_status: string;
        /**
        * **telenutrition.clinical_encounter.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by: string | null;
        /**
        * **telenutrition.clinical_encounter.assigned_to**
        * - `text` in database
        * - Nullable, no default
        */
        assigned_to: string | null;
        /**
        * **telenutrition.clinical_encounter.closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        closed_datetime: Date | null;
        /**
        * **telenutrition.clinical_encounter.closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        closed_by: string | null;
        /**
        * **telenutrition.clinical_encounter.deleted_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        deleted_datetime: Date | null;
        /**
        * **telenutrition.clinical_encounter.deleted_by**
        * - `text` in database
        * - Nullable, no default
        */
        deleted_by: string | null;
        /**
        * **telenutrition.clinical_encounter.specialty**
        * - `text` in database
        * - Nullable, default: `'Registered Dietitian Nutritionist'::text`
        */
        specialty: string | null;
        /**
        * **telenutrition.clinical_encounter.billing_tab_reviewed**
        * - `text` in database
        * - Nullable, no default
        */
        billing_tab_reviewed: string | null;
        /**
        * **telenutrition.clinical_encounter.documented_by**
        * - `text` in database
        * - Nullable, no default
        */
        documented_by: string | null;
        /**
        * **telenutrition.clinical_encounter.close_attempted_yn**
        * - `text` in database
        * - Nullable, no default
        */
        close_attempted_yn: string | null;
        /**
        * **telenutrition.clinical_encounter.last_reopened**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_reopened: Date | null;
        /**
        * **telenutrition.clinical_encounter.last_modified**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_modified: Date | null;
        /**
        * **telenutrition.clinical_encounter.previously_closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        previously_closed_datetime: Date | null;
        /**
        * **telenutrition.clinical_encounter.cancel_reason_note**
        * - `text` in database
        * - Nullable, no default
        */
        cancel_reason_note: string | null;
        /**
        * **telenutrition.clinical_encounter.patient_status_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_status_id: number | null;
        /**
        * **telenutrition.clinical_encounter.last_reopened_by**
        * - `text` in database
        * - Nullable, no default
        */
        last_reopened_by: string | null;
        /**
        * **telenutrition.clinical_encounter.previously_closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        previously_closed_by: string | null;
        /**
        * **telenutrition.clinical_encounter.specialty_id**
        * - `varchar` in database
        * - Nullable, default: `'071'::character varying`
        */
        specialty_id: string | null;
        /**
        * **telenutrition.clinical_encounter.actual_endtime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_endtime: Date | null;
        /**
        * **telenutrition.clinical_encounter.total_minutes**
        * - `int4` in database
        * - Generated column
        */
        total_minutes: number | null;
        /**
        * **telenutrition.clinical_encounter.units_billed**
        * - `int4` in database
        * - Nullable, no default
        */
        units_billed: number | null;
        /**
        * **telenutrition.clinical_encounter.diagnosis_code**
        * - `varchar` in database
        * - Nullable, default: `'Z71.3'::character varying`
        */
        diagnosis_code: string | null;
        /**
        * **telenutrition.clinical_encounter.billing_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        billing_code: string | null;
        /**
        * **telenutrition.clinical_encounter.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.clinical_encounter.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at: Date;
        /**
        * **telenutrition.clinical_encounter.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data: db.JSONValue | null;
        /**
        * **telenutrition.clinical_encounter.timer_started_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_started_at: Date | null;
        /**
        * **telenutrition.clinical_encounter.timer_ended_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_ended_at: Date | null;
        /**
        * **telenutrition.clinical_encounter.oversight_comment**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_comment: string | null;
        /**
        * **telenutrition.clinical_encounter.oversight_by**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_by: string | null;
        /**
        * **telenutrition.clinical_encounter.oversight_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        oversight_at: Date | null;
        /**
        * **telenutrition.clinical_encounter.oversight_status**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_status: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.clinical_encounter.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, identity column
        */
        encounter_id: number;
        /**
        * **telenutrition.clinical_encounter.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
        /**
        * **telenutrition.clinical_encounter.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id: number | null;
        /**
        * **telenutrition.clinical_encounter.department_id**
        * - `int4` in database
        * - Nullable, no default
        */
        department_id: number | null;
        /**
        * **telenutrition.clinical_encounter.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.clinical_encounter.encounter_type**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_type: string | null;
        /**
        * **telenutrition.clinical_encounter.encounter_date**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_date: string | null;
        /**
        * **telenutrition.clinical_encounter.actual_starttime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_starttime: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter.encounter_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        encounter_status: string;
        /**
        * **telenutrition.clinical_encounter.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by: string | null;
        /**
        * **telenutrition.clinical_encounter.assigned_to**
        * - `text` in database
        * - Nullable, no default
        */
        assigned_to: string | null;
        /**
        * **telenutrition.clinical_encounter.closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        closed_datetime: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter.closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        closed_by: string | null;
        /**
        * **telenutrition.clinical_encounter.deleted_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        deleted_datetime: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter.deleted_by**
        * - `text` in database
        * - Nullable, no default
        */
        deleted_by: string | null;
        /**
        * **telenutrition.clinical_encounter.specialty**
        * - `text` in database
        * - Nullable, default: `'Registered Dietitian Nutritionist'::text`
        */
        specialty: string | null;
        /**
        * **telenutrition.clinical_encounter.billing_tab_reviewed**
        * - `text` in database
        * - Nullable, no default
        */
        billing_tab_reviewed: string | null;
        /**
        * **telenutrition.clinical_encounter.documented_by**
        * - `text` in database
        * - Nullable, no default
        */
        documented_by: string | null;
        /**
        * **telenutrition.clinical_encounter.close_attempted_yn**
        * - `text` in database
        * - Nullable, no default
        */
        close_attempted_yn: string | null;
        /**
        * **telenutrition.clinical_encounter.last_reopened**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_reopened: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter.last_modified**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_modified: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter.previously_closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        previously_closed_datetime: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter.cancel_reason_note**
        * - `text` in database
        * - Nullable, no default
        */
        cancel_reason_note: string | null;
        /**
        * **telenutrition.clinical_encounter.patient_status_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_status_id: number | null;
        /**
        * **telenutrition.clinical_encounter.last_reopened_by**
        * - `text` in database
        * - Nullable, no default
        */
        last_reopened_by: string | null;
        /**
        * **telenutrition.clinical_encounter.previously_closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        previously_closed_by: string | null;
        /**
        * **telenutrition.clinical_encounter.specialty_id**
        * - `varchar` in database
        * - Nullable, default: `'071'::character varying`
        */
        specialty_id: string | null;
        /**
        * **telenutrition.clinical_encounter.actual_endtime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_endtime: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter.total_minutes**
        * - `int4` in database
        * - Generated column
        */
        total_minutes: number | null;
        /**
        * **telenutrition.clinical_encounter.units_billed**
        * - `int4` in database
        * - Nullable, no default
        */
        units_billed: number | null;
        /**
        * **telenutrition.clinical_encounter.diagnosis_code**
        * - `varchar` in database
        * - Nullable, default: `'Z71.3'::character varying`
        */
        diagnosis_code: string | null;
        /**
        * **telenutrition.clinical_encounter.billing_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        billing_code: string | null;
        /**
        * **telenutrition.clinical_encounter.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampTzString;
        /**
        * **telenutrition.clinical_encounter.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at: db.TimestampTzString;
        /**
        * **telenutrition.clinical_encounter.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data: db.JSONValue | null;
        /**
        * **telenutrition.clinical_encounter.timer_started_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_started_at: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter.timer_ended_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_ended_at: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter.oversight_comment**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_comment: string | null;
        /**
        * **telenutrition.clinical_encounter.oversight_by**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_by: string | null;
        /**
        * **telenutrition.clinical_encounter.oversight_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        oversight_at: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter.oversight_status**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_status: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.clinical_encounter.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, identity column
        */
        encounter_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.department_id**
        * - `int4` in database
        * - Nullable, no default
        */
        department_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.encounter_type**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.encounter_date**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_date?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.actual_starttime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_starttime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.encounter_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        encounter_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.assigned_to**
        * - `text` in database
        * - Nullable, no default
        */
        assigned_to?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        closed_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        closed_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.deleted_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        deleted_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.deleted_by**
        * - `text` in database
        * - Nullable, no default
        */
        deleted_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.specialty**
        * - `text` in database
        * - Nullable, default: `'Registered Dietitian Nutritionist'::text`
        */
        specialty?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.billing_tab_reviewed**
        * - `text` in database
        * - Nullable, no default
        */
        billing_tab_reviewed?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.documented_by**
        * - `text` in database
        * - Nullable, no default
        */
        documented_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.close_attempted_yn**
        * - `text` in database
        * - Nullable, no default
        */
        close_attempted_yn?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.last_reopened**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_reopened?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.last_modified**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_modified?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.previously_closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        previously_closed_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.cancel_reason_note**
        * - `text` in database
        * - Nullable, no default
        */
        cancel_reason_note?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.patient_status_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_status_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.last_reopened_by**
        * - `text` in database
        * - Nullable, no default
        */
        last_reopened_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.previously_closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        previously_closed_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.specialty_id**
        * - `varchar` in database
        * - Nullable, default: `'071'::character varying`
        */
        specialty_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.actual_endtime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_endtime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.total_minutes**
        * - `int4` in database
        * - Generated column
        */
        total_minutes?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.units_billed**
        * - `int4` in database
        * - Nullable, no default
        */
        units_billed?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.diagnosis_code**
        * - `varchar` in database
        * - Nullable, default: `'Z71.3'::character varying`
        */
        diagnosis_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.billing_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        billing_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.timer_started_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_started_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.timer_ended_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_ended_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.oversight_comment**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_comment?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.oversight_by**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.oversight_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        oversight_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter.oversight_status**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.clinical_encounter.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, identity column
        */
        encounter_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.department_id**
        * - `int4` in database
        * - Nullable, no default
        */
        department_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.encounter_type**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.encounter_date**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.actual_starttime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_starttime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.encounter_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        encounter_status: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.assigned_to**
        * - `text` in database
        * - Nullable, no default
        */
        assigned_to?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        closed_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        closed_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.deleted_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        deleted_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.deleted_by**
        * - `text` in database
        * - Nullable, no default
        */
        deleted_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.specialty**
        * - `text` in database
        * - Nullable, default: `'Registered Dietitian Nutritionist'::text`
        */
        specialty?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.billing_tab_reviewed**
        * - `text` in database
        * - Nullable, no default
        */
        billing_tab_reviewed?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.documented_by**
        * - `text` in database
        * - Nullable, no default
        */
        documented_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.close_attempted_yn**
        * - `text` in database
        * - Nullable, no default
        */
        close_attempted_yn?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.last_reopened**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_reopened?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.last_modified**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_modified?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.previously_closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        previously_closed_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.cancel_reason_note**
        * - `text` in database
        * - Nullable, no default
        */
        cancel_reason_note?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.patient_status_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_status_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.last_reopened_by**
        * - `text` in database
        * - Nullable, no default
        */
        last_reopened_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.previously_closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        previously_closed_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.specialty_id**
        * - `varchar` in database
        * - Nullable, default: `'071'::character varying`
        */
        specialty_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.actual_endtime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_endtime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.units_billed**
        * - `int4` in database
        * - Nullable, no default
        */
        units_billed?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.diagnosis_code**
        * - `varchar` in database
        * - Nullable, default: `'Z71.3'::character varying`
        */
        diagnosis_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.billing_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        billing_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.timer_started_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_started_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.timer_ended_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_ended_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.oversight_comment**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_comment?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.oversight_by**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.oversight_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        oversight_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter.oversight_status**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.clinical_encounter.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, identity column
        */
        encounter_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.department_id**
        * - `int4` in database
        * - Nullable, no default
        */
        department_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.encounter_type**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.encounter_date**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.actual_starttime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_starttime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.encounter_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        encounter_status?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.assigned_to**
        * - `text` in database
        * - Nullable, no default
        */
        assigned_to?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        closed_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        closed_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.deleted_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        deleted_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.deleted_by**
        * - `text` in database
        * - Nullable, no default
        */
        deleted_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.specialty**
        * - `text` in database
        * - Nullable, default: `'Registered Dietitian Nutritionist'::text`
        */
        specialty?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.billing_tab_reviewed**
        * - `text` in database
        * - Nullable, no default
        */
        billing_tab_reviewed?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.documented_by**
        * - `text` in database
        * - Nullable, no default
        */
        documented_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.close_attempted_yn**
        * - `text` in database
        * - Nullable, no default
        */
        close_attempted_yn?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.last_reopened**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_reopened?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.last_modified**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_modified?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.previously_closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        previously_closed_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.cancel_reason_note**
        * - `text` in database
        * - Nullable, no default
        */
        cancel_reason_note?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.patient_status_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_status_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.last_reopened_by**
        * - `text` in database
        * - Nullable, no default
        */
        last_reopened_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.previously_closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        previously_closed_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.specialty_id**
        * - `varchar` in database
        * - Nullable, default: `'071'::character varying`
        */
        specialty_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.actual_endtime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_endtime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.units_billed**
        * - `int4` in database
        * - Nullable, no default
        */
        units_billed?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.diagnosis_code**
        * - `varchar` in database
        * - Nullable, default: `'Z71.3'::character varying`
        */
        diagnosis_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.billing_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        billing_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.timer_started_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_started_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.timer_ended_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_ended_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.oversight_comment**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_comment?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.oversight_by**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.oversight_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        oversight_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter.oversight_status**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'clinical_encounter_pkey1';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.clinical_encounter_amendment**
     * - Table in database
     */
    export namespace clinical_encounter_amendment {
      export type Table = 'telenutrition.clinical_encounter_amendment';
      export interface Selectable {
        /**
        * **telenutrition.clinical_encounter_amendment.amendment_id**
        * - `int4` in database
        * - Generated column
        */
        amendment_id: number;
        /**
        * **telenutrition.clinical_encounter_amendment.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        encounter_id: number;
        /**
        * **telenutrition.clinical_encounter_amendment.units_billed**
        * - `int4` in database
        * - Nullable, no default
        */
        units_billed: number | null;
        /**
        * **telenutrition.clinical_encounter_amendment.billing_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        billing_code: string | null;
        /**
        * **telenutrition.clinical_encounter_amendment.reason**
        * - `text` in database
        * - Nullable, no default
        */
        reason: string | null;
        /**
        * **telenutrition.clinical_encounter_amendment.comments**
        * - `text` in database
        * - Nullable, no default
        */
        comments: string | null;
        /**
        * **telenutrition.clinical_encounter_amendment.status**
        * - `text` in database
        * - `NOT NULL`, default: `'pending'::text`
        */
        status: string;
        /**
        * **telenutrition.clinical_encounter_amendment.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.clinical_encounter_amendment.resolved_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        resolved_at: Date | null;
        /**
        * **telenutrition.clinical_encounter_amendment.resolved_by**
        * - `text` in database
        * - Nullable, no default
        */
        resolved_by: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.clinical_encounter_amendment.amendment_id**
        * - `int4` in database
        * - Generated column
        */
        amendment_id: number;
        /**
        * **telenutrition.clinical_encounter_amendment.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        encounter_id: number;
        /**
        * **telenutrition.clinical_encounter_amendment.units_billed**
        * - `int4` in database
        * - Nullable, no default
        */
        units_billed: number | null;
        /**
        * **telenutrition.clinical_encounter_amendment.billing_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        billing_code: string | null;
        /**
        * **telenutrition.clinical_encounter_amendment.reason**
        * - `text` in database
        * - Nullable, no default
        */
        reason: string | null;
        /**
        * **telenutrition.clinical_encounter_amendment.comments**
        * - `text` in database
        * - Nullable, no default
        */
        comments: string | null;
        /**
        * **telenutrition.clinical_encounter_amendment.status**
        * - `text` in database
        * - `NOT NULL`, default: `'pending'::text`
        */
        status: string;
        /**
        * **telenutrition.clinical_encounter_amendment.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.clinical_encounter_amendment.resolved_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        resolved_at: db.TimestampString | null;
        /**
        * **telenutrition.clinical_encounter_amendment.resolved_by**
        * - `text` in database
        * - Nullable, no default
        */
        resolved_by: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.clinical_encounter_amendment.amendment_id**
        * - `int4` in database
        * - Generated column
        */
        amendment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_amendment.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        encounter_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_amendment.units_billed**
        * - `int4` in database
        * - Nullable, no default
        */
        units_billed?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_amendment.billing_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        billing_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_amendment.reason**
        * - `text` in database
        * - Nullable, no default
        */
        reason?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_amendment.comments**
        * - `text` in database
        * - Nullable, no default
        */
        comments?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_amendment.status**
        * - `text` in database
        * - `NOT NULL`, default: `'pending'::text`
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_amendment.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_amendment.resolved_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        resolved_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_amendment.resolved_by**
        * - `text` in database
        * - Nullable, no default
        */
        resolved_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.clinical_encounter_amendment.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        encounter_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_amendment.units_billed**
        * - `int4` in database
        * - Nullable, no default
        */
        units_billed?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_amendment.billing_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        billing_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_amendment.reason**
        * - `text` in database
        * - Nullable, no default
        */
        reason?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_amendment.comments**
        * - `text` in database
        * - Nullable, no default
        */
        comments?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_amendment.status**
        * - `text` in database
        * - `NOT NULL`, default: `'pending'::text`
        */
        status?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_amendment.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_amendment.resolved_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        resolved_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_amendment.resolved_by**
        * - `text` in database
        * - Nullable, no default
        */
        resolved_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.clinical_encounter_amendment.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        encounter_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_amendment.units_billed**
        * - `int4` in database
        * - Nullable, no default
        */
        units_billed?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_amendment.billing_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        billing_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_amendment.reason**
        * - `text` in database
        * - Nullable, no default
        */
        reason?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_amendment.comments**
        * - `text` in database
        * - Nullable, no default
        */
        comments?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_amendment.status**
        * - `text` in database
        * - `NOT NULL`, default: `'pending'::text`
        */
        status?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_amendment.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_amendment.resolved_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        resolved_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_amendment.resolved_by**
        * - `text` in database
        * - Nullable, no default
        */
        resolved_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'clinical_encounter_amendment_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.clinical_encounter_history**
     * - Table in database
     */
    export namespace clinical_encounter_history {
      export type Table = 'telenutrition.clinical_encounter_history';
      export interface Selectable {
        /**
        * **telenutrition.clinical_encounter_history.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        encounter_id: number;
        /**
        * **telenutrition.clinical_encounter_history.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
        /**
        * **telenutrition.clinical_encounter_history.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id: number | null;
        /**
        * **telenutrition.clinical_encounter_history.department_id**
        * - `int4` in database
        * - Nullable, no default
        */
        department_id: number | null;
        /**
        * **telenutrition.clinical_encounter_history.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.clinical_encounter_history.encounter_type**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_type: string | null;
        /**
        * **telenutrition.clinical_encounter_history.encounter_date**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_date: string | null;
        /**
        * **telenutrition.clinical_encounter_history.actual_starttime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_starttime: Date | null;
        /**
        * **telenutrition.clinical_encounter_history.encounter_status**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_status: string | null;
        /**
        * **telenutrition.clinical_encounter_history.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by: string | null;
        /**
        * **telenutrition.clinical_encounter_history.assigned_to**
        * - `text` in database
        * - Nullable, no default
        */
        assigned_to: string | null;
        /**
        * **telenutrition.clinical_encounter_history.closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        closed_datetime: Date | null;
        /**
        * **telenutrition.clinical_encounter_history.closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        closed_by: string | null;
        /**
        * **telenutrition.clinical_encounter_history.deleted_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        deleted_datetime: Date | null;
        /**
        * **telenutrition.clinical_encounter_history.deleted_by**
        * - `text` in database
        * - Nullable, no default
        */
        deleted_by: string | null;
        /**
        * **telenutrition.clinical_encounter_history.specialty**
        * - `text` in database
        * - Nullable, no default
        */
        specialty: string | null;
        /**
        * **telenutrition.clinical_encounter_history.billing_tab_reviewed**
        * - `text` in database
        * - Nullable, no default
        */
        billing_tab_reviewed: string | null;
        /**
        * **telenutrition.clinical_encounter_history.documented_by**
        * - `text` in database
        * - Nullable, no default
        */
        documented_by: string | null;
        /**
        * **telenutrition.clinical_encounter_history.close_attempted_yn**
        * - `text` in database
        * - Nullable, no default
        */
        close_attempted_yn: string | null;
        /**
        * **telenutrition.clinical_encounter_history.last_reopened**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_reopened: Date | null;
        /**
        * **telenutrition.clinical_encounter_history.last_modified**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_modified: Date | null;
        /**
        * **telenutrition.clinical_encounter_history.previously_closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        previously_closed_datetime: Date | null;
        /**
        * **telenutrition.clinical_encounter_history.cancel_reason_note**
        * - `text` in database
        * - Nullable, no default
        */
        cancel_reason_note: string | null;
        /**
        * **telenutrition.clinical_encounter_history.patient_status_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_status_id: number | null;
        /**
        * **telenutrition.clinical_encounter_history.last_reopened_by**
        * - `text` in database
        * - Nullable, no default
        */
        last_reopened_by: string | null;
        /**
        * **telenutrition.clinical_encounter_history.previously_closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        previously_closed_by: string | null;
        /**
        * **telenutrition.clinical_encounter_history.specialty_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        specialty_id: string | null;
        /**
        * **telenutrition.clinical_encounter_history.actual_endtime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_endtime: Date | null;
        /**
        * **telenutrition.clinical_encounter_history.total_minutes**
        * - `int4` in database
        * - Nullable, no default
        */
        total_minutes: number | null;
        /**
        * **telenutrition.clinical_encounter_history.units_billed**
        * - `int4` in database
        * - Nullable, no default
        */
        units_billed: number | null;
        /**
        * **telenutrition.clinical_encounter_history.diagnosis_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        diagnosis_code: string | null;
        /**
        * **telenutrition.clinical_encounter_history.billing_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        billing_code: string | null;
        /**
        * **telenutrition.clinical_encounter_history.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        created_at: Date;
        /**
        * **telenutrition.clinical_encounter_history.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        updated_at: Date;
        /**
        * **telenutrition.clinical_encounter_history.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data: db.JSONValue | null;
        /**
        * **telenutrition.clinical_encounter_history.timer_started_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_started_at: Date | null;
        /**
        * **telenutrition.clinical_encounter_history.timer_ended_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_ended_at: Date | null;
        /**
        * **telenutrition.clinical_encounter_history.oversight_comment**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_comment: string | null;
        /**
        * **telenutrition.clinical_encounter_history.oversight_by**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_by: string | null;
        /**
        * **telenutrition.clinical_encounter_history.oversight_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        oversight_at: Date | null;
        /**
        * **telenutrition.clinical_encounter_history.oversight_status**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_status: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.clinical_encounter_history.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        encounter_id: number;
        /**
        * **telenutrition.clinical_encounter_history.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
        /**
        * **telenutrition.clinical_encounter_history.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id: number | null;
        /**
        * **telenutrition.clinical_encounter_history.department_id**
        * - `int4` in database
        * - Nullable, no default
        */
        department_id: number | null;
        /**
        * **telenutrition.clinical_encounter_history.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.clinical_encounter_history.encounter_type**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_type: string | null;
        /**
        * **telenutrition.clinical_encounter_history.encounter_date**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_date: string | null;
        /**
        * **telenutrition.clinical_encounter_history.actual_starttime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_starttime: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter_history.encounter_status**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_status: string | null;
        /**
        * **telenutrition.clinical_encounter_history.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by: string | null;
        /**
        * **telenutrition.clinical_encounter_history.assigned_to**
        * - `text` in database
        * - Nullable, no default
        */
        assigned_to: string | null;
        /**
        * **telenutrition.clinical_encounter_history.closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        closed_datetime: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter_history.closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        closed_by: string | null;
        /**
        * **telenutrition.clinical_encounter_history.deleted_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        deleted_datetime: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter_history.deleted_by**
        * - `text` in database
        * - Nullable, no default
        */
        deleted_by: string | null;
        /**
        * **telenutrition.clinical_encounter_history.specialty**
        * - `text` in database
        * - Nullable, no default
        */
        specialty: string | null;
        /**
        * **telenutrition.clinical_encounter_history.billing_tab_reviewed**
        * - `text` in database
        * - Nullable, no default
        */
        billing_tab_reviewed: string | null;
        /**
        * **telenutrition.clinical_encounter_history.documented_by**
        * - `text` in database
        * - Nullable, no default
        */
        documented_by: string | null;
        /**
        * **telenutrition.clinical_encounter_history.close_attempted_yn**
        * - `text` in database
        * - Nullable, no default
        */
        close_attempted_yn: string | null;
        /**
        * **telenutrition.clinical_encounter_history.last_reopened**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_reopened: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter_history.last_modified**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_modified: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter_history.previously_closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        previously_closed_datetime: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter_history.cancel_reason_note**
        * - `text` in database
        * - Nullable, no default
        */
        cancel_reason_note: string | null;
        /**
        * **telenutrition.clinical_encounter_history.patient_status_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_status_id: number | null;
        /**
        * **telenutrition.clinical_encounter_history.last_reopened_by**
        * - `text` in database
        * - Nullable, no default
        */
        last_reopened_by: string | null;
        /**
        * **telenutrition.clinical_encounter_history.previously_closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        previously_closed_by: string | null;
        /**
        * **telenutrition.clinical_encounter_history.specialty_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        specialty_id: string | null;
        /**
        * **telenutrition.clinical_encounter_history.actual_endtime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_endtime: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter_history.total_minutes**
        * - `int4` in database
        * - Nullable, no default
        */
        total_minutes: number | null;
        /**
        * **telenutrition.clinical_encounter_history.units_billed**
        * - `int4` in database
        * - Nullable, no default
        */
        units_billed: number | null;
        /**
        * **telenutrition.clinical_encounter_history.diagnosis_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        diagnosis_code: string | null;
        /**
        * **telenutrition.clinical_encounter_history.billing_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        billing_code: string | null;
        /**
        * **telenutrition.clinical_encounter_history.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        created_at: db.TimestampTzString;
        /**
        * **telenutrition.clinical_encounter_history.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        updated_at: db.TimestampTzString;
        /**
        * **telenutrition.clinical_encounter_history.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data: db.JSONValue | null;
        /**
        * **telenutrition.clinical_encounter_history.timer_started_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_started_at: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter_history.timer_ended_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_ended_at: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter_history.oversight_comment**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_comment: string | null;
        /**
        * **telenutrition.clinical_encounter_history.oversight_by**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_by: string | null;
        /**
        * **telenutrition.clinical_encounter_history.oversight_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        oversight_at: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter_history.oversight_status**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_status: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.clinical_encounter_history.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        encounter_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.department_id**
        * - `int4` in database
        * - Nullable, no default
        */
        department_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.encounter_type**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.encounter_date**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_date?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.actual_starttime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_starttime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.encounter_status**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.assigned_to**
        * - `text` in database
        * - Nullable, no default
        */
        assigned_to?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        closed_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        closed_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.deleted_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        deleted_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.deleted_by**
        * - `text` in database
        * - Nullable, no default
        */
        deleted_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.specialty**
        * - `text` in database
        * - Nullable, no default
        */
        specialty?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.billing_tab_reviewed**
        * - `text` in database
        * - Nullable, no default
        */
        billing_tab_reviewed?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.documented_by**
        * - `text` in database
        * - Nullable, no default
        */
        documented_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.close_attempted_yn**
        * - `text` in database
        * - Nullable, no default
        */
        close_attempted_yn?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.last_reopened**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_reopened?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.last_modified**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_modified?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.previously_closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        previously_closed_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.cancel_reason_note**
        * - `text` in database
        * - Nullable, no default
        */
        cancel_reason_note?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.patient_status_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_status_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.last_reopened_by**
        * - `text` in database
        * - Nullable, no default
        */
        last_reopened_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.previously_closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        previously_closed_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.specialty_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        specialty_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.actual_endtime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_endtime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.total_minutes**
        * - `int4` in database
        * - Nullable, no default
        */
        total_minutes?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.units_billed**
        * - `int4` in database
        * - Nullable, no default
        */
        units_billed?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.diagnosis_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        diagnosis_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.billing_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        billing_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.timer_started_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_started_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.timer_ended_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_ended_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.oversight_comment**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_comment?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.oversight_by**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.oversight_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        oversight_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_history.oversight_status**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.clinical_encounter_history.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        encounter_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.department_id**
        * - `int4` in database
        * - Nullable, no default
        */
        department_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.encounter_type**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.encounter_date**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.actual_starttime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_starttime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.encounter_status**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.assigned_to**
        * - `text` in database
        * - Nullable, no default
        */
        assigned_to?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        closed_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        closed_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.deleted_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        deleted_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.deleted_by**
        * - `text` in database
        * - Nullable, no default
        */
        deleted_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.specialty**
        * - `text` in database
        * - Nullable, no default
        */
        specialty?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.billing_tab_reviewed**
        * - `text` in database
        * - Nullable, no default
        */
        billing_tab_reviewed?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.documented_by**
        * - `text` in database
        * - Nullable, no default
        */
        documented_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.close_attempted_yn**
        * - `text` in database
        * - Nullable, no default
        */
        close_attempted_yn?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.last_reopened**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_reopened?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.last_modified**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_modified?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.previously_closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        previously_closed_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.cancel_reason_note**
        * - `text` in database
        * - Nullable, no default
        */
        cancel_reason_note?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.patient_status_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_status_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.last_reopened_by**
        * - `text` in database
        * - Nullable, no default
        */
        last_reopened_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.previously_closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        previously_closed_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.specialty_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        specialty_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.actual_endtime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_endtime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.total_minutes**
        * - `int4` in database
        * - Nullable, no default
        */
        total_minutes?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.units_billed**
        * - `int4` in database
        * - Nullable, no default
        */
        units_billed?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.diagnosis_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        diagnosis_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.billing_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        billing_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        created_at: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        updated_at: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.timer_started_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_started_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.timer_ended_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_ended_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.oversight_comment**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_comment?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.oversight_by**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.oversight_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        oversight_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_history.oversight_status**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.clinical_encounter_history.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        encounter_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.department_id**
        * - `int4` in database
        * - Nullable, no default
        */
        department_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.encounter_type**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.encounter_date**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.actual_starttime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_starttime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.encounter_status**
        * - `text` in database
        * - Nullable, no default
        */
        encounter_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.assigned_to**
        * - `text` in database
        * - Nullable, no default
        */
        assigned_to?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        closed_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        closed_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.deleted_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        deleted_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.deleted_by**
        * - `text` in database
        * - Nullable, no default
        */
        deleted_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.specialty**
        * - `text` in database
        * - Nullable, no default
        */
        specialty?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.billing_tab_reviewed**
        * - `text` in database
        * - Nullable, no default
        */
        billing_tab_reviewed?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.documented_by**
        * - `text` in database
        * - Nullable, no default
        */
        documented_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.close_attempted_yn**
        * - `text` in database
        * - Nullable, no default
        */
        close_attempted_yn?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.last_reopened**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_reopened?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.last_modified**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        last_modified?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.previously_closed_datetime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        previously_closed_datetime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.cancel_reason_note**
        * - `text` in database
        * - Nullable, no default
        */
        cancel_reason_note?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.patient_status_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_status_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.last_reopened_by**
        * - `text` in database
        * - Nullable, no default
        */
        last_reopened_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.previously_closed_by**
        * - `text` in database
        * - Nullable, no default
        */
        previously_closed_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.specialty_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        specialty_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.actual_endtime**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        actual_endtime?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.total_minutes**
        * - `int4` in database
        * - Nullable, no default
        */
        total_minutes?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.units_billed**
        * - `int4` in database
        * - Nullable, no default
        */
        units_billed?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.diagnosis_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        diagnosis_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.billing_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        billing_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.timer_started_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_started_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.timer_ended_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        timer_ended_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.oversight_comment**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_comment?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.oversight_by**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.oversight_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        oversight_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_history.oversight_status**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = never;
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.clinical_encounter_oversight**
     * - Table in database
     */
    export namespace clinical_encounter_oversight {
      export type Table = 'telenutrition.clinical_encounter_oversight';
      export interface Selectable {
        /**
        * **telenutrition.clinical_encounter_oversight.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.clinical_encounter_encounter_id_seq'::regclass)`
        */
        encounter_id: number;
        /**
        * **telenutrition.clinical_encounter_oversight.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
        /**
        * **telenutrition.clinical_encounter_oversight.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        updated_at: Date | null;
        /**
        * **telenutrition.clinical_encounter_oversight.oversight_by**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_by: string | null;
        /**
        * **telenutrition.clinical_encounter_oversight.oversight_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        oversight_at: Date | null;
        /**
        * **telenutrition.clinical_encounter_oversight.oversight_status**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_status: string | null;
        /**
        * **telenutrition.clinical_encounter_oversight.cpt_modifier**
        * - `text` in database
        * - Nullable, no default
        */
        cpt_modifier: string | null;
        /**
        * **telenutrition.clinical_encounter_oversight.cpt_code**
        * - `int4` in database
        * - Nullable, no default
        */
        cpt_code: number | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.clinical_encounter_oversight.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.clinical_encounter_encounter_id_seq'::regclass)`
        */
        encounter_id: number;
        /**
        * **telenutrition.clinical_encounter_oversight.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
        /**
        * **telenutrition.clinical_encounter_oversight.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        updated_at: db.TimestampString | null;
        /**
        * **telenutrition.clinical_encounter_oversight.oversight_by**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_by: string | null;
        /**
        * **telenutrition.clinical_encounter_oversight.oversight_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        oversight_at: db.TimestampTzString | null;
        /**
        * **telenutrition.clinical_encounter_oversight.oversight_status**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_status: string | null;
        /**
        * **telenutrition.clinical_encounter_oversight.cpt_modifier**
        * - `text` in database
        * - Nullable, no default
        */
        cpt_modifier: string | null;
        /**
        * **telenutrition.clinical_encounter_oversight.cpt_code**
        * - `int4` in database
        * - Nullable, no default
        */
        cpt_code: number | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.clinical_encounter_oversight.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.clinical_encounter_encounter_id_seq'::regclass)`
        */
        encounter_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_oversight.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_oversight.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_oversight.oversight_by**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_oversight.oversight_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        oversight_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_oversight.oversight_status**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_oversight.cpt_modifier**
        * - `text` in database
        * - Nullable, no default
        */
        cpt_modifier?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_oversight.cpt_code**
        * - `int4` in database
        * - Nullable, no default
        */
        cpt_code?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.clinical_encounter_oversight.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.clinical_encounter_encounter_id_seq'::regclass)`
        */
        encounter_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_oversight.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_oversight.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_oversight.oversight_by**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_oversight.oversight_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        oversight_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_oversight.oversight_status**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_oversight.cpt_modifier**
        * - `text` in database
        * - Nullable, no default
        */
        cpt_modifier?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_oversight.cpt_code**
        * - `int4` in database
        * - Nullable, no default
        */
        cpt_code?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.clinical_encounter_oversight.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.clinical_encounter_encounter_id_seq'::regclass)`
        */
        encounter_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_oversight.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_oversight.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_oversight.oversight_by**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_oversight.oversight_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        oversight_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_oversight.oversight_status**
        * - `text` in database
        * - Nullable, no default
        */
        oversight_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_oversight.cpt_modifier**
        * - `text` in database
        * - Nullable, no default
        */
        cpt_modifier?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_oversight.cpt_code**
        * - `int4` in database
        * - Nullable, no default
        */
        cpt_code?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'clinical_encounter_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.clinical_encounter_screening_questionnaire**
     * - Table in database
     */
    export namespace clinical_encounter_screening_questionnaire {
      export type Table = 'telenutrition.clinical_encounter_screening_questionnaire';
      export interface Selectable {
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.questionnaire_id**
        * - `int4` in database
        * - Generated column
        */
        questionnaire_id: number;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.encounter_id**
        * - `int4` in database
        * - Nullable, no default
        */
        encounter_id: number | null;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id: number;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.questionnaire_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        questionnaire_type: string;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.form_data**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        form_data: db.JSONValue;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.determination_code**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        determination_code: string;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.determination_meta**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        determination_meta: db.JSONValue;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.questionnaire_id**
        * - `int4` in database
        * - Generated column
        */
        questionnaire_id: number;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.encounter_id**
        * - `int4` in database
        * - Nullable, no default
        */
        encounter_id: number | null;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id: number;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.questionnaire_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        questionnaire_type: string;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.form_data**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        form_data: db.JSONValue;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.determination_code**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        determination_code: string;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.determination_meta**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        determination_meta: db.JSONValue;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.questionnaire_id**
        * - `int4` in database
        * - Generated column
        */
        questionnaire_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.encounter_id**
        * - `int4` in database
        * - Nullable, no default
        */
        encounter_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.questionnaire_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        questionnaire_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.form_data**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        form_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.determination_code**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        determination_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.determination_meta**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        determination_meta?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.encounter_id**
        * - `int4` in database
        * - Nullable, no default
        */
        encounter_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.questionnaire_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        questionnaire_type: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.form_data**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        form_data: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.determination_code**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        determination_code: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.determination_meta**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        determination_meta: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.encounter_id**
        * - `int4` in database
        * - Nullable, no default
        */
        encounter_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.questionnaire_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        questionnaire_type?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.form_data**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        form_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.determination_code**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        determination_code?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.determination_meta**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        determination_meta?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment>;
        /**
        * **telenutrition.clinical_encounter_screening_questionnaire.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'clinical_encounter_screening_questionnaire_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.common_verification**
     * - Table in database
     */
    export namespace common_verification {
      export type Table = 'telenutrition.common_verification';
      export interface Selectable {
        /**
        * **telenutrition.common_verification.verification_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.common_verification_verification_id_seq'::regclass)`
        */
        verification_id: number;
        /**
        * **telenutrition.common_verification.subject**
        * - `int4` in database
        * - Nullable, no default
        */
        subject: number | null;
        /**
        * **telenutrition.common_verification.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **telenutrition.common_verification.sms**
        * - `varchar` in database
        * - Nullable, no default
        */
        sms: string | null;
        /**
        * **telenutrition.common_verification.call**
        * - `varchar` in database
        * - Nullable, no default
        */
        call: string | null;
        /**
        * **telenutrition.common_verification.code**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        code: number;
        /**
        * **telenutrition.common_verification.attempts**
        * - `int4` in database
        * - `NOT NULL`, default: `0`
        */
        attempts: number;
        /**
        * **telenutrition.common_verification.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.common_verification.type**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        type: string;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.common_verification.verification_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.common_verification_verification_id_seq'::regclass)`
        */
        verification_id: number;
        /**
        * **telenutrition.common_verification.subject**
        * - `int4` in database
        * - Nullable, no default
        */
        subject: number | null;
        /**
        * **telenutrition.common_verification.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **telenutrition.common_verification.sms**
        * - `varchar` in database
        * - Nullable, no default
        */
        sms: string | null;
        /**
        * **telenutrition.common_verification.call**
        * - `varchar` in database
        * - Nullable, no default
        */
        call: string | null;
        /**
        * **telenutrition.common_verification.code**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        code: number;
        /**
        * **telenutrition.common_verification.attempts**
        * - `int4` in database
        * - `NOT NULL`, default: `0`
        */
        attempts: number;
        /**
        * **telenutrition.common_verification.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.common_verification.type**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        type: string;
      }
      export interface Whereable {
        /**
        * **telenutrition.common_verification.verification_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.common_verification_verification_id_seq'::regclass)`
        */
        verification_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.common_verification.subject**
        * - `int4` in database
        * - Nullable, no default
        */
        subject?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.common_verification.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.common_verification.sms**
        * - `varchar` in database
        * - Nullable, no default
        */
        sms?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.common_verification.call**
        * - `varchar` in database
        * - Nullable, no default
        */
        call?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.common_verification.code**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        code?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.common_verification.attempts**
        * - `int4` in database
        * - `NOT NULL`, default: `0`
        */
        attempts?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.common_verification.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.common_verification.type**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.common_verification.verification_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.common_verification_verification_id_seq'::regclass)`
        */
        verification_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.common_verification.subject**
        * - `int4` in database
        * - Nullable, no default
        */
        subject?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.common_verification.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.common_verification.sms**
        * - `varchar` in database
        * - Nullable, no default
        */
        sms?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.common_verification.call**
        * - `varchar` in database
        * - Nullable, no default
        */
        call?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.common_verification.code**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        code: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.common_verification.attempts**
        * - `int4` in database
        * - `NOT NULL`, default: `0`
        */
        attempts?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.common_verification.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.common_verification.type**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        type: string | db.Parameter<string> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.common_verification.verification_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.common_verification_verification_id_seq'::regclass)`
        */
        verification_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.common_verification.subject**
        * - `int4` in database
        * - Nullable, no default
        */
        subject?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.common_verification.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.common_verification.sms**
        * - `varchar` in database
        * - Nullable, no default
        */
        sms?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.common_verification.call**
        * - `varchar` in database
        * - Nullable, no default
        */
        call?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.common_verification.code**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        code?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.common_verification.attempts**
        * - `int4` in database
        * - `NOT NULL`, default: `0`
        */
        attempts?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.common_verification.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.common_verification.type**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        type?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_patient_verification_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.common_verification_method**
     * - Table in database
     */
    export namespace common_verification_method {
      export type Table = 'telenutrition.common_verification_method';
      export interface Selectable {
        /**
        * **telenutrition.common_verification_method.verification_method_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.common_verification_method_verification_method_id_seq'::regclass)`
        */
        verification_method_id: number;
        /**
        * **telenutrition.common_verification_method.method**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        method: string;
        /**
        * **telenutrition.common_verification_method.value**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        value: string;
        /**
        * **telenutrition.common_verification_method.verification_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        verification_id: number;
        /**
        * **telenutrition.common_verification_method.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.common_verification_method.verification_method_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.common_verification_method_verification_method_id_seq'::regclass)`
        */
        verification_method_id: number;
        /**
        * **telenutrition.common_verification_method.method**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        method: string;
        /**
        * **telenutrition.common_verification_method.value**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        value: string;
        /**
        * **telenutrition.common_verification_method.verification_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        verification_id: number;
        /**
        * **telenutrition.common_verification_method.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.common_verification_method.verification_method_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.common_verification_method_verification_method_id_seq'::regclass)`
        */
        verification_method_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.common_verification_method.method**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        method?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.common_verification_method.value**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        value?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.common_verification_method.verification_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        verification_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.common_verification_method.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.common_verification_method.verification_method_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.common_verification_method_verification_method_id_seq'::regclass)`
        */
        verification_method_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.common_verification_method.method**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        method: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.common_verification_method.value**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        value: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.common_verification_method.verification_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        verification_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.common_verification_method.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.common_verification_method.verification_method_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.common_verification_method_verification_method_id_seq'::regclass)`
        */
        verification_method_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.common_verification_method.method**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        method?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.common_verification_method.value**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        value?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.common_verification_method.verification_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        verification_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.common_verification_method.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_patient_verification_method_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.food_offering_type**
     * - Table in database
     */
    export namespace food_offering_type {
      export type Table = 'telenutrition.food_offering_type';
      export interface Selectable {
        /**
        * **telenutrition.food_offering_type.food_offering_type_id**
        * - `int4` in database
        * - Generated column
        */
        food_offering_type_id: number;
        /**
        * **telenutrition.food_offering_type.offering_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        offering_type: string;
        /**
        * **telenutrition.food_offering_type.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.food_offering_type.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
        /**
        * **telenutrition.food_offering_type.display_label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        display_label: string;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.food_offering_type.food_offering_type_id**
        * - `int4` in database
        * - Generated column
        */
        food_offering_type_id: number;
        /**
        * **telenutrition.food_offering_type.offering_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        offering_type: string;
        /**
        * **telenutrition.food_offering_type.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.food_offering_type.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
        /**
        * **telenutrition.food_offering_type.display_label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        display_label: string;
      }
      export interface Whereable {
        /**
        * **telenutrition.food_offering_type.food_offering_type_id**
        * - `int4` in database
        * - Generated column
        */
        food_offering_type_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_offering_type.offering_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        offering_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_offering_type.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_offering_type.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_offering_type.display_label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        display_label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.food_offering_type.offering_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        offering_type: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.food_offering_type.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.food_offering_type.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.food_offering_type.display_label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        display_label: string | db.Parameter<string> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.food_offering_type.offering_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        offering_type?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.food_offering_type.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.food_offering_type.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.food_offering_type.display_label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        display_label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      }
      export type UniqueIndex = 'food_offering_type_offering_type_key' | 'food_offering_type_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.food_offering_type_history**
     * - Table in database
     */
    export namespace food_offering_type_history {
      export type Table = 'telenutrition.food_offering_type_history';
      export interface Selectable {
        /**
        * **telenutrition.food_offering_type_history.event_id**
        * - `int4` in database
        * - Generated column
        */
        event_id: number;
        /**
        * **telenutrition.food_offering_type_history.food_offering_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_offering_type_id: number;
        /**
        * **telenutrition.food_offering_type_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type: string;
        /**
        * **telenutrition.food_offering_type_history.offering_type**
        * - `text` in database
        * - Nullable, no default
        */
        offering_type: string | null;
        /**
        * **telenutrition.food_offering_type_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.food_offering_type_history.event_id**
        * - `int4` in database
        * - Generated column
        */
        event_id: number;
        /**
        * **telenutrition.food_offering_type_history.food_offering_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_offering_type_id: number;
        /**
        * **telenutrition.food_offering_type_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type: string;
        /**
        * **telenutrition.food_offering_type_history.offering_type**
        * - `text` in database
        * - Nullable, no default
        */
        offering_type: string | null;
        /**
        * **telenutrition.food_offering_type_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.food_offering_type_history.event_id**
        * - `int4` in database
        * - Generated column
        */
        event_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_offering_type_history.food_offering_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_offering_type_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_offering_type_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_offering_type_history.offering_type**
        * - `text` in database
        * - Nullable, no default
        */
        offering_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_offering_type_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.food_offering_type_history.food_offering_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_offering_type_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.food_offering_type_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.food_offering_type_history.offering_type**
        * - `text` in database
        * - Nullable, no default
        */
        offering_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.food_offering_type_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.food_offering_type_history.food_offering_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_offering_type_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.food_offering_type_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.food_offering_type_history.offering_type**
        * - `text` in database
        * - Nullable, no default
        */
        offering_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.food_offering_type_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'food_offering_type_history_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.food_vendor**
     * - Table in database
     */
    export namespace food_vendor {
      export type Table = 'telenutrition.food_vendor';
      export interface Selectable {
        /**
        * **telenutrition.food_vendor.food_vendor_id**
        * - `int4` in database
        * - Generated column
        */
        food_vendor_id: number;
        /**
        * **telenutrition.food_vendor.vendor_code**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        vendor_code: string;
        /**
        * **telenutrition.food_vendor.vegetarian_options**
        * - `bool` in database
        * - Nullable, default: `false`
        */
        vegetarian_options: boolean | null;
        /**
        * **telenutrition.food_vendor.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.food_vendor.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
        /**
        * **telenutrition.food_vendor.display_label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        display_label: string;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.food_vendor.food_vendor_id**
        * - `int4` in database
        * - Generated column
        */
        food_vendor_id: number;
        /**
        * **telenutrition.food_vendor.vendor_code**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        vendor_code: string;
        /**
        * **telenutrition.food_vendor.vegetarian_options**
        * - `bool` in database
        * - Nullable, default: `false`
        */
        vegetarian_options: boolean | null;
        /**
        * **telenutrition.food_vendor.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.food_vendor.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
        /**
        * **telenutrition.food_vendor.display_label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        display_label: string;
      }
      export interface Whereable {
        /**
        * **telenutrition.food_vendor.food_vendor_id**
        * - `int4` in database
        * - Generated column
        */
        food_vendor_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_vendor.vendor_code**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        vendor_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_vendor.vegetarian_options**
        * - `bool` in database
        * - Nullable, default: `false`
        */
        vegetarian_options?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_vendor.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_vendor.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_vendor.display_label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        display_label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.food_vendor.vendor_code**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        vendor_code: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.food_vendor.vegetarian_options**
        * - `bool` in database
        * - Nullable, default: `false`
        */
        vegetarian_options?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.food_vendor.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.food_vendor.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.food_vendor.display_label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        display_label: string | db.Parameter<string> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.food_vendor.vendor_code**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        vendor_code?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.food_vendor.vegetarian_options**
        * - `bool` in database
        * - Nullable, default: `false`
        */
        vegetarian_options?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.food_vendor.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.food_vendor.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.food_vendor.display_label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        display_label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      }
      export type UniqueIndex = 'food_vendor_pkey' | 'food_vendor_vendor_code_key';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.food_vendor_history**
     * - Table in database
     */
    export namespace food_vendor_history {
      export type Table = 'telenutrition.food_vendor_history';
      export interface Selectable {
        /**
        * **telenutrition.food_vendor_history.event_id**
        * - `int4` in database
        * - Generated column
        */
        event_id: number;
        /**
        * **telenutrition.food_vendor_history.food_vendor_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_vendor_id: number;
        /**
        * **telenutrition.food_vendor_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type: string;
        /**
        * **telenutrition.food_vendor_history.vendor_code**
        * - `text` in database
        * - Nullable, no default
        */
        vendor_code: string | null;
        /**
        * **telenutrition.food_vendor_history.vegetarian_options**
        * - `bool` in database
        * - Nullable, no default
        */
        vegetarian_options: boolean | null;
        /**
        * **telenutrition.food_vendor_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.food_vendor_history.event_id**
        * - `int4` in database
        * - Generated column
        */
        event_id: number;
        /**
        * **telenutrition.food_vendor_history.food_vendor_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_vendor_id: number;
        /**
        * **telenutrition.food_vendor_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type: string;
        /**
        * **telenutrition.food_vendor_history.vendor_code**
        * - `text` in database
        * - Nullable, no default
        */
        vendor_code: string | null;
        /**
        * **telenutrition.food_vendor_history.vegetarian_options**
        * - `bool` in database
        * - Nullable, no default
        */
        vegetarian_options: boolean | null;
        /**
        * **telenutrition.food_vendor_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.food_vendor_history.event_id**
        * - `int4` in database
        * - Generated column
        */
        event_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_vendor_history.food_vendor_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_vendor_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_vendor_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_vendor_history.vendor_code**
        * - `text` in database
        * - Nullable, no default
        */
        vendor_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_vendor_history.vegetarian_options**
        * - `bool` in database
        * - Nullable, no default
        */
        vegetarian_options?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.food_vendor_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.food_vendor_history.food_vendor_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_vendor_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.food_vendor_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.food_vendor_history.vendor_code**
        * - `text` in database
        * - Nullable, no default
        */
        vendor_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.food_vendor_history.vegetarian_options**
        * - `bool` in database
        * - Nullable, no default
        */
        vegetarian_options?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.food_vendor_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.food_vendor_history.food_vendor_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        food_vendor_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.food_vendor_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.food_vendor_history.vendor_code**
        * - `text` in database
        * - Nullable, no default
        */
        vendor_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.food_vendor_history.vegetarian_options**
        * - `bool` in database
        * - Nullable, no default
        */
        vegetarian_options?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.food_vendor_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'food_vendor_history_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.historical_athena_encounter_raw**
     * - Table in database
     */
    export namespace historical_athena_encounter_raw {
      export type Table = 'telenutrition.historical_athena_encounter_raw';
      export interface Selectable {
        /**
        * **telenutrition.historical_athena_encounter_raw.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        encounter_id: number;
        /**
        * **telenutrition.historical_athena_encounter_raw.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id: number | null;
        /**
        * **telenutrition.historical_athena_encounter_raw.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
        /**
        * **telenutrition.historical_athena_encounter_raw.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data: db.JSONValue | null;
        /**
        * **telenutrition.historical_athena_encounter_raw.encounter_date**
        * - `date` in database
        * - Nullable, no default
        */
        encounter_date: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.historical_athena_encounter_raw.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        encounter_id: number;
        /**
        * **telenutrition.historical_athena_encounter_raw.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id: number | null;
        /**
        * **telenutrition.historical_athena_encounter_raw.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
        /**
        * **telenutrition.historical_athena_encounter_raw.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data: db.JSONValue | null;
        /**
        * **telenutrition.historical_athena_encounter_raw.encounter_date**
        * - `date` in database
        * - Nullable, no default
        */
        encounter_date: db.DateString | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.historical_athena_encounter_raw.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        encounter_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.historical_athena_encounter_raw.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.historical_athena_encounter_raw.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.historical_athena_encounter_raw.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.historical_athena_encounter_raw.encounter_date**
        * - `date` in database
        * - Nullable, no default
        */
        encounter_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.historical_athena_encounter_raw.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        encounter_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.historical_athena_encounter_raw.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.historical_athena_encounter_raw.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.historical_athena_encounter_raw.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.historical_athena_encounter_raw.encounter_date**
        * - `date` in database
        * - Nullable, no default
        */
        encounter_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.historical_athena_encounter_raw.encounter_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        encounter_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.historical_athena_encounter_raw.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.historical_athena_encounter_raw.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.historical_athena_encounter_raw.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.historical_athena_encounter_raw.encounter_date**
        * - `date` in database
        * - Nullable, no default
        */
        encounter_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'historical_athena_encounter_raw_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.iam_federated_credentials**
     * - Table in database
     */
    export namespace iam_federated_credentials {
      export type Table = 'telenutrition.iam_federated_credentials';
      export interface Selectable {
        /**
        * **telenutrition.iam_federated_credentials.federated_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.iam_federated_credentials_federated_id_seq'::regclass)`
        */
        federated_id: number;
        /**
        * **telenutrition.iam_federated_credentials.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id: number;
        /**
        * **telenutrition.iam_federated_credentials.provider**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        provider: string;
        /**
        * **telenutrition.iam_federated_credentials.subject**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        subject: string;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.iam_federated_credentials.federated_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.iam_federated_credentials_federated_id_seq'::regclass)`
        */
        federated_id: number;
        /**
        * **telenutrition.iam_federated_credentials.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id: number;
        /**
        * **telenutrition.iam_federated_credentials.provider**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        provider: string;
        /**
        * **telenutrition.iam_federated_credentials.subject**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        subject: string;
      }
      export interface Whereable {
        /**
        * **telenutrition.iam_federated_credentials.federated_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.iam_federated_credentials_federated_id_seq'::regclass)`
        */
        federated_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_federated_credentials.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_federated_credentials.provider**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        provider?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_federated_credentials.subject**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        subject?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.iam_federated_credentials.federated_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.iam_federated_credentials_federated_id_seq'::regclass)`
        */
        federated_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_federated_credentials.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.iam_federated_credentials.provider**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        provider: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.iam_federated_credentials.subject**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        subject: string | db.Parameter<string> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.iam_federated_credentials.federated_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.iam_federated_credentials_federated_id_seq'::regclass)`
        */
        federated_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_federated_credentials.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.iam_federated_credentials.provider**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        provider?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.iam_federated_credentials.subject**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        subject?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      }
      export type UniqueIndex = 'iam_federated_credentials_pkey' | 'iam_federated_credentials_provider_subject_key';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.iam_identity**
     * - Table in database
     */
    export namespace iam_identity {
      export type Table = 'telenutrition.iam_identity';
      export interface Selectable {
        /**
        * **telenutrition.iam_identity.identity_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.iam_identity_id_seq'::regclass)`
        */
        identity_id: number;
        /**
        * **telenutrition.iam_identity.first_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        first_name: string | null;
        /**
        * **telenutrition.iam_identity.last_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_name: string | null;
        /**
        * **telenutrition.iam_identity.birthday**
        * - `date` in database
        * - Nullable, no default
        */
        birthday: Date | null;
        /**
        * **telenutrition.iam_identity.zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        zip_code: string | null;
        /**
        * **telenutrition.iam_identity.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id: number | null;
        /**
        * **telenutrition.iam_identity.eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        eligible_id: number | null;
        /**
        * **telenutrition.iam_identity.norm_comma_name**
        * - `text` in database
        * - Generated column
        */
        norm_comma_name: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.iam_identity.identity_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.iam_identity_id_seq'::regclass)`
        */
        identity_id: number;
        /**
        * **telenutrition.iam_identity.first_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        first_name: string | null;
        /**
        * **telenutrition.iam_identity.last_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_name: string | null;
        /**
        * **telenutrition.iam_identity.birthday**
        * - `date` in database
        * - Nullable, no default
        */
        birthday: db.DateString | null;
        /**
        * **telenutrition.iam_identity.zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        zip_code: string | null;
        /**
        * **telenutrition.iam_identity.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id: number | null;
        /**
        * **telenutrition.iam_identity.eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        eligible_id: number | null;
        /**
        * **telenutrition.iam_identity.norm_comma_name**
        * - `text` in database
        * - Generated column
        */
        norm_comma_name: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.iam_identity.identity_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.iam_identity_id_seq'::regclass)`
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_identity.first_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        first_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_identity.last_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_identity.birthday**
        * - `date` in database
        * - Nullable, no default
        */
        birthday?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_identity.zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        zip_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_identity.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_identity.eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        eligible_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_identity.norm_comma_name**
        * - `text` in database
        * - Generated column
        */
        norm_comma_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.iam_identity.identity_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.iam_identity_id_seq'::regclass)`
        */
        identity_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_identity.first_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        first_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_identity.last_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_identity.birthday**
        * - `date` in database
        * - Nullable, no default
        */
        birthday?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_identity.zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        zip_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_identity.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_identity.eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        eligible_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.iam_identity.identity_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.iam_identity_id_seq'::regclass)`
        */
        identity_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_identity.first_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        first_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_identity.last_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_identity.birthday**
        * - `date` in database
        * - Nullable, no default
        */
        birthday?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_identity.zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        zip_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_identity.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_identity.eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        eligible_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'iam_identity_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.iam_user**
     * - Table in database
     */
    export namespace iam_user {
      export type Table = 'telenutrition.iam_user';
      export interface Selectable {
        /**
        * **telenutrition.iam_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_user_user_id_seq'::regclass)`
        */
        user_id: number;
        /**
        * **telenutrition.iam_user.fs_user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_user_id: number | null;
        /**
        * **telenutrition.iam_user.fs_eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_eligible_id: number | null;
        /**
        * **telenutrition.iam_user.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **telenutrition.iam_user.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id: number | null;
        /**
        * **telenutrition.iam_user.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone: string | null;
        /**
        * **telenutrition.iam_user.password**
        * - `text` in database
        * - Nullable, no default
        */
        password: string | null;
        /**
        * **telenutrition.iam_user.password_reset_time**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        password_reset_time: Date | null;
        /**
        * **telenutrition.iam_user.roles**
        * - `_text` in database
        * - Nullable, no default
        */
        roles: string[] | null;
        /**
        * **telenutrition.iam_user.password_verification_id**
        * - `int4` in database
        * - Nullable, no default
        */
        password_verification_id: number | null;
        /**
        * **telenutrition.iam_user.enrollment**
        * - `jsonb` in database
        * - Nullable, no default
        */
        enrollment: db.JSONValue | null;
        /**
        * **telenutrition.iam_user.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.iam_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_user_user_id_seq'::regclass)`
        */
        user_id: number;
        /**
        * **telenutrition.iam_user.fs_user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_user_id: number | null;
        /**
        * **telenutrition.iam_user.fs_eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_eligible_id: number | null;
        /**
        * **telenutrition.iam_user.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **telenutrition.iam_user.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id: number | null;
        /**
        * **telenutrition.iam_user.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone: string | null;
        /**
        * **telenutrition.iam_user.password**
        * - `text` in database
        * - Nullable, no default
        */
        password: string | null;
        /**
        * **telenutrition.iam_user.password_reset_time**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        password_reset_time: db.TimestampTzString | null;
        /**
        * **telenutrition.iam_user.roles**
        * - `_text` in database
        * - Nullable, no default
        */
        roles: string[] | null;
        /**
        * **telenutrition.iam_user.password_verification_id**
        * - `int4` in database
        * - Nullable, no default
        */
        password_verification_id: number | null;
        /**
        * **telenutrition.iam_user.enrollment**
        * - `jsonb` in database
        * - Nullable, no default
        */
        enrollment: db.JSONValue | null;
        /**
        * **telenutrition.iam_user.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.iam_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_user_user_id_seq'::regclass)`
        */
        user_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_user.fs_user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_user_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_user.fs_eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_eligible_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_user.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_user.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_user.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_user.password**
        * - `text` in database
        * - Nullable, no default
        */
        password?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_user.password_reset_time**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        password_reset_time?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_user.roles**
        * - `_text` in database
        * - Nullable, no default
        */
        roles?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_user.password_verification_id**
        * - `int4` in database
        * - Nullable, no default
        */
        password_verification_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_user.enrollment**
        * - `jsonb` in database
        * - Nullable, no default
        */
        enrollment?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.iam_user.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.iam_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_user_user_id_seq'::regclass)`
        */
        user_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_user.fs_user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_user_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_user.fs_eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_eligible_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_user.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_user.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_user.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_user.password**
        * - `text` in database
        * - Nullable, no default
        */
        password?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_user.password_reset_time**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        password_reset_time?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_user.roles**
        * - `_text` in database
        * - Nullable, no default
        */
        roles?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_user.password_verification_id**
        * - `int4` in database
        * - Nullable, no default
        */
        password_verification_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_user.enrollment**
        * - `jsonb` in database
        * - Nullable, no default
        */
        enrollment?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.iam_user.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.iam_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_user_user_id_seq'::regclass)`
        */
        user_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_user.fs_user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_user_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_user.fs_eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_eligible_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_user.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_user.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_user.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_user.password**
        * - `text` in database
        * - Nullable, no default
        */
        password?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_user.password_reset_time**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        password_reset_time?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_user.roles**
        * - `_text` in database
        * - Nullable, no default
        */
        roles?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_user.password_verification_id**
        * - `int4` in database
        * - Nullable, no default
        */
        password_verification_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_user.enrollment**
        * - `jsonb` in database
        * - Nullable, no default
        */
        enrollment?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.iam_user.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'iam_user_identity_id_key' | 'iam_user_password_verification_id_key' | 'iam_user_pkey' | 'unique_email' | 'unique_phone';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.incentive**
     * - Table in database
     */
    export namespace incentive {
      export type Table = 'telenutrition.incentive';
      export interface Selectable {
        /**
        * **telenutrition.incentive.incentive_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.incentive_incentive_id_seq'::regclass)`
        */
        incentive_id: number;
        /**
        * **telenutrition.incentive.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.incentive.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string;
        /**
        * **telenutrition.incentive.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
        /**
        * **telenutrition.incentive.incentive_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        incentive_rule_id: number | null;
        /**
        * **telenutrition.incentive.reward_id**
        * - `int4` in database
        * - Nullable, no default
        */
        reward_id: number | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.incentive.incentive_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.incentive_incentive_id_seq'::regclass)`
        */
        incentive_id: number;
        /**
        * **telenutrition.incentive.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.incentive.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string;
        /**
        * **telenutrition.incentive.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
        /**
        * **telenutrition.incentive.incentive_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        incentive_rule_id: number | null;
        /**
        * **telenutrition.incentive.reward_id**
        * - `int4` in database
        * - Nullable, no default
        */
        reward_id: number | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.incentive.incentive_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.incentive_incentive_id_seq'::regclass)`
        */
        incentive_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive.incentive_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        incentive_rule_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive.reward_id**
        * - `int4` in database
        * - Nullable, no default
        */
        reward_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.incentive.incentive_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.incentive_incentive_id_seq'::regclass)`
        */
        incentive_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.incentive.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.incentive.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.incentive.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.incentive.incentive_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        incentive_rule_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.incentive.reward_id**
        * - `int4` in database
        * - Nullable, no default
        */
        reward_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.incentive.incentive_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.incentive_incentive_id_seq'::regclass)`
        */
        incentive_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.incentive.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.incentive.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.incentive.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.incentive.incentive_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        incentive_rule_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.incentive.reward_id**
        * - `int4` in database
        * - Nullable, no default
        */
        reward_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'incentive_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.incentive_contract**
     * - Table in database
     */
    export namespace incentive_contract {
      export type Table = 'telenutrition.incentive_contract';
      export interface Selectable {
        /**
        * **telenutrition.incentive_contract.incentive_contract_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.incentive_account_incentive_account_id_seq'::regclass)`
        */
        incentive_contract_id: number;
        /**
        * **telenutrition.incentive_contract.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id: number;
        /**
        * **telenutrition.incentive_contract.incentive_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        incentive_id: number;
        /**
        * **telenutrition.incentive_contract.active_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        active_at: Date;
        /**
        * **telenutrition.incentive_contract.inactive_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        inactive_at: Date | null;
        /**
        * **telenutrition.incentive_contract.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
        /**
        * **telenutrition.incentive_contract.incentive_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        incentive_rule_id: number | null;
        /**
        * **telenutrition.incentive_contract.param_values**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        param_values: string[];
        /**
        * **telenutrition.incentive_contract.processed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        processed_at: Date | null;
        /**
        * **telenutrition.incentive_contract.inactive**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        inactive: boolean;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.incentive_contract.incentive_contract_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.incentive_account_incentive_account_id_seq'::regclass)`
        */
        incentive_contract_id: number;
        /**
        * **telenutrition.incentive_contract.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id: number;
        /**
        * **telenutrition.incentive_contract.incentive_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        incentive_id: number;
        /**
        * **telenutrition.incentive_contract.active_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        active_at: db.TimestampString;
        /**
        * **telenutrition.incentive_contract.inactive_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        inactive_at: db.TimestampString | null;
        /**
        * **telenutrition.incentive_contract.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
        /**
        * **telenutrition.incentive_contract.incentive_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        incentive_rule_id: number | null;
        /**
        * **telenutrition.incentive_contract.param_values**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        param_values: string[];
        /**
        * **telenutrition.incentive_contract.processed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        processed_at: db.TimestampString | null;
        /**
        * **telenutrition.incentive_contract.inactive**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        inactive: boolean;
      }
      export interface Whereable {
        /**
        * **telenutrition.incentive_contract.incentive_contract_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.incentive_account_incentive_account_id_seq'::regclass)`
        */
        incentive_contract_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive_contract.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive_contract.incentive_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        incentive_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive_contract.active_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        active_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive_contract.inactive_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        inactive_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive_contract.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive_contract.incentive_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        incentive_rule_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive_contract.param_values**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        param_values?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive_contract.processed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        processed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive_contract.inactive**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        inactive?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.incentive_contract.incentive_contract_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.incentive_account_incentive_account_id_seq'::regclass)`
        */
        incentive_contract_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.incentive_contract.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.incentive_contract.incentive_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        incentive_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.incentive_contract.active_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        active_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.incentive_contract.inactive_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        inactive_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.incentive_contract.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.incentive_contract.incentive_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        incentive_rule_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.incentive_contract.param_values**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        param_values: string[] | db.Parameter<string[]> | db.SQLFragment;
        /**
        * **telenutrition.incentive_contract.processed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        processed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.incentive_contract.inactive**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        inactive?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.incentive_contract.incentive_contract_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.incentive_account_incentive_account_id_seq'::regclass)`
        */
        incentive_contract_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.incentive_contract.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.incentive_contract.incentive_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        incentive_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.incentive_contract.active_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        active_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.incentive_contract.inactive_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        inactive_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.incentive_contract.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.incentive_contract.incentive_rule_id**
        * - `int4` in database
        * - Nullable, no default
        */
        incentive_rule_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.incentive_contract.param_values**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        param_values?: string[] | db.Parameter<string[]> | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment>;
        /**
        * **telenutrition.incentive_contract.processed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        processed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.incentive_contract.inactive**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        inactive?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'incentive_account_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.incentive_rule**
     * - Table in database
     */
    export namespace incentive_rule {
      export type Table = 'telenutrition.incentive_rule';
      export interface Selectable {
        /**
        * **telenutrition.incentive_rule.incentive_rule_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.incentive_rule_incentive_rule_id_seq'::regclass)`
        */
        incentive_rule_id: number;
        /**
        * **telenutrition.incentive_rule.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.incentive_rule.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string;
        /**
        * **telenutrition.incentive_rule.params**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        params: string[];
        /**
        * **telenutrition.incentive_rule.processing_error**
        * - `text` in database
        * - Nullable, no default
        */
        processing_error: string | null;
        /**
        * **telenutrition.incentive_rule.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.incentive_rule.incentive_rule_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.incentive_rule_incentive_rule_id_seq'::regclass)`
        */
        incentive_rule_id: number;
        /**
        * **telenutrition.incentive_rule.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.incentive_rule.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string;
        /**
        * **telenutrition.incentive_rule.params**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        params: string[];
        /**
        * **telenutrition.incentive_rule.processing_error**
        * - `text` in database
        * - Nullable, no default
        */
        processing_error: string | null;
        /**
        * **telenutrition.incentive_rule.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **telenutrition.incentive_rule.incentive_rule_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.incentive_rule_incentive_rule_id_seq'::regclass)`
        */
        incentive_rule_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive_rule.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive_rule.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive_rule.params**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        params?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive_rule.processing_error**
        * - `text` in database
        * - Nullable, no default
        */
        processing_error?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.incentive_rule.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.incentive_rule.incentive_rule_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.incentive_rule_incentive_rule_id_seq'::regclass)`
        */
        incentive_rule_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.incentive_rule.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.incentive_rule.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.incentive_rule.params**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        params: string[] | db.Parameter<string[]> | db.SQLFragment;
        /**
        * **telenutrition.incentive_rule.processing_error**
        * - `text` in database
        * - Nullable, no default
        */
        processing_error?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.incentive_rule.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.incentive_rule.incentive_rule_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.incentive_rule_incentive_rule_id_seq'::regclass)`
        */
        incentive_rule_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.incentive_rule.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.incentive_rule.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.incentive_rule.params**
        * - `_text` in database
        * - `NOT NULL`, no default
        */
        params?: string[] | db.Parameter<string[]> | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment>;
        /**
        * **telenutrition.incentive_rule.processing_error**
        * - `text` in database
        * - Nullable, no default
        */
        processing_error?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.incentive_rule.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'incentive_rule_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.instacart_code**
     * - Table in database
     */
    export namespace instacart_code {
      export type Table = 'telenutrition.instacart_code';
      export interface Selectable {
        /**
        * **telenutrition.instacart_code.instacart_code_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_code_id: db.Int8String;
        /**
        * **telenutrition.instacart_code.code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code: string;
        /**
        * **telenutrition.instacart_code.url**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        url: string;
        /**
        * **telenutrition.instacart_code.wallet_id**
        * - `int4` in database
        * - Nullable, no default
        */
        wallet_id: number | null;
        /**
        * **telenutrition.instacart_code.initial_balance**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        initial_balance: string;
        /**
        * **telenutrition.instacart_code.remaining_balance**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        remaining_balance: string;
        /**
        * **telenutrition.instacart_code.activation_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        activation_at: Date;
        /**
        * **telenutrition.instacart_code.expiration_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        expiration_at: Date;
        /**
        * **telenutrition.instacart_code.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.instacart_code.instacart_code_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_code_id: number;
        /**
        * **telenutrition.instacart_code.code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code: string;
        /**
        * **telenutrition.instacart_code.url**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        url: string;
        /**
        * **telenutrition.instacart_code.wallet_id**
        * - `int4` in database
        * - Nullable, no default
        */
        wallet_id: number | null;
        /**
        * **telenutrition.instacart_code.initial_balance**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        initial_balance: string;
        /**
        * **telenutrition.instacart_code.remaining_balance**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        remaining_balance: string;
        /**
        * **telenutrition.instacart_code.activation_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        activation_at: db.TimestampString;
        /**
        * **telenutrition.instacart_code.expiration_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        expiration_at: db.TimestampString;
        /**
        * **telenutrition.instacart_code.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.instacart_code.instacart_code_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_code_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code.code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code.url**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        url?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code.wallet_id**
        * - `int4` in database
        * - Nullable, no default
        */
        wallet_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code.initial_balance**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        initial_balance?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code.remaining_balance**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        remaining_balance?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code.activation_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        activation_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code.expiration_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        expiration_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.instacart_code.instacart_code_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_code_id: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code.code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code.url**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        url: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code.wallet_id**
        * - `int4` in database
        * - Nullable, no default
        */
        wallet_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.instacart_code.initial_balance**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        initial_balance: (number | string) | db.Parameter<(number | string)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code.remaining_balance**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        remaining_balance: (number | string) | db.Parameter<(number | string)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code.activation_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        activation_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code.expiration_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        expiration_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.instacart_code.instacart_code_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_code_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code.code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code.url**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        url?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code.wallet_id**
        * - `int4` in database
        * - Nullable, no default
        */
        wallet_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code.initial_balance**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        initial_balance?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code.remaining_balance**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        remaining_balance?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code.activation_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        activation_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code.expiration_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        expiration_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'instacart_code_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.instacart_code_order**
     * - Table in database
     */
    export namespace instacart_code_order {
      export type Table = 'telenutrition.instacart_code_order';
      export interface Selectable {
        /**
        * **telenutrition.instacart_code_order.instacart_order_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_order_id: db.Int8String;
        /**
        * **telenutrition.instacart_code_order.instacart_code_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_code_id: db.Int8String;
        /**
        * **telenutrition.instacart_code_order.instacart_user_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_user_id: db.Int8String;
        /**
        * **telenutrition.instacart_code_order.ordered_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        ordered_at: Date;
        /**
        * **telenutrition.instacart_code_order.delivered_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        delivered_at: Date;
        /**
        * **telenutrition.instacart_code_order.platform**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        platform: string;
        /**
        * **telenutrition.instacart_code_order.gtv_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        gtv_amount: string;
        /**
        * **telenutrition.instacart_code_order.gmv_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        gmv_amount: string;
        /**
        * **telenutrition.instacart_code_order.delivery_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        delivery_status: string;
        /**
        * **telenutrition.instacart_code_order.delivery_fee_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        delivery_fee_amount: string;
        /**
        * **telenutrition.instacart_code_order.service_fee_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        service_fee_amount: string;
        /**
        * **telenutrition.instacart_code_order.fresh_funds_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        fresh_funds_amount: string;
        /**
        * **telenutrition.instacart_code_order.fresh_funds_code_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        fresh_funds_code_amount: string;
        /**
        * **telenutrition.instacart_code_order.discounts_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        discounts_amount: string;
        /**
        * **telenutrition.instacart_code_order.item_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        item_name: string;
        /**
        * **telenutrition.instacart_code_order.item_unit**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        item_unit: string;
        /**
        * **telenutrition.instacart_code_order.unit_price**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        unit_price: string;
        /**
        * **telenutrition.instacart_code_order.unit_count**
        * - `numeric` in database
        * - Nullable, no default
        */
        unit_count: number | null;
        /**
        * **telenutrition.instacart_code_order.final_sales_tax_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        final_sales_tax_amount: string;
        /**
        * **telenutrition.instacart_code_order.final_charge_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        final_charge_amount: string;
        /**
        * **telenutrition.instacart_code_order.upc_plu**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        upc_plu: string;
        /**
        * **telenutrition.instacart_code_order.order_item_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        order_item_status: string;
        /**
        * **telenutrition.instacart_code_order.fresh_funds_eligible**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        fresh_funds_eligible: string;
        /**
        * **telenutrition.instacart_code_order.category1**
        * - `text` in database
        * - Nullable, no default
        */
        category1: string | null;
        /**
        * **telenutrition.instacart_code_order.category2**
        * - `text` in database
        * - Nullable, no default
        */
        category2: string | null;
        /**
        * **telenutrition.instacart_code_order.category3**
        * - `text` in database
        * - Nullable, no default
        */
        category3: string | null;
        /**
        * **telenutrition.instacart_code_order.category4**
        * - `text` in database
        * - Nullable, no default
        */
        category4: string | null;
        /**
        * **telenutrition.instacart_code_order.category5**
        * - `text` in database
        * - Nullable, no default
        */
        category5: string | null;
        /**
        * **telenutrition.instacart_code_order.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.instacart_code_order.instacart_order_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_order_id: number;
        /**
        * **telenutrition.instacart_code_order.instacart_code_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_code_id: number;
        /**
        * **telenutrition.instacart_code_order.instacart_user_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_user_id: number;
        /**
        * **telenutrition.instacart_code_order.ordered_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        ordered_at: db.TimestampString;
        /**
        * **telenutrition.instacart_code_order.delivered_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        delivered_at: db.TimestampString;
        /**
        * **telenutrition.instacart_code_order.platform**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        platform: string;
        /**
        * **telenutrition.instacart_code_order.gtv_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        gtv_amount: string;
        /**
        * **telenutrition.instacart_code_order.gmv_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        gmv_amount: string;
        /**
        * **telenutrition.instacart_code_order.delivery_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        delivery_status: string;
        /**
        * **telenutrition.instacart_code_order.delivery_fee_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        delivery_fee_amount: string;
        /**
        * **telenutrition.instacart_code_order.service_fee_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        service_fee_amount: string;
        /**
        * **telenutrition.instacart_code_order.fresh_funds_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        fresh_funds_amount: string;
        /**
        * **telenutrition.instacart_code_order.fresh_funds_code_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        fresh_funds_code_amount: string;
        /**
        * **telenutrition.instacart_code_order.discounts_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        discounts_amount: string;
        /**
        * **telenutrition.instacart_code_order.item_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        item_name: string;
        /**
        * **telenutrition.instacart_code_order.item_unit**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        item_unit: string;
        /**
        * **telenutrition.instacart_code_order.unit_price**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        unit_price: string;
        /**
        * **telenutrition.instacart_code_order.unit_count**
        * - `numeric` in database
        * - Nullable, no default
        */
        unit_count: number | null;
        /**
        * **telenutrition.instacart_code_order.final_sales_tax_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        final_sales_tax_amount: string;
        /**
        * **telenutrition.instacart_code_order.final_charge_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        final_charge_amount: string;
        /**
        * **telenutrition.instacart_code_order.upc_plu**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        upc_plu: string;
        /**
        * **telenutrition.instacart_code_order.order_item_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        order_item_status: string;
        /**
        * **telenutrition.instacart_code_order.fresh_funds_eligible**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        fresh_funds_eligible: string;
        /**
        * **telenutrition.instacart_code_order.category1**
        * - `text` in database
        * - Nullable, no default
        */
        category1: string | null;
        /**
        * **telenutrition.instacart_code_order.category2**
        * - `text` in database
        * - Nullable, no default
        */
        category2: string | null;
        /**
        * **telenutrition.instacart_code_order.category3**
        * - `text` in database
        * - Nullable, no default
        */
        category3: string | null;
        /**
        * **telenutrition.instacart_code_order.category4**
        * - `text` in database
        * - Nullable, no default
        */
        category4: string | null;
        /**
        * **telenutrition.instacart_code_order.category5**
        * - `text` in database
        * - Nullable, no default
        */
        category5: string | null;
        /**
        * **telenutrition.instacart_code_order.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.instacart_code_order.instacart_order_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_order_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.instacart_code_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_code_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.instacart_user_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_user_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.ordered_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        ordered_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.delivered_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        delivered_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.platform**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        platform?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.gtv_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        gtv_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.gmv_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        gmv_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.delivery_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        delivery_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.delivery_fee_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        delivery_fee_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.service_fee_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        service_fee_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.fresh_funds_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        fresh_funds_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.fresh_funds_code_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        fresh_funds_code_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.discounts_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        discounts_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.item_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        item_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.item_unit**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        item_unit?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.unit_price**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        unit_price?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.unit_count**
        * - `numeric` in database
        * - Nullable, no default
        */
        unit_count?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.final_sales_tax_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        final_sales_tax_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.final_charge_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        final_charge_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.upc_plu**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        upc_plu?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.order_item_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        order_item_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.fresh_funds_eligible**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        fresh_funds_eligible?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.category1**
        * - `text` in database
        * - Nullable, no default
        */
        category1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.category2**
        * - `text` in database
        * - Nullable, no default
        */
        category2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.category3**
        * - `text` in database
        * - Nullable, no default
        */
        category3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.category4**
        * - `text` in database
        * - Nullable, no default
        */
        category4?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.category5**
        * - `text` in database
        * - Nullable, no default
        */
        category5?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.instacart_code_order.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.instacart_code_order.instacart_order_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_order_id: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.instacart_code_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_code_id: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.instacart_user_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_user_id: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.ordered_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        ordered_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.delivered_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        delivered_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.platform**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        platform: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.gtv_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        gtv_amount: (number | string) | db.Parameter<(number | string)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.gmv_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        gmv_amount: (number | string) | db.Parameter<(number | string)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.delivery_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        delivery_status: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.delivery_fee_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        delivery_fee_amount: (number | string) | db.Parameter<(number | string)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.service_fee_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        service_fee_amount: (number | string) | db.Parameter<(number | string)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.fresh_funds_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        fresh_funds_amount: (number | string) | db.Parameter<(number | string)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.fresh_funds_code_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        fresh_funds_code_amount: (number | string) | db.Parameter<(number | string)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.discounts_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        discounts_amount: (number | string) | db.Parameter<(number | string)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.item_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        item_name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.item_unit**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        item_unit: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.unit_price**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        unit_price: (number | string) | db.Parameter<(number | string)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.unit_count**
        * - `numeric` in database
        * - Nullable, no default
        */
        unit_count?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.final_sales_tax_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        final_sales_tax_amount: (number | string) | db.Parameter<(number | string)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.final_charge_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        final_charge_amount: (number | string) | db.Parameter<(number | string)> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.upc_plu**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        upc_plu: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.order_item_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        order_item_status: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.fresh_funds_eligible**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        fresh_funds_eligible: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.category1**
        * - `text` in database
        * - Nullable, no default
        */
        category1?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.category2**
        * - `text` in database
        * - Nullable, no default
        */
        category2?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.category3**
        * - `text` in database
        * - Nullable, no default
        */
        category3?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.category4**
        * - `text` in database
        * - Nullable, no default
        */
        category4?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.category5**
        * - `text` in database
        * - Nullable, no default
        */
        category5?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.instacart_code_order.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.instacart_code_order.instacart_order_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_order_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.instacart_code_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_code_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.instacart_user_id**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        instacart_user_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.ordered_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        ordered_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.delivered_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        delivered_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.platform**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        platform?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.gtv_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        gtv_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.gmv_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        gmv_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.delivery_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        delivery_status?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.delivery_fee_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        delivery_fee_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.service_fee_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        service_fee_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.fresh_funds_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        fresh_funds_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.fresh_funds_code_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        fresh_funds_code_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.discounts_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        discounts_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.item_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        item_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.item_unit**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        item_unit?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.unit_price**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        unit_price?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.unit_count**
        * - `numeric` in database
        * - Nullable, no default
        */
        unit_count?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.final_sales_tax_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        final_sales_tax_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.final_charge_amount**
        * - `money` in database
        * - `NOT NULL`, no default
        */
        final_charge_amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.upc_plu**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        upc_plu?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.order_item_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        order_item_status?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.fresh_funds_eligible**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        fresh_funds_eligible?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.category1**
        * - `text` in database
        * - Nullable, no default
        */
        category1?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.category2**
        * - `text` in database
        * - Nullable, no default
        */
        category2?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.category3**
        * - `text` in database
        * - Nullable, no default
        */
        category3?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.category4**
        * - `text` in database
        * - Nullable, no default
        */
        category4?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.category5**
        * - `text` in database
        * - Nullable, no default
        */
        category5?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.instacart_code_order.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'instacart_code_order_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.issue_report**
     * - Table in database
     */
    export namespace issue_report {
      export type Table = 'telenutrition.issue_report';
      export interface Selectable {
        /**
        * **telenutrition.issue_report.report_id**
        * - `int4` in database
        * - Generated column
        */
        report_id: number;
        /**
        * **telenutrition.issue_report.reporting_provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        reporting_provider_id: number;
        /**
        * **telenutrition.issue_report.report_status**
        * - `text` in database
        * - Nullable, default: `'open'::text`
        */
        report_status: string | null;
        /**
        * **telenutrition.issue_report.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
        /**
        * **telenutrition.issue_report.platform_os**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        platform_os: string;
        /**
        * **telenutrition.issue_report.platform_client**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        platform_client: string;
        /**
        * **telenutrition.issue_report.issue_type**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        issue_type: number;
        /**
        * **telenutrition.issue_report.issue_description**
        * - `text` in database
        * - Nullable, no default
        */
        issue_description: string | null;
        /**
        * **telenutrition.issue_report.issue_prevented_completion**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        issue_prevented_completion: boolean;
        /**
        * **telenutrition.issue_report.error_details**
        * - `jsonb` in database
        * - Nullable, no default
        */
        error_details: db.JSONValue | null;
        /**
        * **telenutrition.issue_report.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at: Date | null;
        /**
        * **telenutrition.issue_report.issue_resolution_reason**
        * - `text` in database
        * - Nullable, default: `'unresolved'::text`
        */
        issue_resolution_reason: string | null;
        /**
        * **telenutrition.issue_report.issue_resolution_notes**
        * - `text` in database
        * - Nullable, no default
        */
        issue_resolution_notes: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.issue_report.report_id**
        * - `int4` in database
        * - Generated column
        */
        report_id: number;
        /**
        * **telenutrition.issue_report.reporting_provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        reporting_provider_id: number;
        /**
        * **telenutrition.issue_report.report_status**
        * - `text` in database
        * - Nullable, default: `'open'::text`
        */
        report_status: string | null;
        /**
        * **telenutrition.issue_report.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
        /**
        * **telenutrition.issue_report.platform_os**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        platform_os: string;
        /**
        * **telenutrition.issue_report.platform_client**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        platform_client: string;
        /**
        * **telenutrition.issue_report.issue_type**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        issue_type: number;
        /**
        * **telenutrition.issue_report.issue_description**
        * - `text` in database
        * - Nullable, no default
        */
        issue_description: string | null;
        /**
        * **telenutrition.issue_report.issue_prevented_completion**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        issue_prevented_completion: boolean;
        /**
        * **telenutrition.issue_report.error_details**
        * - `jsonb` in database
        * - Nullable, no default
        */
        error_details: db.JSONValue | null;
        /**
        * **telenutrition.issue_report.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at: db.TimestampString | null;
        /**
        * **telenutrition.issue_report.issue_resolution_reason**
        * - `text` in database
        * - Nullable, default: `'unresolved'::text`
        */
        issue_resolution_reason: string | null;
        /**
        * **telenutrition.issue_report.issue_resolution_notes**
        * - `text` in database
        * - Nullable, no default
        */
        issue_resolution_notes: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.issue_report.report_id**
        * - `int4` in database
        * - Generated column
        */
        report_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.issue_report.reporting_provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        reporting_provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.issue_report.report_status**
        * - `text` in database
        * - Nullable, default: `'open'::text`
        */
        report_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.issue_report.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.issue_report.platform_os**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        platform_os?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.issue_report.platform_client**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        platform_client?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.issue_report.issue_type**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        issue_type?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.issue_report.issue_description**
        * - `text` in database
        * - Nullable, no default
        */
        issue_description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.issue_report.issue_prevented_completion**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        issue_prevented_completion?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.issue_report.error_details**
        * - `jsonb` in database
        * - Nullable, no default
        */
        error_details?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.issue_report.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.issue_report.issue_resolution_reason**
        * - `text` in database
        * - Nullable, default: `'unresolved'::text`
        */
        issue_resolution_reason?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.issue_report.issue_resolution_notes**
        * - `text` in database
        * - Nullable, no default
        */
        issue_resolution_notes?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.issue_report.reporting_provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        reporting_provider_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.issue_report.report_status**
        * - `text` in database
        * - Nullable, default: `'open'::text`
        */
        report_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.issue_report.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.issue_report.platform_os**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        platform_os: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.issue_report.platform_client**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        platform_client: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.issue_report.issue_type**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        issue_type: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.issue_report.issue_description**
        * - `text` in database
        * - Nullable, no default
        */
        issue_description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.issue_report.issue_prevented_completion**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        issue_prevented_completion: boolean | db.Parameter<boolean> | db.SQLFragment;
        /**
        * **telenutrition.issue_report.error_details**
        * - `jsonb` in database
        * - Nullable, no default
        */
        error_details?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.issue_report.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.issue_report.issue_resolution_reason**
        * - `text` in database
        * - Nullable, default: `'unresolved'::text`
        */
        issue_resolution_reason?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.issue_report.issue_resolution_notes**
        * - `text` in database
        * - Nullable, no default
        */
        issue_resolution_notes?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.issue_report.reporting_provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        reporting_provider_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.issue_report.report_status**
        * - `text` in database
        * - Nullable, default: `'open'::text`
        */
        report_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.issue_report.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.issue_report.platform_os**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        platform_os?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.issue_report.platform_client**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        platform_client?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.issue_report.issue_type**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        issue_type?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.issue_report.issue_description**
        * - `text` in database
        * - Nullable, no default
        */
        issue_description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.issue_report.issue_prevented_completion**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        issue_prevented_completion?: boolean | db.Parameter<boolean> | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment>;
        /**
        * **telenutrition.issue_report.error_details**
        * - `jsonb` in database
        * - Nullable, no default
        */
        error_details?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.issue_report.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.issue_report.issue_resolution_reason**
        * - `text` in database
        * - Nullable, default: `'unresolved'::text`
        */
        issue_resolution_reason?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.issue_report.issue_resolution_notes**
        * - `text` in database
        * - Nullable, no default
        */
        issue_resolution_notes?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'issue_report_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.issue_report_type**
     * - Table in database
     */
    export namespace issue_report_type {
      export type Table = 'telenutrition.issue_report_type';
      export interface Selectable {
        /**
        * **telenutrition.issue_report_type.issue_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        issue_type_id: number;
        /**
        * **telenutrition.issue_report_type.parent_issue_type_id**
        * - `int4` in database
        * - Nullable, no default
        */
        parent_issue_type_id: number | null;
        /**
        * **telenutrition.issue_report_type.issue_key**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        issue_key: string;
        /**
        * **telenutrition.issue_report_type.display_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        display_name: string;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.issue_report_type.issue_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        issue_type_id: number;
        /**
        * **telenutrition.issue_report_type.parent_issue_type_id**
        * - `int4` in database
        * - Nullable, no default
        */
        parent_issue_type_id: number | null;
        /**
        * **telenutrition.issue_report_type.issue_key**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        issue_key: string;
        /**
        * **telenutrition.issue_report_type.display_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        display_name: string;
      }
      export interface Whereable {
        /**
        * **telenutrition.issue_report_type.issue_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        issue_type_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.issue_report_type.parent_issue_type_id**
        * - `int4` in database
        * - Nullable, no default
        */
        parent_issue_type_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.issue_report_type.issue_key**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        issue_key?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.issue_report_type.display_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        display_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.issue_report_type.issue_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        issue_type_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.issue_report_type.parent_issue_type_id**
        * - `int4` in database
        * - Nullable, no default
        */
        parent_issue_type_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.issue_report_type.issue_key**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        issue_key: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.issue_report_type.display_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        display_name: string | db.Parameter<string> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.issue_report_type.issue_type_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        issue_type_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.issue_report_type.parent_issue_type_id**
        * - `int4` in database
        * - Nullable, no default
        */
        parent_issue_type_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.issue_report_type.issue_key**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        issue_key?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.issue_report_type.display_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        display_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      }
      export type UniqueIndex = 'issue_report_type_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.medallion_provider**
     * - Table in database
     */
    export namespace medallion_provider {
      export type Table = 'telenutrition.medallion_provider';
      export interface Selectable {
        /**
        * **telenutrition.medallion_provider.medallion_id**
        * - `uuid` in database
        * - `NOT NULL`, no default
        */
        medallion_id: string;
        /**
        * **telenutrition.medallion_provider.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.medallion_provider.employee_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employee_id: number | null;
        /**
        * **telenutrition.medallion_provider.first_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        first_name: string | null;
        /**
        * **telenutrition.medallion_provider.last_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_name: string | null;
        /**
        * **telenutrition.medallion_provider.npi**
        * - `int4` in database
        * - Nullable, no default
        */
        npi: number | null;
        /**
        * **telenutrition.medallion_provider.percent_complete**
        * - `int4` in database
        * - Nullable, no default
        */
        percent_complete: number | null;
        /**
        * **telenutrition.medallion_provider.profile_completion_state**
        * - `text` in database
        * - Nullable, no default
        */
        profile_completion_state: string | null;
        /**
        * **telenutrition.medallion_provider.percent_complete_last_checked**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        percent_complete_last_checked: Date | null;
        /**
        * **telenutrition.medallion_provider.verification_status**
        * - `text` in database
        * - Nullable, no default
        */
        verification_status: string | null;
        /**
        * **telenutrition.medallion_provider.verification_status_last_checked**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        verification_status_last_checked: Date | null;
        /**
        * **telenutrition.medallion_provider.credentialing_committee_status**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_committee_status: string | null;
        /**
        * **telenutrition.medallion_provider.initial_credentialing_date**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        initial_credentialing_date: Date | null;
        /**
        * **telenutrition.medallion_provider.latest_credentialing_date**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        latest_credentialing_date: Date | null;
        /**
        * **telenutrition.medallion_provider.credentialing_step**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_step: string | null;
        /**
        * **telenutrition.medallion_provider.caqh_number**
        * - `text` in database
        * - Nullable, no default
        */
        caqh_number: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.medallion_provider.medallion_id**
        * - `uuid` in database
        * - `NOT NULL`, no default
        */
        medallion_id: string;
        /**
        * **telenutrition.medallion_provider.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.medallion_provider.employee_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employee_id: number | null;
        /**
        * **telenutrition.medallion_provider.first_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        first_name: string | null;
        /**
        * **telenutrition.medallion_provider.last_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_name: string | null;
        /**
        * **telenutrition.medallion_provider.npi**
        * - `int4` in database
        * - Nullable, no default
        */
        npi: number | null;
        /**
        * **telenutrition.medallion_provider.percent_complete**
        * - `int4` in database
        * - Nullable, no default
        */
        percent_complete: number | null;
        /**
        * **telenutrition.medallion_provider.profile_completion_state**
        * - `text` in database
        * - Nullable, no default
        */
        profile_completion_state: string | null;
        /**
        * **telenutrition.medallion_provider.percent_complete_last_checked**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        percent_complete_last_checked: db.TimestampTzString | null;
        /**
        * **telenutrition.medallion_provider.verification_status**
        * - `text` in database
        * - Nullable, no default
        */
        verification_status: string | null;
        /**
        * **telenutrition.medallion_provider.verification_status_last_checked**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        verification_status_last_checked: db.TimestampTzString | null;
        /**
        * **telenutrition.medallion_provider.credentialing_committee_status**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_committee_status: string | null;
        /**
        * **telenutrition.medallion_provider.initial_credentialing_date**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        initial_credentialing_date: db.TimestampTzString | null;
        /**
        * **telenutrition.medallion_provider.latest_credentialing_date**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        latest_credentialing_date: db.TimestampTzString | null;
        /**
        * **telenutrition.medallion_provider.credentialing_step**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_step: string | null;
        /**
        * **telenutrition.medallion_provider.caqh_number**
        * - `text` in database
        * - Nullable, no default
        */
        caqh_number: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.medallion_provider.medallion_id**
        * - `uuid` in database
        * - `NOT NULL`, no default
        */
        medallion_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.medallion_provider.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.medallion_provider.employee_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employee_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.medallion_provider.first_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        first_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.medallion_provider.last_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.medallion_provider.npi**
        * - `int4` in database
        * - Nullable, no default
        */
        npi?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.medallion_provider.percent_complete**
        * - `int4` in database
        * - Nullable, no default
        */
        percent_complete?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.medallion_provider.profile_completion_state**
        * - `text` in database
        * - Nullable, no default
        */
        profile_completion_state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.medallion_provider.percent_complete_last_checked**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        percent_complete_last_checked?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.medallion_provider.verification_status**
        * - `text` in database
        * - Nullable, no default
        */
        verification_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.medallion_provider.verification_status_last_checked**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        verification_status_last_checked?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.medallion_provider.credentialing_committee_status**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_committee_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.medallion_provider.initial_credentialing_date**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        initial_credentialing_date?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.medallion_provider.latest_credentialing_date**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        latest_credentialing_date?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.medallion_provider.credentialing_step**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_step?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.medallion_provider.caqh_number**
        * - `text` in database
        * - Nullable, no default
        */
        caqh_number?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.medallion_provider.medallion_id**
        * - `uuid` in database
        * - `NOT NULL`, no default
        */
        medallion_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.medallion_provider.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.medallion_provider.employee_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employee_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.medallion_provider.first_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        first_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.medallion_provider.last_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.medallion_provider.npi**
        * - `int4` in database
        * - Nullable, no default
        */
        npi?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.medallion_provider.percent_complete**
        * - `int4` in database
        * - Nullable, no default
        */
        percent_complete?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.medallion_provider.profile_completion_state**
        * - `text` in database
        * - Nullable, no default
        */
        profile_completion_state?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.medallion_provider.percent_complete_last_checked**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        percent_complete_last_checked?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.medallion_provider.verification_status**
        * - `text` in database
        * - Nullable, no default
        */
        verification_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.medallion_provider.verification_status_last_checked**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        verification_status_last_checked?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.medallion_provider.credentialing_committee_status**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_committee_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.medallion_provider.initial_credentialing_date**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        initial_credentialing_date?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.medallion_provider.latest_credentialing_date**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        latest_credentialing_date?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.medallion_provider.credentialing_step**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_step?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.medallion_provider.caqh_number**
        * - `text` in database
        * - Nullable, no default
        */
        caqh_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.medallion_provider.medallion_id**
        * - `uuid` in database
        * - `NOT NULL`, no default
        */
        medallion_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.medallion_provider.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.medallion_provider.employee_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employee_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.medallion_provider.first_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        first_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.medallion_provider.last_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.medallion_provider.npi**
        * - `int4` in database
        * - Nullable, no default
        */
        npi?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.medallion_provider.percent_complete**
        * - `int4` in database
        * - Nullable, no default
        */
        percent_complete?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.medallion_provider.profile_completion_state**
        * - `text` in database
        * - Nullable, no default
        */
        profile_completion_state?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.medallion_provider.percent_complete_last_checked**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        percent_complete_last_checked?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.medallion_provider.verification_status**
        * - `text` in database
        * - Nullable, no default
        */
        verification_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.medallion_provider.verification_status_last_checked**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        verification_status_last_checked?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.medallion_provider.credentialing_committee_status**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_committee_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.medallion_provider.initial_credentialing_date**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        initial_credentialing_date?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.medallion_provider.latest_credentialing_date**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        latest_credentialing_date?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.medallion_provider.credentialing_step**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_step?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.medallion_provider.caqh_number**
        * - `text` in database
        * - Nullable, no default
        */
        caqh_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'medallion_provider_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.ontology_concept**
     * - Table in database
     */
    export namespace ontology_concept {
      export type Table = 'telenutrition.ontology_concept';
      export interface Selectable {
        /**
        * **telenutrition.ontology_concept.ontology_concept_id**
        * - `int4` in database
        * - Generated column
        */
        ontology_concept_id: number;
        /**
        * **telenutrition.ontology_concept.concept_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        concept_code: string;
        /**
        * **telenutrition.ontology_concept.concept_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        concept_name: string;
        /**
        * **telenutrition.ontology_concept.concept_type**
        * - `varchar` in database
        * - Nullable, no default
        */
        concept_type: string | null;
        /**
        * **telenutrition.ontology_concept.ontology_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        ontology_name: string | null;
        /**
        * **telenutrition.ontology_concept.description**
        * - `text` in database
        * - Nullable, no default
        */
        description: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.ontology_concept.ontology_concept_id**
        * - `int4` in database
        * - Generated column
        */
        ontology_concept_id: number;
        /**
        * **telenutrition.ontology_concept.concept_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        concept_code: string;
        /**
        * **telenutrition.ontology_concept.concept_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        concept_name: string;
        /**
        * **telenutrition.ontology_concept.concept_type**
        * - `varchar` in database
        * - Nullable, no default
        */
        concept_type: string | null;
        /**
        * **telenutrition.ontology_concept.ontology_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        ontology_name: string | null;
        /**
        * **telenutrition.ontology_concept.description**
        * - `text` in database
        * - Nullable, no default
        */
        description: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.ontology_concept.ontology_concept_id**
        * - `int4` in database
        * - Generated column
        */
        ontology_concept_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.ontology_concept.concept_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        concept_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.ontology_concept.concept_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        concept_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.ontology_concept.concept_type**
        * - `varchar` in database
        * - Nullable, no default
        */
        concept_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.ontology_concept.ontology_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        ontology_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.ontology_concept.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.ontology_concept.concept_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        concept_code: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.ontology_concept.concept_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        concept_name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.ontology_concept.concept_type**
        * - `varchar` in database
        * - Nullable, no default
        */
        concept_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.ontology_concept.ontology_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        ontology_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.ontology_concept.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.ontology_concept.concept_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        concept_code?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.ontology_concept.concept_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        concept_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.ontology_concept.concept_type**
        * - `varchar` in database
        * - Nullable, no default
        */
        concept_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.ontology_concept.ontology_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        ontology_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.ontology_concept.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'ontology_concept_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.patient_attribute**
     * - Table in database
     */
    export namespace patient_attribute {
      export type Table = 'telenutrition.patient_attribute';
      export interface Selectable {
        /**
        * **telenutrition.patient_attribute.patient_attribute_id**
        * - `int4` in database
        * - Generated column
        */
        patient_attribute_id: number;
        /**
        * **telenutrition.patient_attribute.attribute_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        attribute_code: string;
        /**
        * **telenutrition.patient_attribute.attribute_description**
        * - `varchar` in database
        * - Nullable, no default
        */
        attribute_description: string | null;
        /**
        * **telenutrition.patient_attribute.attribute_type**
        * - `varchar` in database
        * - `NOT NULL`, default: `'text'::character varying`
        */
        attribute_type: string;
        /**
        * **telenutrition.patient_attribute.validation_type**
        * - `varchar` in database
        * - Nullable, no default
        */
        validation_type: string | null;
        /**
        * **telenutrition.patient_attribute.validation_value**
        * - `text` in database
        * - Nullable, no default
        */
        validation_value: string | null;
        /**
        * **telenutrition.patient_attribute.error_message**
        * - `text` in database
        * - Nullable, no default
        */
        error_message: string | null;
        /**
        * **telenutrition.patient_attribute.ontology_concept_id**
        * - `int4` in database
        * - Nullable, no default
        */
        ontology_concept_id: number | null;
        /**
        * **telenutrition.patient_attribute.unit_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        unit_name: string | null;
        /**
        * **telenutrition.patient_attribute.unit_symbol**
        * - `varchar` in database
        * - Nullable, no default
        */
        unit_symbol: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.patient_attribute.patient_attribute_id**
        * - `int4` in database
        * - Generated column
        */
        patient_attribute_id: number;
        /**
        * **telenutrition.patient_attribute.attribute_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        attribute_code: string;
        /**
        * **telenutrition.patient_attribute.attribute_description**
        * - `varchar` in database
        * - Nullable, no default
        */
        attribute_description: string | null;
        /**
        * **telenutrition.patient_attribute.attribute_type**
        * - `varchar` in database
        * - `NOT NULL`, default: `'text'::character varying`
        */
        attribute_type: string;
        /**
        * **telenutrition.patient_attribute.validation_type**
        * - `varchar` in database
        * - Nullable, no default
        */
        validation_type: string | null;
        /**
        * **telenutrition.patient_attribute.validation_value**
        * - `text` in database
        * - Nullable, no default
        */
        validation_value: string | null;
        /**
        * **telenutrition.patient_attribute.error_message**
        * - `text` in database
        * - Nullable, no default
        */
        error_message: string | null;
        /**
        * **telenutrition.patient_attribute.ontology_concept_id**
        * - `int4` in database
        * - Nullable, no default
        */
        ontology_concept_id: number | null;
        /**
        * **telenutrition.patient_attribute.unit_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        unit_name: string | null;
        /**
        * **telenutrition.patient_attribute.unit_symbol**
        * - `varchar` in database
        * - Nullable, no default
        */
        unit_symbol: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.patient_attribute.patient_attribute_id**
        * - `int4` in database
        * - Generated column
        */
        patient_attribute_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_attribute.attribute_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        attribute_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_attribute.attribute_description**
        * - `varchar` in database
        * - Nullable, no default
        */
        attribute_description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_attribute.attribute_type**
        * - `varchar` in database
        * - `NOT NULL`, default: `'text'::character varying`
        */
        attribute_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_attribute.validation_type**
        * - `varchar` in database
        * - Nullable, no default
        */
        validation_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_attribute.validation_value**
        * - `text` in database
        * - Nullable, no default
        */
        validation_value?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_attribute.error_message**
        * - `text` in database
        * - Nullable, no default
        */
        error_message?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_attribute.ontology_concept_id**
        * - `int4` in database
        * - Nullable, no default
        */
        ontology_concept_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_attribute.unit_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        unit_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_attribute.unit_symbol**
        * - `varchar` in database
        * - Nullable, no default
        */
        unit_symbol?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.patient_attribute.attribute_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        attribute_code: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.patient_attribute.attribute_description**
        * - `varchar` in database
        * - Nullable, no default
        */
        attribute_description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.patient_attribute.attribute_type**
        * - `varchar` in database
        * - `NOT NULL`, default: `'text'::character varying`
        */
        attribute_type?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.patient_attribute.validation_type**
        * - `varchar` in database
        * - Nullable, no default
        */
        validation_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.patient_attribute.validation_value**
        * - `text` in database
        * - Nullable, no default
        */
        validation_value?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.patient_attribute.error_message**
        * - `text` in database
        * - Nullable, no default
        */
        error_message?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.patient_attribute.ontology_concept_id**
        * - `int4` in database
        * - Nullable, no default
        */
        ontology_concept_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.patient_attribute.unit_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        unit_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.patient_attribute.unit_symbol**
        * - `varchar` in database
        * - Nullable, no default
        */
        unit_symbol?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.patient_attribute.attribute_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        attribute_code?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.patient_attribute.attribute_description**
        * - `varchar` in database
        * - Nullable, no default
        */
        attribute_description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.patient_attribute.attribute_type**
        * - `varchar` in database
        * - `NOT NULL`, default: `'text'::character varying`
        */
        attribute_type?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.patient_attribute.validation_type**
        * - `varchar` in database
        * - Nullable, no default
        */
        validation_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.patient_attribute.validation_value**
        * - `text` in database
        * - Nullable, no default
        */
        validation_value?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.patient_attribute.error_message**
        * - `text` in database
        * - Nullable, no default
        */
        error_message?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.patient_attribute.ontology_concept_id**
        * - `int4` in database
        * - Nullable, no default
        */
        ontology_concept_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.patient_attribute.unit_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        unit_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.patient_attribute.unit_symbol**
        * - `varchar` in database
        * - Nullable, no default
        */
        unit_symbol?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'patient_attribute_attribute_code_key' | 'patient_attribute_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.patient_attribute_option**
     * - Table in database
     */
    export namespace patient_attribute_option {
      export type Table = 'telenutrition.patient_attribute_option';
      export interface Selectable {
        /**
        * **telenutrition.patient_attribute_option.patient_attribute_option_id**
        * - `int4` in database
        * - Generated column
        */
        patient_attribute_option_id: number;
        /**
        * **telenutrition.patient_attribute_option.patient_attribute_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_attribute_id: number | null;
        /**
        * **telenutrition.patient_attribute_option.ontology_concept_id**
        * - `int4` in database
        * - Nullable, no default
        */
        ontology_concept_id: number | null;
        /**
        * **telenutrition.patient_attribute_option.associated_concept_id**
        * - `int4` in database
        * - Nullable, no default
        */
        associated_concept_id: number | null;
        /**
        * **telenutrition.patient_attribute_option.option_code**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        option_code: string;
        /**
        * **telenutrition.patient_attribute_option.option_text**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        option_text: string;
        /**
        * **telenutrition.patient_attribute_option.is_active**
        * - `bool` in database
        * - Nullable, default: `true`
        */
        is_active: boolean | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.patient_attribute_option.patient_attribute_option_id**
        * - `int4` in database
        * - Generated column
        */
        patient_attribute_option_id: number;
        /**
        * **telenutrition.patient_attribute_option.patient_attribute_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_attribute_id: number | null;
        /**
        * **telenutrition.patient_attribute_option.ontology_concept_id**
        * - `int4` in database
        * - Nullable, no default
        */
        ontology_concept_id: number | null;
        /**
        * **telenutrition.patient_attribute_option.associated_concept_id**
        * - `int4` in database
        * - Nullable, no default
        */
        associated_concept_id: number | null;
        /**
        * **telenutrition.patient_attribute_option.option_code**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        option_code: string;
        /**
        * **telenutrition.patient_attribute_option.option_text**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        option_text: string;
        /**
        * **telenutrition.patient_attribute_option.is_active**
        * - `bool` in database
        * - Nullable, default: `true`
        */
        is_active: boolean | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.patient_attribute_option.patient_attribute_option_id**
        * - `int4` in database
        * - Generated column
        */
        patient_attribute_option_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_attribute_option.patient_attribute_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_attribute_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_attribute_option.ontology_concept_id**
        * - `int4` in database
        * - Nullable, no default
        */
        ontology_concept_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_attribute_option.associated_concept_id**
        * - `int4` in database
        * - Nullable, no default
        */
        associated_concept_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_attribute_option.option_code**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        option_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_attribute_option.option_text**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        option_text?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_attribute_option.is_active**
        * - `bool` in database
        * - Nullable, default: `true`
        */
        is_active?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.patient_attribute_option.patient_attribute_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_attribute_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.patient_attribute_option.ontology_concept_id**
        * - `int4` in database
        * - Nullable, no default
        */
        ontology_concept_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.patient_attribute_option.associated_concept_id**
        * - `int4` in database
        * - Nullable, no default
        */
        associated_concept_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.patient_attribute_option.option_code**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        option_code: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.patient_attribute_option.option_text**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        option_text: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.patient_attribute_option.is_active**
        * - `bool` in database
        * - Nullable, default: `true`
        */
        is_active?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.patient_attribute_option.patient_attribute_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_attribute_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.patient_attribute_option.ontology_concept_id**
        * - `int4` in database
        * - Nullable, no default
        */
        ontology_concept_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.patient_attribute_option.associated_concept_id**
        * - `int4` in database
        * - Nullable, no default
        */
        associated_concept_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.patient_attribute_option.option_code**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        option_code?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.patient_attribute_option.option_text**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        option_text?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.patient_attribute_option.is_active**
        * - `bool` in database
        * - Nullable, default: `true`
        */
        is_active?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'patient_attribute_option_patient_attribute_id_ontology_conc_key' | 'patient_attribute_option_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.patient_fact**
     * - Table in database
     */
    export namespace patient_fact {
      export type Table = 'telenutrition.patient_fact';
      export interface Selectable {
        /**
        * **telenutrition.patient_fact.patient_fact_id**
        * - `int4` in database
        * - Generated column
        */
        patient_fact_id: number;
        /**
        * **telenutrition.patient_fact.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number;
        /**
        * **telenutrition.patient_fact.patient_attribute_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_attribute_id: number;
        /**
        * **telenutrition.patient_fact.ontology_concept_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        ontology_concept_id: number;
        /**
        * **telenutrition.patient_fact.attribute_value**
        * - `text` in database
        * - Nullable, no default
        */
        attribute_value: string | null;
        /**
        * **telenutrition.patient_fact.patient_fact_source_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_fact_source_id: number;
        /**
        * **telenutrition.patient_fact.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.patient_fact.collected_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        collected_at: Date | null;
        /**
        * **telenutrition.patient_fact.is_active**
        * - `bool` in database
        * - Nullable, default: `true`
        */
        is_active: boolean | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.patient_fact.patient_fact_id**
        * - `int4` in database
        * - Generated column
        */
        patient_fact_id: number;
        /**
        * **telenutrition.patient_fact.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number;
        /**
        * **telenutrition.patient_fact.patient_attribute_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_attribute_id: number;
        /**
        * **telenutrition.patient_fact.ontology_concept_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        ontology_concept_id: number;
        /**
        * **telenutrition.patient_fact.attribute_value**
        * - `text` in database
        * - Nullable, no default
        */
        attribute_value: string | null;
        /**
        * **telenutrition.patient_fact.patient_fact_source_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_fact_source_id: number;
        /**
        * **telenutrition.patient_fact.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampTzString;
        /**
        * **telenutrition.patient_fact.collected_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        collected_at: db.TimestampTzString | null;
        /**
        * **telenutrition.patient_fact.is_active**
        * - `bool` in database
        * - Nullable, default: `true`
        */
        is_active: boolean | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.patient_fact.patient_fact_id**
        * - `int4` in database
        * - Generated column
        */
        patient_fact_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_fact.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_fact.patient_attribute_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_attribute_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_fact.ontology_concept_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        ontology_concept_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_fact.attribute_value**
        * - `text` in database
        * - Nullable, no default
        */
        attribute_value?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_fact.patient_fact_source_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_fact_source_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_fact.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_fact.collected_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        collected_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_fact.is_active**
        * - `bool` in database
        * - Nullable, default: `true`
        */
        is_active?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.patient_fact.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.patient_fact.patient_attribute_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_attribute_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.patient_fact.ontology_concept_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        ontology_concept_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.patient_fact.attribute_value**
        * - `text` in database
        * - Nullable, no default
        */
        attribute_value?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.patient_fact.patient_fact_source_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_fact_source_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.patient_fact.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.patient_fact.collected_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        collected_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.patient_fact.is_active**
        * - `bool` in database
        * - Nullable, default: `true`
        */
        is_active?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.patient_fact.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.patient_fact.patient_attribute_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_attribute_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.patient_fact.ontology_concept_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        ontology_concept_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.patient_fact.attribute_value**
        * - `text` in database
        * - Nullable, no default
        */
        attribute_value?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.patient_fact.patient_fact_source_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_fact_source_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.patient_fact.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.patient_fact.collected_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        collected_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.patient_fact.is_active**
        * - `bool` in database
        * - Nullable, default: `true`
        */
        is_active?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'patient_fact_patient_id_patient_attribute_id_created_at_col_key' | 'patient_fact_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.patient_fact_source**
     * - Table in database
     */
    export namespace patient_fact_source {
      export type Table = 'telenutrition.patient_fact_source';
      export interface Selectable {
        /**
        * **telenutrition.patient_fact_source.patient_fact_source_id**
        * - `int4` in database
        * - Generated column
        */
        patient_fact_source_id: number;
        /**
        * **telenutrition.patient_fact_source.source_type**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source_type: string;
        /**
        * **telenutrition.patient_fact_source.source_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source_code: string;
        /**
        * **telenutrition.patient_fact_source.reporting_type**
        * - `varchar` in database
        * - `NOT NULL`, default: `'self_reported'::character varying`
        */
        reporting_type: string;
        /**
        * **telenutrition.patient_fact_source.reported_by**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        reported_by: string;
        /**
        * **telenutrition.patient_fact_source.source_reference_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        source_reference_id: number;
        /**
        * **telenutrition.patient_fact_source.description**
        * - `text` in database
        * - Nullable, no default
        */
        description: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.patient_fact_source.patient_fact_source_id**
        * - `int4` in database
        * - Generated column
        */
        patient_fact_source_id: number;
        /**
        * **telenutrition.patient_fact_source.source_type**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source_type: string;
        /**
        * **telenutrition.patient_fact_source.source_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source_code: string;
        /**
        * **telenutrition.patient_fact_source.reporting_type**
        * - `varchar` in database
        * - `NOT NULL`, default: `'self_reported'::character varying`
        */
        reporting_type: string;
        /**
        * **telenutrition.patient_fact_source.reported_by**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        reported_by: string;
        /**
        * **telenutrition.patient_fact_source.source_reference_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        source_reference_id: number;
        /**
        * **telenutrition.patient_fact_source.description**
        * - `text` in database
        * - Nullable, no default
        */
        description: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.patient_fact_source.patient_fact_source_id**
        * - `int4` in database
        * - Generated column
        */
        patient_fact_source_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_fact_source.source_type**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_fact_source.source_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_fact_source.reporting_type**
        * - `varchar` in database
        * - `NOT NULL`, default: `'self_reported'::character varying`
        */
        reporting_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_fact_source.reported_by**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        reported_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_fact_source.source_reference_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        source_reference_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_fact_source.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.patient_fact_source.source_type**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source_type: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.patient_fact_source.source_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source_code: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.patient_fact_source.reporting_type**
        * - `varchar` in database
        * - `NOT NULL`, default: `'self_reported'::character varying`
        */
        reporting_type?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.patient_fact_source.reported_by**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        reported_by: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.patient_fact_source.source_reference_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        source_reference_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.patient_fact_source.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.patient_fact_source.source_type**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source_type?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.patient_fact_source.source_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source_code?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.patient_fact_source.reporting_type**
        * - `varchar` in database
        * - `NOT NULL`, default: `'self_reported'::character varying`
        */
        reporting_type?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.patient_fact_source.reported_by**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        reported_by?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.patient_fact_source.source_reference_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        source_reference_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.patient_fact_source.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'patient_fact_source_pkey' | 'patient_fact_source_source_reference_id_source_code_key';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.patient_payment_transaction**
     * - Table in database
     */
    export namespace patient_payment_transaction {
      export type Table = 'telenutrition.patient_payment_transaction';
      export interface Selectable {
        /**
        * **telenutrition.patient_payment_transaction.payment_transaction_id**
        * - `int4` in database
        * - Generated column
        */
        payment_transaction_id: number;
        /**
        * **telenutrition.patient_payment_transaction.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status: string;
        /**
        * **telenutrition.patient_payment_transaction.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number;
        /**
        * **telenutrition.patient_payment_transaction.payment_method_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payment_method_id: number;
        /**
        * **telenutrition.patient_payment_transaction.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id: number;
        /**
        * **telenutrition.patient_payment_transaction.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.patient_payment_transaction.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.patient_payment_transaction.payment_transaction_id**
        * - `int4` in database
        * - Generated column
        */
        payment_transaction_id: number;
        /**
        * **telenutrition.patient_payment_transaction.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status: string;
        /**
        * **telenutrition.patient_payment_transaction.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number;
        /**
        * **telenutrition.patient_payment_transaction.payment_method_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payment_method_id: number;
        /**
        * **telenutrition.patient_payment_transaction.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id: number;
        /**
        * **telenutrition.patient_payment_transaction.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.patient_payment_transaction.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.patient_payment_transaction.payment_transaction_id**
        * - `int4` in database
        * - Generated column
        */
        payment_transaction_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_payment_transaction.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_payment_transaction.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_payment_transaction.payment_method_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payment_method_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_payment_transaction.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_payment_transaction.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_payment_transaction.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.patient_payment_transaction.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.patient_payment_transaction.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.patient_payment_transaction.payment_method_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payment_method_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.patient_payment_transaction.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.patient_payment_transaction.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.patient_payment_transaction.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.patient_payment_transaction.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.patient_payment_transaction.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.patient_payment_transaction.payment_method_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payment_method_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.patient_payment_transaction.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.patient_payment_transaction.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.patient_payment_transaction.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'patient_payment_transaction_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.patient_summary**
     * - Table in database
     */
    export namespace patient_summary {
      export type Table = 'telenutrition.patient_summary';
      export interface Selectable {
        /**
        * **telenutrition.patient_summary.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number;
        /**
        * **telenutrition.patient_summary.previous_appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        previous_appointment_id: number | null;
        /**
        * **telenutrition.patient_summary.next_appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        next_appointment_id: number | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.patient_summary.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number;
        /**
        * **telenutrition.patient_summary.previous_appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        previous_appointment_id: number | null;
        /**
        * **telenutrition.patient_summary.next_appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        next_appointment_id: number | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.patient_summary.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_summary.previous_appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        previous_appointment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.patient_summary.next_appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        next_appointment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.patient_summary.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.patient_summary.previous_appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        previous_appointment_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.patient_summary.next_appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        next_appointment_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.patient_summary.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.patient_summary.previous_appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        previous_appointment_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.patient_summary.next_appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        next_appointment_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'patient_summary_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.payer**
     * - Table in database
     */
    export namespace payer {
      export type Table = 'telenutrition.payer';
      export interface Selectable {
        /**
        * **telenutrition.payer.payer_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payer_payer_id_seq'::regclass)`
        */
        payer_id: number;
        /**
        * **telenutrition.payer.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.payer.roster_check**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        roster_check: boolean;
        /**
        * **telenutrition.payer.candid_payer_id**
        * - `text` in database
        * - Nullable, no default
        */
        candid_payer_id: string | null;
        /**
        * **telenutrition.payer.candid_payer_name**
        * - `text` in database
        * - Nullable, no default
        */
        candid_payer_name: string | null;
        /**
        * **telenutrition.payer.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.payer.medallion_id**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_id: string | null;
        /**
        * **telenutrition.payer.oversight_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        oversight_required: boolean;
        /**
        * **telenutrition.payer.enrollment_check**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        enrollment_check: boolean;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.payer.payer_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payer_payer_id_seq'::regclass)`
        */
        payer_id: number;
        /**
        * **telenutrition.payer.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.payer.roster_check**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        roster_check: boolean;
        /**
        * **telenutrition.payer.candid_payer_id**
        * - `text` in database
        * - Nullable, no default
        */
        candid_payer_id: string | null;
        /**
        * **telenutrition.payer.candid_payer_name**
        * - `text` in database
        * - Nullable, no default
        */
        candid_payer_name: string | null;
        /**
        * **telenutrition.payer.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.payer.medallion_id**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_id: string | null;
        /**
        * **telenutrition.payer.oversight_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        oversight_required: boolean;
        /**
        * **telenutrition.payer.enrollment_check**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        enrollment_check: boolean;
      }
      export interface Whereable {
        /**
        * **telenutrition.payer.payer_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payer_payer_id_seq'::regclass)`
        */
        payer_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer.roster_check**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        roster_check?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer.candid_payer_id**
        * - `text` in database
        * - Nullable, no default
        */
        candid_payer_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer.candid_payer_name**
        * - `text` in database
        * - Nullable, no default
        */
        candid_payer_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer.medallion_id**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer.oversight_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        oversight_required?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer.enrollment_check**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        enrollment_check?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.payer.payer_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payer_payer_id_seq'::regclass)`
        */
        payer_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.payer.roster_check**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        roster_check?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer.candid_payer_id**
        * - `text` in database
        * - Nullable, no default
        */
        candid_payer_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer.candid_payer_name**
        * - `text` in database
        * - Nullable, no default
        */
        candid_payer_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer.medallion_id**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer.oversight_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        oversight_required?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer.enrollment_check**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        enrollment_check?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.payer.payer_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payer_payer_id_seq'::regclass)`
        */
        payer_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.payer.roster_check**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        roster_check?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer.candid_payer_id**
        * - `text` in database
        * - Nullable, no default
        */
        candid_payer_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer.candid_payer_name**
        * - `text` in database
        * - Nullable, no default
        */
        candid_payer_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer.medallion_id**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer.oversight_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        oversight_required?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer.enrollment_check**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        enrollment_check?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'idx_unique_candid_payer' | 'payer_medallion_id_key' | 'payer_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.payer_enrollment**
     * - Table in database
     */
    export namespace payer_enrollment {
      export type Table = 'telenutrition.payer_enrollment';
      export interface Selectable {
        /**
        * **telenutrition.payer_enrollment.payer_enrollment_id**
        * - `int4` in database
        * - Generated column
        */
        payer_enrollment_id: number;
        /**
        * **telenutrition.payer_enrollment.payer_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payer_id: number;
        /**
        * **telenutrition.payer_enrollment.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
        /**
        * **telenutrition.payer_enrollment.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status: string;
        /**
        * **telenutrition.payer_enrollment.enrollment_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        enrollment_type: string;
        /**
        * **telenutrition.payer_enrollment.submission_verified_date**
        * - `date` in database
        * - Nullable, no default
        */
        submission_verified_date: Date | null;
        /**
        * **telenutrition.payer_enrollment.submission_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verified_by: string | null;
        /**
        * **telenutrition.payer_enrollment.submission_verified_method**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verified_method: string | null;
        /**
        * **telenutrition.payer_enrollment.approval_verified_date**
        * - `date` in database
        * - Nullable, no default
        */
        approval_verified_date: Date | null;
        /**
        * **telenutrition.payer_enrollment.approval_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verified_by: string | null;
        /**
        * **telenutrition.payer_enrollment.approval_verified_method**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verified_method: string | null;
        /**
        * **telenutrition.payer_enrollment.effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        effective_date: Date | null;
        /**
        * **telenutrition.payer_enrollment.end_date**
        * - `date` in database
        * - Nullable, no default
        */
        end_date: Date | null;
        /**
        * **telenutrition.payer_enrollment.notes**
        * - `text` in database
        * - Nullable, no default
        */
        notes: string | null;
        /**
        * **telenutrition.payer_enrollment.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.payer_enrollment.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by: string;
        /**
        * **telenutrition.payer_enrollment.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
        /**
        * **telenutrition.payer_enrollment.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.payer_enrollment.payer_enrollment_id**
        * - `int4` in database
        * - Generated column
        */
        payer_enrollment_id: number;
        /**
        * **telenutrition.payer_enrollment.payer_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payer_id: number;
        /**
        * **telenutrition.payer_enrollment.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
        /**
        * **telenutrition.payer_enrollment.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status: string;
        /**
        * **telenutrition.payer_enrollment.enrollment_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        enrollment_type: string;
        /**
        * **telenutrition.payer_enrollment.submission_verified_date**
        * - `date` in database
        * - Nullable, no default
        */
        submission_verified_date: db.DateString | null;
        /**
        * **telenutrition.payer_enrollment.submission_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verified_by: string | null;
        /**
        * **telenutrition.payer_enrollment.submission_verified_method**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verified_method: string | null;
        /**
        * **telenutrition.payer_enrollment.approval_verified_date**
        * - `date` in database
        * - Nullable, no default
        */
        approval_verified_date: db.DateString | null;
        /**
        * **telenutrition.payer_enrollment.approval_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verified_by: string | null;
        /**
        * **telenutrition.payer_enrollment.approval_verified_method**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verified_method: string | null;
        /**
        * **telenutrition.payer_enrollment.effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        effective_date: db.DateString | null;
        /**
        * **telenutrition.payer_enrollment.end_date**
        * - `date` in database
        * - Nullable, no default
        */
        end_date: db.DateString | null;
        /**
        * **telenutrition.payer_enrollment.notes**
        * - `text` in database
        * - Nullable, no default
        */
        notes: string | null;
        /**
        * **telenutrition.payer_enrollment.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.payer_enrollment.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by: string;
        /**
        * **telenutrition.payer_enrollment.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
        /**
        * **telenutrition.payer_enrollment.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.payer_enrollment.payer_enrollment_id**
        * - `int4` in database
        * - Generated column
        */
        payer_enrollment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.payer_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payer_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.enrollment_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        enrollment_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.submission_verified_date**
        * - `date` in database
        * - Nullable, no default
        */
        submission_verified_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.submission_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verified_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.submission_verified_method**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verified_method?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.approval_verified_date**
        * - `date` in database
        * - Nullable, no default
        */
        approval_verified_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.approval_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verified_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.approval_verified_method**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verified_method?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        effective_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.end_date**
        * - `date` in database
        * - Nullable, no default
        */
        end_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.notes**
        * - `text` in database
        * - Nullable, no default
        */
        notes?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_enrollment.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.payer_enrollment.payer_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payer_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.payer_enrollment.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.payer_enrollment.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.payer_enrollment.enrollment_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        enrollment_type: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.payer_enrollment.submission_verified_date**
        * - `date` in database
        * - Nullable, no default
        */
        submission_verified_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer_enrollment.submission_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verified_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer_enrollment.submission_verified_method**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verified_method?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer_enrollment.approval_verified_date**
        * - `date` in database
        * - Nullable, no default
        */
        approval_verified_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer_enrollment.approval_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verified_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer_enrollment.approval_verified_method**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verified_method?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer_enrollment.effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        effective_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer_enrollment.end_date**
        * - `date` in database
        * - Nullable, no default
        */
        end_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer_enrollment.notes**
        * - `text` in database
        * - Nullable, no default
        */
        notes?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer_enrollment.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer_enrollment.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.payer_enrollment.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer_enrollment.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.payer_enrollment.payer_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payer_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.payer_enrollment.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.payer_enrollment.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.payer_enrollment.enrollment_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        enrollment_type?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.payer_enrollment.submission_verified_date**
        * - `date` in database
        * - Nullable, no default
        */
        submission_verified_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer_enrollment.submission_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verified_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer_enrollment.submission_verified_method**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verified_method?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer_enrollment.approval_verified_date**
        * - `date` in database
        * - Nullable, no default
        */
        approval_verified_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer_enrollment.approval_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verified_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer_enrollment.approval_verified_method**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verified_method?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer_enrollment.effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        effective_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer_enrollment.end_date**
        * - `date` in database
        * - Nullable, no default
        */
        end_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer_enrollment.notes**
        * - `text` in database
        * - Nullable, no default
        */
        notes?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer_enrollment.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer_enrollment.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.payer_enrollment.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer_enrollment.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'payer_enrollment_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.payer_provider_schedulability**
     * - View in database
     */
    export namespace payer_provider_schedulability {
      export type Table = 'telenutrition.payer_provider_schedulability';
      export interface Selectable {
        /**
        * **telenutrition.payer_provider_schedulability.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.payer_provider_schedulability.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id: number | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.payer_provider_schedulability.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.payer_provider_schedulability.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id: number | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.payer_provider_schedulability.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_provider_schedulability.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        [key: string]: never;
      }
      export interface Updatable {
        [key: string]: never;
      }
      export type UniqueIndex = never;
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.payer_roster**
     * - Table in database
     */
    export namespace payer_roster {
      export type Table = 'telenutrition.payer_roster';
      export interface Selectable {
        /**
        * **telenutrition.payer_roster.payer_roster_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payer_roster_payer_roster_id_seq'::regclass)`
        */
        payer_roster_id: number;
        /**
        * **telenutrition.payer_roster.payer_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payer_id: number;
        /**
        * **telenutrition.payer_roster.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
        /**
        * **telenutrition.payer_roster.effective_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        effective_date: Date;
        /**
        * **telenutrition.payer_roster.end_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        end_date: Date;
        /**
        * **telenutrition.payer_roster.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.payer_roster.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by: string;
        /**
        * **telenutrition.payer_roster.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
        /**
        * **telenutrition.payer_roster.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.payer_roster.payer_roster_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payer_roster_payer_roster_id_seq'::regclass)`
        */
        payer_roster_id: number;
        /**
        * **telenutrition.payer_roster.payer_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payer_id: number;
        /**
        * **telenutrition.payer_roster.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
        /**
        * **telenutrition.payer_roster.effective_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        effective_date: db.DateString;
        /**
        * **telenutrition.payer_roster.end_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        end_date: db.DateString;
        /**
        * **telenutrition.payer_roster.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.payer_roster.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by: string;
        /**
        * **telenutrition.payer_roster.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
        /**
        * **telenutrition.payer_roster.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.payer_roster.payer_roster_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payer_roster_payer_roster_id_seq'::regclass)`
        */
        payer_roster_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_roster.payer_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payer_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_roster.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_roster.effective_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        effective_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_roster.end_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        end_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_roster.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_roster.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_roster.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payer_roster.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.payer_roster.payer_roster_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payer_roster_payer_roster_id_seq'::regclass)`
        */
        payer_roster_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer_roster.payer_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payer_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.payer_roster.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.payer_roster.effective_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        effective_date: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.payer_roster.end_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        end_date: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.payer_roster.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer_roster.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.payer_roster.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payer_roster.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.payer_roster.payer_roster_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payer_roster_payer_roster_id_seq'::regclass)`
        */
        payer_roster_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer_roster.payer_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payer_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.payer_roster.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.payer_roster.effective_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        effective_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.payer_roster.end_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        end_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.payer_roster.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer_roster.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.payer_roster.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payer_roster.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'payer_roster_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.payment_eligibility_check**
     * - Table in database
     */
    export namespace payment_eligibility_check {
      export type Table = 'telenutrition.payment_eligibility_check';
      export interface Selectable {
        /**
        * **telenutrition.payment_eligibility_check.eligibility_check_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payment_eligibility_check_eligibility_check_id_seq'::regclass)`
        */
        eligibility_check_id: number;
        /**
        * **telenutrition.payment_eligibility_check.payment_method_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payment_method_id: number;
        /**
        * **telenutrition.payment_eligibility_check.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status: string;
        /**
        * **telenutrition.payment_eligibility_check.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.payment_eligibility_check.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta: db.JSONValue | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.payment_eligibility_check.eligibility_check_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payment_eligibility_check_eligibility_check_id_seq'::regclass)`
        */
        eligibility_check_id: number;
        /**
        * **telenutrition.payment_eligibility_check.payment_method_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payment_method_id: number;
        /**
        * **telenutrition.payment_eligibility_check.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status: string;
        /**
        * **telenutrition.payment_eligibility_check.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.payment_eligibility_check.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta: db.JSONValue | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.payment_eligibility_check.eligibility_check_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payment_eligibility_check_eligibility_check_id_seq'::regclass)`
        */
        eligibility_check_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payment_eligibility_check.payment_method_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payment_method_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payment_eligibility_check.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payment_eligibility_check.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payment_eligibility_check.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.payment_eligibility_check.eligibility_check_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payment_eligibility_check_eligibility_check_id_seq'::regclass)`
        */
        eligibility_check_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payment_eligibility_check.payment_method_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payment_method_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.payment_eligibility_check.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.payment_eligibility_check.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payment_eligibility_check.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.payment_eligibility_check.eligibility_check_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payment_eligibility_check_eligibility_check_id_seq'::regclass)`
        */
        eligibility_check_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payment_eligibility_check.payment_method_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        payment_method_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.payment_eligibility_check.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.payment_eligibility_check.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payment_eligibility_check.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'payment_eligibility_check_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.payment_method_type**
     * - Table in database
     */
    export namespace payment_method_type {
      export type Table = 'telenutrition.payment_method_type';
      export interface Selectable {
        /**
        * **telenutrition.payment_method_type.payment_method_type_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payment_method_type_payment_method_type_id_seq'::regclass)`
        */
        payment_method_type_id: number;
        /**
        * **telenutrition.payment_method_type.method**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        method: string;
        /**
        * **telenutrition.payment_method_type.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.payment_method_type.insurance_id**
        * - `int4` in database
        * - Nullable, no default
        */
        insurance_id: number | null;
        /**
        * **telenutrition.payment_method_type.employer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employer_id: number | null;
        /**
        * **telenutrition.payment_method_type.eligibility_check_type**
        * - `text` in database
        * - `NOT NULL`, default: `'none'::text`
        */
        eligibility_check_type: string;
        /**
        * **telenutrition.payment_method_type.eligibility_optional**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        eligibility_optional: boolean;
        /**
        * **telenutrition.payment_method_type.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id: number | null;
        /**
        * **telenutrition.payment_method_type.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible: boolean;
        /**
        * **telenutrition.payment_method_type.follow_up_durations**
        * - `_int4` in database
        * - `NOT NULL`, default: `'{60}'::integer[]`
        */
        follow_up_durations: number[];
        /**
        * **telenutrition.payment_method_type.audio_support**
        * - `text` in database
        * - `NOT NULL`, default: `'never'::text`
        */
        audio_support: string;
        /**
        * **telenutrition.payment_method_type.schema**
        * - `jsonb` in database
        * - Nullable, no default
        */
        schema: db.JSONValue | null;
        /**
        * **telenutrition.payment_method_type.sponsor_id**
        * - `int4` in database
        * - Nullable, no default
        */
        sponsor_id: number | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.payment_method_type.payment_method_type_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payment_method_type_payment_method_type_id_seq'::regclass)`
        */
        payment_method_type_id: number;
        /**
        * **telenutrition.payment_method_type.method**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        method: string;
        /**
        * **telenutrition.payment_method_type.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.payment_method_type.insurance_id**
        * - `int4` in database
        * - Nullable, no default
        */
        insurance_id: number | null;
        /**
        * **telenutrition.payment_method_type.employer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employer_id: number | null;
        /**
        * **telenutrition.payment_method_type.eligibility_check_type**
        * - `text` in database
        * - `NOT NULL`, default: `'none'::text`
        */
        eligibility_check_type: string;
        /**
        * **telenutrition.payment_method_type.eligibility_optional**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        eligibility_optional: boolean;
        /**
        * **telenutrition.payment_method_type.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id: number | null;
        /**
        * **telenutrition.payment_method_type.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible: boolean;
        /**
        * **telenutrition.payment_method_type.follow_up_durations**
        * - `_int4` in database
        * - `NOT NULL`, default: `'{60}'::integer[]`
        */
        follow_up_durations: number[];
        /**
        * **telenutrition.payment_method_type.audio_support**
        * - `text` in database
        * - `NOT NULL`, default: `'never'::text`
        */
        audio_support: string;
        /**
        * **telenutrition.payment_method_type.schema**
        * - `jsonb` in database
        * - Nullable, no default
        */
        schema: db.JSONValue | null;
        /**
        * **telenutrition.payment_method_type.sponsor_id**
        * - `int4` in database
        * - Nullable, no default
        */
        sponsor_id: number | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.payment_method_type.payment_method_type_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payment_method_type_payment_method_type_id_seq'::regclass)`
        */
        payment_method_type_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payment_method_type.method**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        method?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payment_method_type.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payment_method_type.insurance_id**
        * - `int4` in database
        * - Nullable, no default
        */
        insurance_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payment_method_type.employer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employer_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payment_method_type.eligibility_check_type**
        * - `text` in database
        * - `NOT NULL`, default: `'none'::text`
        */
        eligibility_check_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payment_method_type.eligibility_optional**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        eligibility_optional?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payment_method_type.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payment_method_type.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payment_method_type.follow_up_durations**
        * - `_int4` in database
        * - `NOT NULL`, default: `'{60}'::integer[]`
        */
        follow_up_durations?: number[] | db.Parameter<number[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number[] | db.Parameter<number[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payment_method_type.audio_support**
        * - `text` in database
        * - `NOT NULL`, default: `'never'::text`
        */
        audio_support?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payment_method_type.schema**
        * - `jsonb` in database
        * - Nullable, no default
        */
        schema?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.payment_method_type.sponsor_id**
        * - `int4` in database
        * - Nullable, no default
        */
        sponsor_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.payment_method_type.payment_method_type_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payment_method_type_payment_method_type_id_seq'::regclass)`
        */
        payment_method_type_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payment_method_type.method**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        method: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.payment_method_type.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.payment_method_type.insurance_id**
        * - `int4` in database
        * - Nullable, no default
        */
        insurance_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payment_method_type.employer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employer_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payment_method_type.eligibility_check_type**
        * - `text` in database
        * - `NOT NULL`, default: `'none'::text`
        */
        eligibility_check_type?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payment_method_type.eligibility_optional**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        eligibility_optional?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payment_method_type.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payment_method_type.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payment_method_type.follow_up_durations**
        * - `_int4` in database
        * - `NOT NULL`, default: `'{60}'::integer[]`
        */
        follow_up_durations?: number[] | db.Parameter<number[]> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payment_method_type.audio_support**
        * - `text` in database
        * - `NOT NULL`, default: `'never'::text`
        */
        audio_support?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payment_method_type.schema**
        * - `jsonb` in database
        * - Nullable, no default
        */
        schema?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.payment_method_type.sponsor_id**
        * - `int4` in database
        * - Nullable, no default
        */
        sponsor_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.payment_method_type.payment_method_type_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.payment_method_type_payment_method_type_id_seq'::regclass)`
        */
        payment_method_type_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payment_method_type.method**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        method?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.payment_method_type.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.payment_method_type.insurance_id**
        * - `int4` in database
        * - Nullable, no default
        */
        insurance_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payment_method_type.employer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employer_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payment_method_type.eligibility_check_type**
        * - `text` in database
        * - `NOT NULL`, default: `'none'::text`
        */
        eligibility_check_type?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payment_method_type.eligibility_optional**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        eligibility_optional?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payment_method_type.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payment_method_type.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payment_method_type.follow_up_durations**
        * - `_int4` in database
        * - `NOT NULL`, default: `'{60}'::integer[]`
        */
        follow_up_durations?: number[] | db.Parameter<number[]> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number[] | db.Parameter<number[]> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payment_method_type.audio_support**
        * - `text` in database
        * - `NOT NULL`, default: `'never'::text`
        */
        audio_support?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payment_method_type.schema**
        * - `jsonb` in database
        * - Nullable, no default
        */
        schema?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.payment_method_type.sponsor_id**
        * - `int4` in database
        * - Nullable, no default
        */
        sponsor_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'payment_method_type_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.provider_board_certificate**
     * - Table in database
     */
    export namespace provider_board_certificate {
      export type Table = 'telenutrition.provider_board_certificate';
      export interface Selectable {
        /**
        * **telenutrition.provider_board_certificate.certificate_id**
        * - `int4` in database
        * - Generated column
        */
        certificate_id: number;
        /**
        * **telenutrition.provider_board_certificate.medallion_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        medallion_id: string;
        /**
        * **telenutrition.provider_board_certificate.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.provider_board_certificate.source**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        source: string;
        /**
        * **telenutrition.provider_board_certificate.abms**
        * - `text` in database
        * - Nullable, no default
        */
        abms: string | null;
        /**
        * **telenutrition.provider_board_certificate.board_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        board_name: string;
        /**
        * **telenutrition.provider_board_certificate.is_board_certification**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        is_board_certification: boolean;
        /**
        * **telenutrition.provider_board_certificate.specialty**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        specialty: string;
        /**
        * **telenutrition.provider_board_certificate.certification_number**
        * - `text` in database
        * - Nullable, no default
        */
        certification_number: string | null;
        /**
        * **telenutrition.provider_board_certificate.is_exam_passed**
        * - `bool` in database
        * - Nullable, no default
        */
        is_exam_passed: boolean | null;
        /**
        * **telenutrition.provider_board_certificate.issue_date**
        * - `date` in database
        * - Nullable, no default
        */
        issue_date: Date | null;
        /**
        * **telenutrition.provider_board_certificate.is_indefinite**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        is_indefinite: boolean;
        /**
        * **telenutrition.provider_board_certificate.expiration_date**
        * - `date` in database
        * - Nullable, no default
        */
        expiration_date: Date | null;
        /**
        * **telenutrition.provider_board_certificate.recertification_date**
        * - `date` in database
        * - Nullable, no default
        */
        recertification_date: Date | null;
        /**
        * **telenutrition.provider_board_certificate.exam_date**
        * - `date` in database
        * - Nullable, no default
        */
        exam_date: Date | null;
        /**
        * **telenutrition.provider_board_certificate.moc_status**
        * - `bool` in database
        * - Nullable, no default
        */
        moc_status: boolean | null;
        /**
        * **telenutrition.provider_board_certificate.is_meeting_moc**
        * - `bool` in database
        * - Nullable, no default
        */
        is_meeting_moc: boolean | null;
        /**
        * **telenutrition.provider_board_certificate.moc_verification_date**
        * - `date` in database
        * - Nullable, no default
        */
        moc_verification_date: Date | null;
        /**
        * **telenutrition.provider_board_certificate.moc_annual_reverification_date**
        * - `date` in database
        * - Nullable, no default
        */
        moc_annual_reverification_date: Date | null;
        /**
        * **telenutrition.provider_board_certificate.requires_verification**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        requires_verification: boolean;
        /**
        * **telenutrition.provider_board_certificate.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.provider_board_certificate.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.provider_board_certificate.certificate_id**
        * - `int4` in database
        * - Generated column
        */
        certificate_id: number;
        /**
        * **telenutrition.provider_board_certificate.medallion_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        medallion_id: string;
        /**
        * **telenutrition.provider_board_certificate.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.provider_board_certificate.source**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        source: string;
        /**
        * **telenutrition.provider_board_certificate.abms**
        * - `text` in database
        * - Nullable, no default
        */
        abms: string | null;
        /**
        * **telenutrition.provider_board_certificate.board_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        board_name: string;
        /**
        * **telenutrition.provider_board_certificate.is_board_certification**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        is_board_certification: boolean;
        /**
        * **telenutrition.provider_board_certificate.specialty**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        specialty: string;
        /**
        * **telenutrition.provider_board_certificate.certification_number**
        * - `text` in database
        * - Nullable, no default
        */
        certification_number: string | null;
        /**
        * **telenutrition.provider_board_certificate.is_exam_passed**
        * - `bool` in database
        * - Nullable, no default
        */
        is_exam_passed: boolean | null;
        /**
        * **telenutrition.provider_board_certificate.issue_date**
        * - `date` in database
        * - Nullable, no default
        */
        issue_date: db.DateString | null;
        /**
        * **telenutrition.provider_board_certificate.is_indefinite**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        is_indefinite: boolean;
        /**
        * **telenutrition.provider_board_certificate.expiration_date**
        * - `date` in database
        * - Nullable, no default
        */
        expiration_date: db.DateString | null;
        /**
        * **telenutrition.provider_board_certificate.recertification_date**
        * - `date` in database
        * - Nullable, no default
        */
        recertification_date: db.DateString | null;
        /**
        * **telenutrition.provider_board_certificate.exam_date**
        * - `date` in database
        * - Nullable, no default
        */
        exam_date: db.DateString | null;
        /**
        * **telenutrition.provider_board_certificate.moc_status**
        * - `bool` in database
        * - Nullable, no default
        */
        moc_status: boolean | null;
        /**
        * **telenutrition.provider_board_certificate.is_meeting_moc**
        * - `bool` in database
        * - Nullable, no default
        */
        is_meeting_moc: boolean | null;
        /**
        * **telenutrition.provider_board_certificate.moc_verification_date**
        * - `date` in database
        * - Nullable, no default
        */
        moc_verification_date: db.DateString | null;
        /**
        * **telenutrition.provider_board_certificate.moc_annual_reverification_date**
        * - `date` in database
        * - Nullable, no default
        */
        moc_annual_reverification_date: db.DateString | null;
        /**
        * **telenutrition.provider_board_certificate.requires_verification**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        requires_verification: boolean;
        /**
        * **telenutrition.provider_board_certificate.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.provider_board_certificate.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.provider_board_certificate.certificate_id**
        * - `int4` in database
        * - Generated column
        */
        certificate_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.medallion_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        medallion_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.source**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        source?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.abms**
        * - `text` in database
        * - Nullable, no default
        */
        abms?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.board_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        board_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.is_board_certification**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        is_board_certification?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.specialty**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        specialty?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.certification_number**
        * - `text` in database
        * - Nullable, no default
        */
        certification_number?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.is_exam_passed**
        * - `bool` in database
        * - Nullable, no default
        */
        is_exam_passed?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.issue_date**
        * - `date` in database
        * - Nullable, no default
        */
        issue_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.is_indefinite**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        is_indefinite?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.expiration_date**
        * - `date` in database
        * - Nullable, no default
        */
        expiration_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.recertification_date**
        * - `date` in database
        * - Nullable, no default
        */
        recertification_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.exam_date**
        * - `date` in database
        * - Nullable, no default
        */
        exam_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.moc_status**
        * - `bool` in database
        * - Nullable, no default
        */
        moc_status?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.is_meeting_moc**
        * - `bool` in database
        * - Nullable, no default
        */
        is_meeting_moc?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.moc_verification_date**
        * - `date` in database
        * - Nullable, no default
        */
        moc_verification_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.moc_annual_reverification_date**
        * - `date` in database
        * - Nullable, no default
        */
        moc_annual_reverification_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.requires_verification**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        requires_verification?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_board_certificate.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.provider_board_certificate.medallion_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        medallion_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.source**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        source: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.abms**
        * - `text` in database
        * - Nullable, no default
        */
        abms?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.board_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        board_name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.is_board_certification**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        is_board_certification: boolean | db.Parameter<boolean> | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.specialty**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        specialty: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.certification_number**
        * - `text` in database
        * - Nullable, no default
        */
        certification_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.is_exam_passed**
        * - `bool` in database
        * - Nullable, no default
        */
        is_exam_passed?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.issue_date**
        * - `date` in database
        * - Nullable, no default
        */
        issue_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.is_indefinite**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        is_indefinite: boolean | db.Parameter<boolean> | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.expiration_date**
        * - `date` in database
        * - Nullable, no default
        */
        expiration_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.recertification_date**
        * - `date` in database
        * - Nullable, no default
        */
        recertification_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.exam_date**
        * - `date` in database
        * - Nullable, no default
        */
        exam_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.moc_status**
        * - `bool` in database
        * - Nullable, no default
        */
        moc_status?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.is_meeting_moc**
        * - `bool` in database
        * - Nullable, no default
        */
        is_meeting_moc?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.moc_verification_date**
        * - `date` in database
        * - Nullable, no default
        */
        moc_verification_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.moc_annual_reverification_date**
        * - `date` in database
        * - Nullable, no default
        */
        moc_annual_reverification_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.requires_verification**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        requires_verification: boolean | db.Parameter<boolean> | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_board_certificate.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.provider_board_certificate.medallion_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        medallion_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.source**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        source?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.abms**
        * - `text` in database
        * - Nullable, no default
        */
        abms?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.board_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        board_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.is_board_certification**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        is_board_certification?: boolean | db.Parameter<boolean> | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.specialty**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        specialty?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.certification_number**
        * - `text` in database
        * - Nullable, no default
        */
        certification_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.is_exam_passed**
        * - `bool` in database
        * - Nullable, no default
        */
        is_exam_passed?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.issue_date**
        * - `date` in database
        * - Nullable, no default
        */
        issue_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.is_indefinite**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        is_indefinite?: boolean | db.Parameter<boolean> | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.expiration_date**
        * - `date` in database
        * - Nullable, no default
        */
        expiration_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.recertification_date**
        * - `date` in database
        * - Nullable, no default
        */
        recertification_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.exam_date**
        * - `date` in database
        * - Nullable, no default
        */
        exam_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.moc_status**
        * - `bool` in database
        * - Nullable, no default
        */
        moc_status?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.is_meeting_moc**
        * - `bool` in database
        * - Nullable, no default
        */
        is_meeting_moc?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.moc_verification_date**
        * - `date` in database
        * - Nullable, no default
        */
        moc_verification_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.moc_annual_reverification_date**
        * - `date` in database
        * - Nullable, no default
        */
        moc_annual_reverification_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.requires_verification**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        requires_verification?: boolean | db.Parameter<boolean> | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_board_certificate.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'provider_board_certificate_medallion_id_key' | 'provider_board_certificate_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.provider_license**
     * - Table in database
     */
    export namespace provider_license {
      export type Table = 'telenutrition.provider_license';
      export interface Selectable {
        /**
        * **telenutrition.provider_license.license_id**
        * - `int4` in database
        * - Generated column
        */
        license_id: number;
        /**
        * **telenutrition.provider_license.source**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        source: string;
        /**
        * **telenutrition.provider_license.medallion_id**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_id: string | null;
        /**
        * **telenutrition.provider_license.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.provider_license.status**
        * - `text` in database
        * - Nullable, no default
        */
        status: string | null;
        /**
        * **telenutrition.provider_license.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string;
        /**
        * **telenutrition.provider_license.issue_date**
        * - `date` in database
        * - Nullable, no default
        */
        issue_date: Date | null;
        /**
        * **telenutrition.provider_license.expiration_date**
        * - `date` in database
        * - Nullable, no default
        */
        expiration_date: Date | null;
        /**
        * **telenutrition.provider_license.license_number**
        * - `text` in database
        * - Nullable, no default
        */
        license_number: string | null;
        /**
        * **telenutrition.provider_license.certificate_type**
        * - `text` in database
        * - Nullable, no default
        */
        certificate_type: string | null;
        /**
        * **telenutrition.provider_license.candid_provider_credentialing_span_id**
        * - `text` in database
        * - Nullable, no default
        */
        candid_provider_credentialing_span_id: string | null;
        /**
        * **telenutrition.provider_license.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.provider_license.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by: string;
        /**
        * **telenutrition.provider_license.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
        /**
        * **telenutrition.provider_license.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by: string | null;
        /**
        * **telenutrition.provider_license.verification_status**
        * - `text` in database
        * - Nullable, no default
        */
        verification_status: string | null;
        /**
        * **telenutrition.provider_license.cached_verified_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        cached_verified_at: Date | null;
        /**
        * **telenutrition.provider_license.cached_verified_expiration_date**
        * - `date` in database
        * - Nullable, no default
        */
        cached_verified_expiration_date: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.provider_license.license_id**
        * - `int4` in database
        * - Generated column
        */
        license_id: number;
        /**
        * **telenutrition.provider_license.source**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        source: string;
        /**
        * **telenutrition.provider_license.medallion_id**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_id: string | null;
        /**
        * **telenutrition.provider_license.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.provider_license.status**
        * - `text` in database
        * - Nullable, no default
        */
        status: string | null;
        /**
        * **telenutrition.provider_license.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string;
        /**
        * **telenutrition.provider_license.issue_date**
        * - `date` in database
        * - Nullable, no default
        */
        issue_date: db.DateString | null;
        /**
        * **telenutrition.provider_license.expiration_date**
        * - `date` in database
        * - Nullable, no default
        */
        expiration_date: db.DateString | null;
        /**
        * **telenutrition.provider_license.license_number**
        * - `text` in database
        * - Nullable, no default
        */
        license_number: string | null;
        /**
        * **telenutrition.provider_license.certificate_type**
        * - `text` in database
        * - Nullable, no default
        */
        certificate_type: string | null;
        /**
        * **telenutrition.provider_license.candid_provider_credentialing_span_id**
        * - `text` in database
        * - Nullable, no default
        */
        candid_provider_credentialing_span_id: string | null;
        /**
        * **telenutrition.provider_license.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.provider_license.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by: string;
        /**
        * **telenutrition.provider_license.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
        /**
        * **telenutrition.provider_license.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by: string | null;
        /**
        * **telenutrition.provider_license.verification_status**
        * - `text` in database
        * - Nullable, no default
        */
        verification_status: string | null;
        /**
        * **telenutrition.provider_license.cached_verified_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        cached_verified_at: db.TimestampString | null;
        /**
        * **telenutrition.provider_license.cached_verified_expiration_date**
        * - `date` in database
        * - Nullable, no default
        */
        cached_verified_expiration_date: db.DateString | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.provider_license.license_id**
        * - `int4` in database
        * - Generated column
        */
        license_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.source**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        source?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.medallion_id**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.status**
        * - `text` in database
        * - Nullable, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.issue_date**
        * - `date` in database
        * - Nullable, no default
        */
        issue_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.expiration_date**
        * - `date` in database
        * - Nullable, no default
        */
        expiration_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.license_number**
        * - `text` in database
        * - Nullable, no default
        */
        license_number?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.certificate_type**
        * - `text` in database
        * - Nullable, no default
        */
        certificate_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.candid_provider_credentialing_span_id**
        * - `text` in database
        * - Nullable, no default
        */
        candid_provider_credentialing_span_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.verification_status**
        * - `text` in database
        * - Nullable, no default
        */
        verification_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.cached_verified_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        cached_verified_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license.cached_verified_expiration_date**
        * - `date` in database
        * - Nullable, no default
        */
        cached_verified_expiration_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.provider_license.source**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        source: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_license.medallion_id**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license.status**
        * - `text` in database
        * - Nullable, no default
        */
        status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_license.issue_date**
        * - `date` in database
        * - Nullable, no default
        */
        issue_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license.expiration_date**
        * - `date` in database
        * - Nullable, no default
        */
        expiration_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license.license_number**
        * - `text` in database
        * - Nullable, no default
        */
        license_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license.certificate_type**
        * - `text` in database
        * - Nullable, no default
        */
        certificate_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license.candid_provider_credentialing_span_id**
        * - `text` in database
        * - Nullable, no default
        */
        candid_provider_credentialing_span_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_license.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license.verification_status**
        * - `text` in database
        * - Nullable, no default
        */
        verification_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license.cached_verified_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        cached_verified_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license.cached_verified_expiration_date**
        * - `date` in database
        * - Nullable, no default
        */
        cached_verified_expiration_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.provider_license.source**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        source?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_license.medallion_id**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license.status**
        * - `text` in database
        * - Nullable, no default
        */
        status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_license.issue_date**
        * - `date` in database
        * - Nullable, no default
        */
        issue_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license.expiration_date**
        * - `date` in database
        * - Nullable, no default
        */
        expiration_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license.license_number**
        * - `text` in database
        * - Nullable, no default
        */
        license_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license.certificate_type**
        * - `text` in database
        * - Nullable, no default
        */
        certificate_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license.candid_provider_credentialing_span_id**
        * - `text` in database
        * - Nullable, no default
        */
        candid_provider_credentialing_span_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_license.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license.verification_status**
        * - `text` in database
        * - Nullable, no default
        */
        verification_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license.cached_verified_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        cached_verified_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license.cached_verified_expiration_date**
        * - `date` in database
        * - Nullable, no default
        */
        cached_verified_expiration_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'provider_license_medallion_id_key' | 'provider_license_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.provider_license_application**
     * - Table in database
     */
    export namespace provider_license_application {
      export type Table = 'telenutrition.provider_license_application';
      export interface Selectable {
        /**
        * **telenutrition.provider_license_application.license_application_id**
        * - `int4` in database
        * - Generated column
        */
        license_application_id: number;
        /**
        * **telenutrition.provider_license_application.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
        /**
        * **telenutrition.provider_license_application.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string;
        /**
        * **telenutrition.provider_license_application.tracking_number**
        * - `text` in database
        * - Nullable, no default
        */
        tracking_number: string | null;
        /**
        * **telenutrition.provider_license_application.tracking_meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        tracking_meta: db.JSONValue | null;
        /**
        * **telenutrition.provider_license_application.status**
        * - `text` in database
        * - Nullable, no default
        */
        status: string | null;
        /**
        * **telenutrition.provider_license_application.submitted_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        submitted_date: Date;
        /**
        * **telenutrition.provider_license_application.attested_by**
        * - `text` in database
        * - Nullable, no default
        */
        attested_by: string | null;
        /**
        * **telenutrition.provider_license_application.attested_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        attested_at: Date | null;
        /**
        * **telenutrition.provider_license_application.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.provider_license_application.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by: string;
        /**
        * **telenutrition.provider_license_application.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at: Date;
        /**
        * **telenutrition.provider_license_application.updated_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        updated_by: string;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.provider_license_application.license_application_id**
        * - `int4` in database
        * - Generated column
        */
        license_application_id: number;
        /**
        * **telenutrition.provider_license_application.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
        /**
        * **telenutrition.provider_license_application.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string;
        /**
        * **telenutrition.provider_license_application.tracking_number**
        * - `text` in database
        * - Nullable, no default
        */
        tracking_number: string | null;
        /**
        * **telenutrition.provider_license_application.tracking_meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        tracking_meta: db.JSONValue | null;
        /**
        * **telenutrition.provider_license_application.status**
        * - `text` in database
        * - Nullable, no default
        */
        status: string | null;
        /**
        * **telenutrition.provider_license_application.submitted_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        submitted_date: db.DateString;
        /**
        * **telenutrition.provider_license_application.attested_by**
        * - `text` in database
        * - Nullable, no default
        */
        attested_by: string | null;
        /**
        * **telenutrition.provider_license_application.attested_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        attested_at: db.TimestampString | null;
        /**
        * **telenutrition.provider_license_application.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.provider_license_application.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by: string;
        /**
        * **telenutrition.provider_license_application.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at: db.TimestampString;
        /**
        * **telenutrition.provider_license_application.updated_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        updated_by: string;
      }
      export interface Whereable {
        /**
        * **telenutrition.provider_license_application.license_application_id**
        * - `int4` in database
        * - Generated column
        */
        license_application_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license_application.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license_application.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license_application.tracking_number**
        * - `text` in database
        * - Nullable, no default
        */
        tracking_number?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license_application.tracking_meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        tracking_meta?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license_application.status**
        * - `text` in database
        * - Nullable, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license_application.submitted_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        submitted_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license_application.attested_by**
        * - `text` in database
        * - Nullable, no default
        */
        attested_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license_application.attested_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        attested_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license_application.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license_application.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license_application.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license_application.updated_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        updated_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.provider_license_application.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.provider_license_application.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_license_application.tracking_number**
        * - `text` in database
        * - Nullable, no default
        */
        tracking_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license_application.tracking_meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        tracking_meta?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license_application.status**
        * - `text` in database
        * - Nullable, no default
        */
        status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license_application.submitted_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        submitted_date: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.provider_license_application.attested_by**
        * - `text` in database
        * - Nullable, no default
        */
        attested_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license_application.attested_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        attested_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license_application.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_license_application.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_license_application.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.provider_license_application.updated_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        updated_by: string | db.Parameter<string> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.provider_license_application.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.provider_license_application.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_license_application.tracking_number**
        * - `text` in database
        * - Nullable, no default
        */
        tracking_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license_application.tracking_meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        tracking_meta?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license_application.status**
        * - `text` in database
        * - Nullable, no default
        */
        status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license_application.submitted_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        submitted_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.provider_license_application.attested_by**
        * - `text` in database
        * - Nullable, no default
        */
        attested_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license_application.attested_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        attested_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license_application.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_license_application.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_license_application.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.provider_license_application.updated_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        updated_by?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      }
      export type UniqueIndex = 'provider_license_application_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.provider_license_summary**
     * - View in database
     */
    export namespace provider_license_summary {
      export type Table = 'telenutrition.provider_license_summary';
      export interface Selectable {
        /**
        * **telenutrition.provider_license_summary.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.provider_license_summary.state**
        * - `bpchar` in database
        * - Nullable, no default
        */
        state: string | null;
        /**
        * **telenutrition.provider_license_summary.valid_licenses**
        * - `_int4` in database
        * - Nullable, no default
        */
        valid_licenses: number[] | null;
        /**
        * **telenutrition.provider_license_summary.valid_applications**
        * - `_int4` in database
        * - Nullable, no default
        */
        valid_applications: number[] | null;
        /**
        * **telenutrition.provider_license_summary.license_type**
        * - `text` in database
        * - Nullable, no default
        */
        license_type: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.provider_license_summary.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.provider_license_summary.state**
        * - `bpchar` in database
        * - Nullable, no default
        */
        state: string | null;
        /**
        * **telenutrition.provider_license_summary.valid_licenses**
        * - `_int4` in database
        * - Nullable, no default
        */
        valid_licenses: number[] | null;
        /**
        * **telenutrition.provider_license_summary.valid_applications**
        * - `_int4` in database
        * - Nullable, no default
        */
        valid_applications: number[] | null;
        /**
        * **telenutrition.provider_license_summary.license_type**
        * - `text` in database
        * - Nullable, no default
        */
        license_type: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.provider_license_summary.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license_summary.state**
        * - `bpchar` in database
        * - Nullable, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license_summary.valid_licenses**
        * - `_int4` in database
        * - Nullable, no default
        */
        valid_licenses?: number[] | db.Parameter<number[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number[] | db.Parameter<number[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license_summary.valid_applications**
        * - `_int4` in database
        * - Nullable, no default
        */
        valid_applications?: number[] | db.Parameter<number[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number[] | db.Parameter<number[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_license_summary.license_type**
        * - `text` in database
        * - Nullable, no default
        */
        license_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        [key: string]: never;
      }
      export interface Updatable {
        [key: string]: never;
      }
      export type UniqueIndex = never;
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.provider_program_enrollment**
     * - Table in database
     */
    export namespace provider_program_enrollment {
      export type Table = 'telenutrition.provider_program_enrollment';
      export interface Selectable {
        /**
        * **telenutrition.provider_program_enrollment.program_enrollment_id**
        * - `int4` in database
        * - Generated column
        */
        program_enrollment_id: number;
        /**
        * **telenutrition.provider_program_enrollment.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
        /**
        * **telenutrition.provider_program_enrollment.program**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        program: string;
        /**
        * **telenutrition.provider_program_enrollment.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status: string;
        /**
        * **telenutrition.provider_program_enrollment.enrollment_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        enrollment_type: string;
        /**
        * **telenutrition.provider_program_enrollment.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string;
        /**
        * **telenutrition.provider_program_enrollment.tracking_number**
        * - `text` in database
        * - Nullable, no default
        */
        tracking_number: string | null;
        /**
        * **telenutrition.provider_program_enrollment.rd_attestation**
        * - `bool` in database
        * - Nullable, no default
        */
        rd_attestation: boolean | null;
        /**
        * **telenutrition.provider_program_enrollment.submitted_verification_date**
        * - `date` in database
        * - Nullable, no default
        */
        submitted_verification_date: Date | null;
        /**
        * **telenutrition.provider_program_enrollment.submission_verification_method**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verification_method: string | null;
        /**
        * **telenutrition.provider_program_enrollment.submission_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verified_by: string | null;
        /**
        * **telenutrition.provider_program_enrollment.program_id**
        * - `text` in database
        * - Nullable, no default
        */
        program_id: string | null;
        /**
        * **telenutrition.provider_program_enrollment.program_id_effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        program_id_effective_date: Date | null;
        /**
        * **telenutrition.provider_program_enrollment.program_id_revalidation_date**
        * - `date` in database
        * - Nullable, no default
        */
        program_id_revalidation_date: Date | null;
        /**
        * **telenutrition.provider_program_enrollment.approval_verified_date**
        * - `date` in database
        * - Nullable, no default
        */
        approval_verified_date: Date | null;
        /**
        * **telenutrition.provider_program_enrollment.approval_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verified_by: string | null;
        /**
        * **telenutrition.provider_program_enrollment.approval_verification_method**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verification_method: string | null;
        /**
        * **telenutrition.provider_program_enrollment.notes**
        * - `text` in database
        * - Nullable, no default
        */
        notes: string | null;
        /**
        * **telenutrition.provider_program_enrollment.doc_file_url**
        * - `text` in database
        * - Nullable, no default
        */
        doc_file_url: string | null;
        /**
        * **telenutrition.provider_program_enrollment.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.provider_program_enrollment.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by: string;
        /**
        * **telenutrition.provider_program_enrollment.updated_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
        /**
        * **telenutrition.provider_program_enrollment.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by: string | null;
        /**
        * **telenutrition.provider_program_enrollment.input_format**
        * - `text` in database
        * - `NOT NULL`, default: `'retool'::text`
        */
        input_format: string;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.provider_program_enrollment.program_enrollment_id**
        * - `int4` in database
        * - Generated column
        */
        program_enrollment_id: number;
        /**
        * **telenutrition.provider_program_enrollment.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
        /**
        * **telenutrition.provider_program_enrollment.program**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        program: string;
        /**
        * **telenutrition.provider_program_enrollment.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status: string;
        /**
        * **telenutrition.provider_program_enrollment.enrollment_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        enrollment_type: string;
        /**
        * **telenutrition.provider_program_enrollment.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string;
        /**
        * **telenutrition.provider_program_enrollment.tracking_number**
        * - `text` in database
        * - Nullable, no default
        */
        tracking_number: string | null;
        /**
        * **telenutrition.provider_program_enrollment.rd_attestation**
        * - `bool` in database
        * - Nullable, no default
        */
        rd_attestation: boolean | null;
        /**
        * **telenutrition.provider_program_enrollment.submitted_verification_date**
        * - `date` in database
        * - Nullable, no default
        */
        submitted_verification_date: db.DateString | null;
        /**
        * **telenutrition.provider_program_enrollment.submission_verification_method**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verification_method: string | null;
        /**
        * **telenutrition.provider_program_enrollment.submission_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verified_by: string | null;
        /**
        * **telenutrition.provider_program_enrollment.program_id**
        * - `text` in database
        * - Nullable, no default
        */
        program_id: string | null;
        /**
        * **telenutrition.provider_program_enrollment.program_id_effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        program_id_effective_date: db.DateString | null;
        /**
        * **telenutrition.provider_program_enrollment.program_id_revalidation_date**
        * - `date` in database
        * - Nullable, no default
        */
        program_id_revalidation_date: db.DateString | null;
        /**
        * **telenutrition.provider_program_enrollment.approval_verified_date**
        * - `date` in database
        * - Nullable, no default
        */
        approval_verified_date: db.DateString | null;
        /**
        * **telenutrition.provider_program_enrollment.approval_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verified_by: string | null;
        /**
        * **telenutrition.provider_program_enrollment.approval_verification_method**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verification_method: string | null;
        /**
        * **telenutrition.provider_program_enrollment.notes**
        * - `text` in database
        * - Nullable, no default
        */
        notes: string | null;
        /**
        * **telenutrition.provider_program_enrollment.doc_file_url**
        * - `text` in database
        * - Nullable, no default
        */
        doc_file_url: string | null;
        /**
        * **telenutrition.provider_program_enrollment.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampTzString;
        /**
        * **telenutrition.provider_program_enrollment.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by: string;
        /**
        * **telenutrition.provider_program_enrollment.updated_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampTzString | null;
        /**
        * **telenutrition.provider_program_enrollment.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by: string | null;
        /**
        * **telenutrition.provider_program_enrollment.input_format**
        * - `text` in database
        * - `NOT NULL`, default: `'retool'::text`
        */
        input_format: string;
      }
      export interface Whereable {
        /**
        * **telenutrition.provider_program_enrollment.program_enrollment_id**
        * - `int4` in database
        * - Generated column
        */
        program_enrollment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.program**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        program?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.enrollment_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        enrollment_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.tracking_number**
        * - `text` in database
        * - Nullable, no default
        */
        tracking_number?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.rd_attestation**
        * - `bool` in database
        * - Nullable, no default
        */
        rd_attestation?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.submitted_verification_date**
        * - `date` in database
        * - Nullable, no default
        */
        submitted_verification_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.submission_verification_method**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verification_method?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.submission_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verified_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.program_id**
        * - `text` in database
        * - Nullable, no default
        */
        program_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.program_id_effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        program_id_effective_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.program_id_revalidation_date**
        * - `date` in database
        * - Nullable, no default
        */
        program_id_revalidation_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.approval_verified_date**
        * - `date` in database
        * - Nullable, no default
        */
        approval_verified_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.approval_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verified_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.approval_verification_method**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verification_method?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.notes**
        * - `text` in database
        * - Nullable, no default
        */
        notes?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.doc_file_url**
        * - `text` in database
        * - Nullable, no default
        */
        doc_file_url?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.updated_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_program_enrollment.input_format**
        * - `text` in database
        * - `NOT NULL`, default: `'retool'::text`
        */
        input_format?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.provider_program_enrollment.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.program**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        program: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.enrollment_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        enrollment_type: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.tracking_number**
        * - `text` in database
        * - Nullable, no default
        */
        tracking_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.rd_attestation**
        * - `bool` in database
        * - Nullable, no default
        */
        rd_attestation?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.submitted_verification_date**
        * - `date` in database
        * - Nullable, no default
        */
        submitted_verification_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.submission_verification_method**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verification_method?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.submission_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verified_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.program_id**
        * - `text` in database
        * - Nullable, no default
        */
        program_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.program_id_effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        program_id_effective_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.program_id_revalidation_date**
        * - `date` in database
        * - Nullable, no default
        */
        program_id_revalidation_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.approval_verified_date**
        * - `date` in database
        * - Nullable, no default
        */
        approval_verified_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.approval_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verified_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.approval_verification_method**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verification_method?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.notes**
        * - `text` in database
        * - Nullable, no default
        */
        notes?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.doc_file_url**
        * - `text` in database
        * - Nullable, no default
        */
        doc_file_url?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.updated_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_program_enrollment.input_format**
        * - `text` in database
        * - `NOT NULL`, default: `'retool'::text`
        */
        input_format?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.provider_program_enrollment.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.program**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        program?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.enrollment_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        enrollment_type?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.tracking_number**
        * - `text` in database
        * - Nullable, no default
        */
        tracking_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.rd_attestation**
        * - `bool` in database
        * - Nullable, no default
        */
        rd_attestation?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.submitted_verification_date**
        * - `date` in database
        * - Nullable, no default
        */
        submitted_verification_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.submission_verification_method**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verification_method?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.submission_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        submission_verified_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.program_id**
        * - `text` in database
        * - Nullable, no default
        */
        program_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.program_id_effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        program_id_effective_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.program_id_revalidation_date**
        * - `date` in database
        * - Nullable, no default
        */
        program_id_revalidation_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.approval_verified_date**
        * - `date` in database
        * - Nullable, no default
        */
        approval_verified_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.approval_verified_by**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verified_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.approval_verification_method**
        * - `text` in database
        * - Nullable, no default
        */
        approval_verification_method?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.notes**
        * - `text` in database
        * - Nullable, no default
        */
        notes?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.doc_file_url**
        * - `text` in database
        * - Nullable, no default
        */
        doc_file_url?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.created_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        created_by?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.updated_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_program_enrollment.input_format**
        * - `text` in database
        * - `NOT NULL`, default: `'retool'::text`
        */
        input_format?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'provider_program_enrollment_pkey' | 'unique_provider_id_program_state';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.provider_task**
     * - Table in database
     */
    export namespace provider_task {
      export type Table = 'telenutrition.provider_task';
      export interface Selectable {
        /**
        * **telenutrition.provider_task.task_id**
        * - `int4` in database
        * - Generated column
        */
        task_id: number;
        /**
        * **telenutrition.provider_task.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
        /**
        * **telenutrition.provider_task.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name: string;
        /**
        * **telenutrition.provider_task.note**
        * - `text` in database
        * - Nullable, no default
        */
        note: string | null;
        /**
        * **telenutrition.provider_task.due_date**
        * - `date` in database
        * - Nullable, no default
        */
        due_date: Date | null;
        /**
        * **telenutrition.provider_task.priority**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        priority: string;
        /**
        * **telenutrition.provider_task.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status: string;
        /**
        * **telenutrition.provider_task.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.provider_task.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.provider_task.task_id**
        * - `int4` in database
        * - Generated column
        */
        task_id: number;
        /**
        * **telenutrition.provider_task.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
        /**
        * **telenutrition.provider_task.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name: string;
        /**
        * **telenutrition.provider_task.note**
        * - `text` in database
        * - Nullable, no default
        */
        note: string | null;
        /**
        * **telenutrition.provider_task.due_date**
        * - `date` in database
        * - Nullable, no default
        */
        due_date: db.DateString | null;
        /**
        * **telenutrition.provider_task.priority**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        priority: string;
        /**
        * **telenutrition.provider_task.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status: string;
        /**
        * **telenutrition.provider_task.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.provider_task.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **telenutrition.provider_task.task_id**
        * - `int4` in database
        * - Generated column
        */
        task_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_task.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_task.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_task.note**
        * - `text` in database
        * - Nullable, no default
        */
        note?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_task.due_date**
        * - `date` in database
        * - Nullable, no default
        */
        due_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_task.priority**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        priority?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_task.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_task.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.provider_task.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.provider_task.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.provider_task.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_task.note**
        * - `text` in database
        * - Nullable, no default
        */
        note?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_task.due_date**
        * - `date` in database
        * - Nullable, no default
        */
        due_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_task.priority**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        priority: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_task.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.provider_task.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.provider_task.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.provider_task.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.provider_task.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_task.note**
        * - `text` in database
        * - Nullable, no default
        */
        note?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_task.due_date**
        * - `date` in database
        * - Nullable, no default
        */
        due_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_task.priority**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        priority?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_task.status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.provider_task.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.provider_task.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'provider_task_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.reward**
     * - Table in database
     */
    export namespace reward {
      export type Table = 'telenutrition.reward';
      export interface Selectable {
        /**
        * **telenutrition.reward.reward_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.reward_reward_id_seq'::regclass)`
        */
        reward_id: number;
        /**
        * **telenutrition.reward.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string;
        /**
        * **telenutrition.reward.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
        /**
        * **telenutrition.reward.correctable**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        correctable: boolean;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.reward.reward_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.reward_reward_id_seq'::regclass)`
        */
        reward_id: number;
        /**
        * **telenutrition.reward.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string;
        /**
        * **telenutrition.reward.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
        /**
        * **telenutrition.reward.correctable**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        correctable: boolean;
      }
      export interface Whereable {
        /**
        * **telenutrition.reward.reward_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.reward_reward_id_seq'::regclass)`
        */
        reward_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.reward.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.reward.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.reward.correctable**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        correctable?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.reward.reward_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.reward_reward_id_seq'::regclass)`
        */
        reward_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.reward.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.reward.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.reward.correctable**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        correctable?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.reward.reward_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.reward_reward_id_seq'::regclass)`
        */
        reward_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.reward.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.reward.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.reward.correctable**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        correctable?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'reward_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.reward_user**
     * - Table in database
     */
    export namespace reward_user {
      export type Table = 'telenutrition.reward_user';
      export interface Selectable {
        /**
        * **telenutrition.reward_user.reward_user_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.reward_user_reward_user_id_seq'::regclass)`
        */
        reward_user_id: number;
        /**
        * **telenutrition.reward_user.reward_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        reward_id: number;
        /**
        * **telenutrition.reward_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id: number;
        /**
        * **telenutrition.reward_user.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta: db.JSONValue | null;
        /**
        * **telenutrition.reward_user.rewarded_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        rewarded_at: Date;
        /**
        * **telenutrition.reward_user.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.reward_user.reward_user_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.reward_user_reward_user_id_seq'::regclass)`
        */
        reward_user_id: number;
        /**
        * **telenutrition.reward_user.reward_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        reward_id: number;
        /**
        * **telenutrition.reward_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id: number;
        /**
        * **telenutrition.reward_user.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta: db.JSONValue | null;
        /**
        * **telenutrition.reward_user.rewarded_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        rewarded_at: db.TimestampString;
        /**
        * **telenutrition.reward_user.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **telenutrition.reward_user.reward_user_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.reward_user_reward_user_id_seq'::regclass)`
        */
        reward_user_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.reward_user.reward_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        reward_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.reward_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.reward_user.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.reward_user.rewarded_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        rewarded_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.reward_user.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.reward_user.reward_user_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.reward_user_reward_user_id_seq'::regclass)`
        */
        reward_user_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.reward_user.reward_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        reward_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.reward_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.reward_user.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.reward_user.rewarded_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        rewarded_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.reward_user.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.reward_user.reward_user_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.reward_user_reward_user_id_seq'::regclass)`
        */
        reward_user_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.reward_user.reward_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        reward_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.reward_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.reward_user.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.reward_user.rewarded_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        rewarded_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.reward_user.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'reward_user_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_appointment**
     * - Table in database
     */
    export namespace schedule_appointment {
      export type Table = 'telenutrition.schedule_appointment';
      export interface Selectable {
        /**
        * **telenutrition.schedule_appointment.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_appointment_appointment_id_seq'::regclass)`
        */
        appointment_id: number;
        /**
        * **telenutrition.schedule_appointment.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        appointment_type_id: number;
        /**
        * **telenutrition.schedule_appointment.date**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        date: string;
        /**
        * **telenutrition.schedule_appointment.duration**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        duration: number;
        /**
        * **telenutrition.schedule_appointment.start_time**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        start_time: string;
        /**
        * **telenutrition.schedule_appointment.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.schedule_appointment.department_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        department_id: number;
        /**
        * **telenutrition.schedule_appointment.frozen**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        frozen: boolean;
        /**
        * **telenutrition.schedule_appointment.start_timestamp**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        start_timestamp: Date;
        /**
        * **telenutrition.schedule_appointment.status**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        status: string;
        /**
        * **telenutrition.schedule_appointment.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
        /**
        * **telenutrition.schedule_appointment.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.schedule_appointment.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at: Date;
        /**
        * **telenutrition.schedule_appointment.payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payment_method_id: number | null;
        /**
        * **telenutrition.schedule_appointment.accepted_payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        accepted_payment_method_id: number | null;
        /**
        * **telenutrition.schedule_appointment.scheduled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        scheduled_at: Date | null;
        /**
        * **telenutrition.schedule_appointment.meeting**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meeting: db.JSONValue | null;
        /**
        * **telenutrition.schedule_appointment.scheduled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        scheduled_by: db.JSONValue | null;
        /**
        * **telenutrition.schedule_appointment.cancel_reason_id**
        * - `int4` in database
        * - Nullable, no default
        */
        cancel_reason_id: number | null;
        /**
        * **telenutrition.schedule_appointment.cancelled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        cancelled_at: Date | null;
        /**
        * **telenutrition.schedule_appointment.cancelled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        cancelled_by: db.JSONValue | null;
        /**
        * **telenutrition.schedule_appointment.coordinator_ruid**
        * - `int4` in database
        * - Nullable, no default
        */
        coordinator_ruid: number | null;
        /**
        * **telenutrition.schedule_appointment.waiting_id**
        * - `uuid` in database
        * - Nullable, no default
        */
        waiting_id: string | null;
        /**
        * **telenutrition.schedule_appointment.meeting_id**
        * - `text` in database
        * - Generated column
        */
        meeting_id: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_appointment.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_appointment_appointment_id_seq'::regclass)`
        */
        appointment_id: number;
        /**
        * **telenutrition.schedule_appointment.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        appointment_type_id: number;
        /**
        * **telenutrition.schedule_appointment.date**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        date: string;
        /**
        * **telenutrition.schedule_appointment.duration**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        duration: number;
        /**
        * **telenutrition.schedule_appointment.start_time**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        start_time: string;
        /**
        * **telenutrition.schedule_appointment.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.schedule_appointment.department_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        department_id: number;
        /**
        * **telenutrition.schedule_appointment.frozen**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        frozen: boolean;
        /**
        * **telenutrition.schedule_appointment.start_timestamp**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        start_timestamp: db.TimestampTzString;
        /**
        * **telenutrition.schedule_appointment.status**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        status: string;
        /**
        * **telenutrition.schedule_appointment.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
        /**
        * **telenutrition.schedule_appointment.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampTzString;
        /**
        * **telenutrition.schedule_appointment.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at: db.TimestampTzString;
        /**
        * **telenutrition.schedule_appointment.payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payment_method_id: number | null;
        /**
        * **telenutrition.schedule_appointment.accepted_payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        accepted_payment_method_id: number | null;
        /**
        * **telenutrition.schedule_appointment.scheduled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        scheduled_at: db.TimestampString | null;
        /**
        * **telenutrition.schedule_appointment.meeting**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meeting: db.JSONValue | null;
        /**
        * **telenutrition.schedule_appointment.scheduled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        scheduled_by: db.JSONValue | null;
        /**
        * **telenutrition.schedule_appointment.cancel_reason_id**
        * - `int4` in database
        * - Nullable, no default
        */
        cancel_reason_id: number | null;
        /**
        * **telenutrition.schedule_appointment.cancelled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        cancelled_at: db.TimestampString | null;
        /**
        * **telenutrition.schedule_appointment.cancelled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        cancelled_by: db.JSONValue | null;
        /**
        * **telenutrition.schedule_appointment.coordinator_ruid**
        * - `int4` in database
        * - Nullable, no default
        */
        coordinator_ruid: number | null;
        /**
        * **telenutrition.schedule_appointment.waiting_id**
        * - `uuid` in database
        * - Nullable, no default
        */
        waiting_id: string | null;
        /**
        * **telenutrition.schedule_appointment.meeting_id**
        * - `text` in database
        * - Generated column
        */
        meeting_id: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_appointment.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_appointment_appointment_id_seq'::regclass)`
        */
        appointment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        appointment_type_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.date**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        date?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.duration**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        duration?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.start_time**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        start_time?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.department_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        department_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.frozen**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        frozen?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.start_timestamp**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        start_timestamp?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.status**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payment_method_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.accepted_payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        accepted_payment_method_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.scheduled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        scheduled_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.meeting**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meeting?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.scheduled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        scheduled_by?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.cancel_reason_id**
        * - `int4` in database
        * - Nullable, no default
        */
        cancel_reason_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.cancelled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        cancelled_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.cancelled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        cancelled_by?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.coordinator_ruid**
        * - `int4` in database
        * - Nullable, no default
        */
        coordinator_ruid?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.waiting_id**
        * - `uuid` in database
        * - Nullable, no default
        */
        waiting_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment.meeting_id**
        * - `text` in database
        * - Generated column
        */
        meeting_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_appointment.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_appointment_appointment_id_seq'::regclass)`
        */
        appointment_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        appointment_type_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.date**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        date: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.duration**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        duration: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.start_time**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        start_time: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.department_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        department_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.frozen**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        frozen: boolean | db.Parameter<boolean> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.start_timestamp**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        start_timestamp: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.status**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        status: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payment_method_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.accepted_payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        accepted_payment_method_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.scheduled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        scheduled_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.meeting**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meeting?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.scheduled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        scheduled_by?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.cancel_reason_id**
        * - `int4` in database
        * - Nullable, no default
        */
        cancel_reason_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.cancelled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        cancelled_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.cancelled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        cancelled_by?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.coordinator_ruid**
        * - `int4` in database
        * - Nullable, no default
        */
        coordinator_ruid?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment.waiting_id**
        * - `uuid` in database
        * - Nullable, no default
        */
        waiting_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_appointment.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_appointment_appointment_id_seq'::regclass)`
        */
        appointment_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        appointment_type_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.date**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        date?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.duration**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        duration?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.start_time**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        start_time?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.department_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        department_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.frozen**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        frozen?: boolean | db.Parameter<boolean> | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.start_timestamp**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        start_timestamp?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.status**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payment_method_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.accepted_payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        accepted_payment_method_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.scheduled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        scheduled_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.meeting**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meeting?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.scheduled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        scheduled_by?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.cancel_reason_id**
        * - `int4` in database
        * - Nullable, no default
        */
        cancel_reason_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.cancelled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        cancelled_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.cancelled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        cancelled_by?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.coordinator_ruid**
        * - `int4` in database
        * - Nullable, no default
        */
        coordinator_ruid?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment.waiting_id**
        * - `uuid` in database
        * - Nullable, no default
        */
        waiting_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_appointment_pkey' | 'schedule_appointment_waiting_id_key';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_appointment_history**
     * - Table in database
     */
    export namespace schedule_appointment_history {
      export type Table = 'telenutrition.schedule_appointment_history';
      export interface Selectable {
        /**
        * **telenutrition.schedule_appointment_history.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id: number;
        /**
        * **telenutrition.schedule_appointment_history.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        appointment_type_id: number;
        /**
        * **telenutrition.schedule_appointment_history.date**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        date: string;
        /**
        * **telenutrition.schedule_appointment_history.duration**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        duration: number;
        /**
        * **telenutrition.schedule_appointment_history.start_time**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        start_time: string;
        /**
        * **telenutrition.schedule_appointment_history.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.schedule_appointment_history.department_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        department_id: number;
        /**
        * **telenutrition.schedule_appointment_history.frozen**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        frozen: boolean;
        /**
        * **telenutrition.schedule_appointment_history.start_timestamp**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        start_timestamp: Date;
        /**
        * **telenutrition.schedule_appointment_history.status**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        status: string;
        /**
        * **telenutrition.schedule_appointment_history.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
        /**
        * **telenutrition.schedule_appointment_history.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        created_at: Date;
        /**
        * **telenutrition.schedule_appointment_history.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        updated_at: Date;
        /**
        * **telenutrition.schedule_appointment_history.payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payment_method_id: number | null;
        /**
        * **telenutrition.schedule_appointment_history.accepted_payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        accepted_payment_method_id: number | null;
        /**
        * **telenutrition.schedule_appointment_history.scheduled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        scheduled_at: Date | null;
        /**
        * **telenutrition.schedule_appointment_history.meeting**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meeting: db.JSONValue | null;
        /**
        * **telenutrition.schedule_appointment_history.scheduled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        scheduled_by: db.JSONValue | null;
        /**
        * **telenutrition.schedule_appointment_history.cancel_reason_id**
        * - `int4` in database
        * - Nullable, no default
        */
        cancel_reason_id: number | null;
        /**
        * **telenutrition.schedule_appointment_history.cancelled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        cancelled_at: Date | null;
        /**
        * **telenutrition.schedule_appointment_history.cancelled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        cancelled_by: db.JSONValue | null;
        /**
        * **telenutrition.schedule_appointment_history.coordinator_ruid**
        * - `int4` in database
        * - Nullable, no default
        */
        coordinator_ruid: number | null;
        /**
        * **telenutrition.schedule_appointment_history.waiting_id**
        * - `uuid` in database
        * - Nullable, no default
        */
        waiting_id: string | null;
        /**
        * **telenutrition.schedule_appointment_history.meeting_id**
        * - `text` in database
        * - Nullable, no default
        */
        meeting_id: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_appointment_history.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id: number;
        /**
        * **telenutrition.schedule_appointment_history.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        appointment_type_id: number;
        /**
        * **telenutrition.schedule_appointment_history.date**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        date: string;
        /**
        * **telenutrition.schedule_appointment_history.duration**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        duration: number;
        /**
        * **telenutrition.schedule_appointment_history.start_time**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        start_time: string;
        /**
        * **telenutrition.schedule_appointment_history.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.schedule_appointment_history.department_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        department_id: number;
        /**
        * **telenutrition.schedule_appointment_history.frozen**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        frozen: boolean;
        /**
        * **telenutrition.schedule_appointment_history.start_timestamp**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        start_timestamp: db.TimestampTzString;
        /**
        * **telenutrition.schedule_appointment_history.status**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        status: string;
        /**
        * **telenutrition.schedule_appointment_history.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
        /**
        * **telenutrition.schedule_appointment_history.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        created_at: db.TimestampTzString;
        /**
        * **telenutrition.schedule_appointment_history.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        updated_at: db.TimestampTzString;
        /**
        * **telenutrition.schedule_appointment_history.payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payment_method_id: number | null;
        /**
        * **telenutrition.schedule_appointment_history.accepted_payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        accepted_payment_method_id: number | null;
        /**
        * **telenutrition.schedule_appointment_history.scheduled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        scheduled_at: db.TimestampString | null;
        /**
        * **telenutrition.schedule_appointment_history.meeting**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meeting: db.JSONValue | null;
        /**
        * **telenutrition.schedule_appointment_history.scheduled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        scheduled_by: db.JSONValue | null;
        /**
        * **telenutrition.schedule_appointment_history.cancel_reason_id**
        * - `int4` in database
        * - Nullable, no default
        */
        cancel_reason_id: number | null;
        /**
        * **telenutrition.schedule_appointment_history.cancelled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        cancelled_at: db.TimestampString | null;
        /**
        * **telenutrition.schedule_appointment_history.cancelled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        cancelled_by: db.JSONValue | null;
        /**
        * **telenutrition.schedule_appointment_history.coordinator_ruid**
        * - `int4` in database
        * - Nullable, no default
        */
        coordinator_ruid: number | null;
        /**
        * **telenutrition.schedule_appointment_history.waiting_id**
        * - `uuid` in database
        * - Nullable, no default
        */
        waiting_id: string | null;
        /**
        * **telenutrition.schedule_appointment_history.meeting_id**
        * - `text` in database
        * - Nullable, no default
        */
        meeting_id: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_appointment_history.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        appointment_type_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.date**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        date?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.duration**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        duration?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.start_time**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        start_time?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.department_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        department_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.frozen**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        frozen?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.start_timestamp**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        start_timestamp?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.status**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payment_method_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.accepted_payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        accepted_payment_method_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.scheduled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        scheduled_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.meeting**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meeting?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.scheduled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        scheduled_by?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.cancel_reason_id**
        * - `int4` in database
        * - Nullable, no default
        */
        cancel_reason_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.cancelled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        cancelled_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.cancelled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        cancelled_by?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.coordinator_ruid**
        * - `int4` in database
        * - Nullable, no default
        */
        coordinator_ruid?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.waiting_id**
        * - `uuid` in database
        * - Nullable, no default
        */
        waiting_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_history.meeting_id**
        * - `text` in database
        * - Nullable, no default
        */
        meeting_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_appointment_history.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        appointment_type_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.date**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        date: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.duration**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        duration: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.start_time**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        start_time: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.department_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        department_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.frozen**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        frozen: boolean | db.Parameter<boolean> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.start_timestamp**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        start_timestamp: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.status**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        status: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        created_at: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        updated_at: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payment_method_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.accepted_payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        accepted_payment_method_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.scheduled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        scheduled_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.meeting**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meeting?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.scheduled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        scheduled_by?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.cancel_reason_id**
        * - `int4` in database
        * - Nullable, no default
        */
        cancel_reason_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.cancelled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        cancelled_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.cancelled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        cancelled_by?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.coordinator_ruid**
        * - `int4` in database
        * - Nullable, no default
        */
        coordinator_ruid?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.waiting_id**
        * - `uuid` in database
        * - Nullable, no default
        */
        waiting_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_history.meeting_id**
        * - `text` in database
        * - Nullable, no default
        */
        meeting_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_appointment_history.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        appointment_type_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.date**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        date?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.duration**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        duration?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.start_time**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        start_time?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.department_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        department_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.frozen**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        frozen?: boolean | db.Parameter<boolean> | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.start_timestamp**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        start_timestamp?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.status**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, no default
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payment_method_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.accepted_payment_method_id**
        * - `int4` in database
        * - Nullable, no default
        */
        accepted_payment_method_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.scheduled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        scheduled_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.meeting**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meeting?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.scheduled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        scheduled_by?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.cancel_reason_id**
        * - `int4` in database
        * - Nullable, no default
        */
        cancel_reason_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.cancelled_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        cancelled_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.cancelled_by**
        * - `jsonb` in database
        * - Nullable, no default
        */
        cancelled_by?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.coordinator_ruid**
        * - `int4` in database
        * - Nullable, no default
        */
        coordinator_ruid?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.waiting_id**
        * - `uuid` in database
        * - Nullable, no default
        */
        waiting_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_history.meeting_id**
        * - `text` in database
        * - Nullable, no default
        */
        meeting_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = never;
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_appointment_type**
     * - Table in database
     */
    export namespace schedule_appointment_type {
      export type Table = 'telenutrition.schedule_appointment_type';
      export interface Selectable {
        /**
        * **telenutrition.schedule_appointment_type.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_appointment_type_appointment_type_id_seq'::regclass)`
        */
        appointment_type_id: number;
        /**
        * **telenutrition.schedule_appointment_type.name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        name: string;
        /**
        * **telenutrition.schedule_appointment_type.duration**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        duration: number;
        /**
        * **telenutrition.schedule_appointment_type.generic**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        generic: boolean;
        /**
        * **telenutrition.schedule_appointment_type.patient**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        patient: boolean;
        /**
        * **telenutrition.schedule_appointment_type.shortname**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        shortname: string;
        /**
        * **telenutrition.schedule_appointment_type.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible: boolean;
        /**
        * **telenutrition.schedule_appointment_type.is_audio_only**
        * - `bool` in database
        * - Nullable, default: `false`
        */
        is_audio_only: boolean | null;
        /**
        * **telenutrition.schedule_appointment_type.is_initial**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        is_initial: boolean;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_appointment_type.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_appointment_type_appointment_type_id_seq'::regclass)`
        */
        appointment_type_id: number;
        /**
        * **telenutrition.schedule_appointment_type.name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        name: string;
        /**
        * **telenutrition.schedule_appointment_type.duration**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        duration: number;
        /**
        * **telenutrition.schedule_appointment_type.generic**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        generic: boolean;
        /**
        * **telenutrition.schedule_appointment_type.patient**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        patient: boolean;
        /**
        * **telenutrition.schedule_appointment_type.shortname**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        shortname: string;
        /**
        * **telenutrition.schedule_appointment_type.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible: boolean;
        /**
        * **telenutrition.schedule_appointment_type.is_audio_only**
        * - `bool` in database
        * - Nullable, default: `false`
        */
        is_audio_only: boolean | null;
        /**
        * **telenutrition.schedule_appointment_type.is_initial**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        is_initial: boolean;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_appointment_type.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_appointment_type_appointment_type_id_seq'::regclass)`
        */
        appointment_type_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_type.name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_type.duration**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        duration?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_type.generic**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        generic?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_type.patient**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        patient?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_type.shortname**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        shortname?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_type.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_type.is_audio_only**
        * - `bool` in database
        * - Nullable, default: `false`
        */
        is_audio_only?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_type.is_initial**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        is_initial?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_appointment_type.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_appointment_type_appointment_type_id_seq'::regclass)`
        */
        appointment_type_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_type.name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_type.duration**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        duration: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_type.generic**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        generic: boolean | db.Parameter<boolean> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_type.patient**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        patient: boolean | db.Parameter<boolean> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_type.shortname**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        shortname: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_type.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_type.is_audio_only**
        * - `bool` in database
        * - Nullable, default: `false`
        */
        is_audio_only?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_type.is_initial**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        is_initial?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_appointment_type.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_appointment_type_appointment_type_id_seq'::regclass)`
        */
        appointment_type_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_type.name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_type.duration**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        duration?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_type.generic**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        generic?: boolean | db.Parameter<boolean> | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_type.patient**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        patient?: boolean | db.Parameter<boolean> | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_type.shortname**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        shortname?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_type.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_type.is_audio_only**
        * - `bool` in database
        * - Nullable, default: `false`
        */
        is_audio_only?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_type.is_initial**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        is_initial?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_appointment_type_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_appointment_type_mapping**
     * - Table in database
     */
    export namespace schedule_appointment_type_mapping {
      export type Table = 'telenutrition.schedule_appointment_type_mapping';
      export interface Selectable {
        /**
        * **telenutrition.schedule_appointment_type_mapping.appointment_type_mapping_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_appointment_type_mappi_appointment_type_mapping_id_seq'::regclass)`
        */
        appointment_type_mapping_id: number;
        /**
        * **telenutrition.schedule_appointment_type_mapping.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        appointment_type_id: number;
        /**
        * **telenutrition.schedule_appointment_type_mapping.slot_appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        slot_appointment_type_id: number;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_appointment_type_mapping.appointment_type_mapping_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_appointment_type_mappi_appointment_type_mapping_id_seq'::regclass)`
        */
        appointment_type_mapping_id: number;
        /**
        * **telenutrition.schedule_appointment_type_mapping.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        appointment_type_id: number;
        /**
        * **telenutrition.schedule_appointment_type_mapping.slot_appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        slot_appointment_type_id: number;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_appointment_type_mapping.appointment_type_mapping_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_appointment_type_mappi_appointment_type_mapping_id_seq'::regclass)`
        */
        appointment_type_mapping_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_type_mapping.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        appointment_type_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_appointment_type_mapping.slot_appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        slot_appointment_type_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_appointment_type_mapping.appointment_type_mapping_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_appointment_type_mappi_appointment_type_mapping_id_seq'::regclass)`
        */
        appointment_type_mapping_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_type_mapping.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        appointment_type_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_appointment_type_mapping.slot_appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        slot_appointment_type_id: number | db.Parameter<number> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_appointment_type_mapping.appointment_type_mapping_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_appointment_type_mappi_appointment_type_mapping_id_seq'::regclass)`
        */
        appointment_type_mapping_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_type_mapping.appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        appointment_type_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_appointment_type_mapping.slot_appointment_type_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        slot_appointment_type_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_appointment_type_mapping_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_consent**
     * - Table in database
     */
    export namespace schedule_consent {
      export type Table = 'telenutrition.schedule_consent';
      export interface Selectable {
        /**
        * **telenutrition.schedule_consent.consent_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_consent_consent_id_seq'::regclass)`
        */
        consent_id: number;
        /**
        * **telenutrition.schedule_consent.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number;
        /**
        * **telenutrition.schedule_consent.consent_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        consent_type: string;
        /**
        * **telenutrition.schedule_consent.version**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        version: string;
        /**
        * **telenutrition.schedule_consent.source**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        source: number;
        /**
        * **telenutrition.schedule_consent.consented_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        consented_at: Date;
        /**
        * **telenutrition.schedule_consent.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_consent.consent_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_consent_consent_id_seq'::regclass)`
        */
        consent_id: number;
        /**
        * **telenutrition.schedule_consent.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number;
        /**
        * **telenutrition.schedule_consent.consent_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        consent_type: string;
        /**
        * **telenutrition.schedule_consent.version**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        version: string;
        /**
        * **telenutrition.schedule_consent.source**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        source: number;
        /**
        * **telenutrition.schedule_consent.consented_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        consented_at: db.TimestampString;
        /**
        * **telenutrition.schedule_consent.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_consent.consent_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_consent_consent_id_seq'::regclass)`
        */
        consent_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_consent.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_consent.consent_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        consent_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_consent.version**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        version?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_consent.source**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        source?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_consent.consented_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        consented_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_consent.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_consent.consent_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_consent_consent_id_seq'::regclass)`
        */
        consent_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_consent.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_consent.consent_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        consent_type: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_consent.version**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        version: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_consent.source**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        source: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_consent.consented_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        consented_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.schedule_consent.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_consent.consent_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_consent_consent_id_seq'::regclass)`
        */
        consent_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_consent.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_consent.consent_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        consent_type?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_consent.version**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        version?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_consent.source**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        source?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_consent.consented_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        consented_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_consent.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_consent_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_department**
     * - Table in database
     */
    export namespace schedule_department {
      export type Table = 'telenutrition.schedule_department';
      export interface Selectable {
        /**
        * **telenutrition.schedule_department.department_id**
        * - `int2` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_department_department_id_seq'::regclass)`
        */
        department_id: number;
        /**
        * **telenutrition.schedule_department.name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        name: string;
        /**
        * **telenutrition.schedule_department.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string;
        /**
        * **telenutrition.schedule_department.timezone**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        timezone: string;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_department.department_id**
        * - `int2` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_department_department_id_seq'::regclass)`
        */
        department_id: number;
        /**
        * **telenutrition.schedule_department.name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        name: string;
        /**
        * **telenutrition.schedule_department.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string;
        /**
        * **telenutrition.schedule_department.timezone**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        timezone: string;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_department.department_id**
        * - `int2` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_department_department_id_seq'::regclass)`
        */
        department_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_department.name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_department.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_department.timezone**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        timezone?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_department.department_id**
        * - `int2` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_department_department_id_seq'::regclass)`
        */
        department_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_department.name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_department.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_department.timezone**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        timezone: string | db.Parameter<string> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_department.department_id**
        * - `int2` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_department_department_id_seq'::regclass)`
        */
        department_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_department.name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_department.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_department.timezone**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        timezone?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_department_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_department_provider**
     * - Table in database
     */
    export namespace schedule_department_provider {
      export type Table = 'telenutrition.schedule_department_provider';
      export interface Selectable {
        /**
        * **telenutrition.schedule_department_provider.department_provider_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_department_provider_department_provider_id_seq'::regclass)`
        */
        department_provider_id: number;
        /**
        * **telenutrition.schedule_department_provider.department_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        department_id: number;
        /**
        * **telenutrition.schedule_department_provider.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_department_provider.department_provider_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_department_provider_department_provider_id_seq'::regclass)`
        */
        department_provider_id: number;
        /**
        * **telenutrition.schedule_department_provider.department_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        department_id: number;
        /**
        * **telenutrition.schedule_department_provider.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_department_provider.department_provider_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_department_provider_department_provider_id_seq'::regclass)`
        */
        department_provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_department_provider.department_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        department_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_department_provider.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_department_provider.department_provider_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_department_provider_department_provider_id_seq'::regclass)`
        */
        department_provider_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_department_provider.department_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        department_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_department_provider.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number | db.Parameter<number> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_department_provider.department_provider_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_department_provider_department_provider_id_seq'::regclass)`
        */
        department_provider_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_department_provider.department_id**
        * - `int2` in database
        * - `NOT NULL`, no default
        */
        department_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_department_provider.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_department_provider_pkey' | 'unique_idx_schedule_department_provider';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_department_provider_licensed**
     * - View in database
     */
    export namespace schedule_department_provider_licensed {
      export type Table = 'telenutrition.schedule_department_provider_licensed';
      export interface Selectable {
        /**
        * **telenutrition.schedule_department_provider_licensed.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.schedule_department_provider_licensed.department_id**
        * - `int2` in database
        * - Nullable, no default
        */
        department_id: number | null;
        /**
        * **telenutrition.schedule_department_provider_licensed.is_schedulable**
        * - `bool` in database
        * - Nullable, no default
        */
        is_schedulable: boolean | null;
        /**
        * **telenutrition.schedule_department_provider_licensed.schedulable_type**
        * - `text` in database
        * - Nullable, no default
        */
        schedulable_type: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_department_provider_licensed.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.schedule_department_provider_licensed.department_id**
        * - `int2` in database
        * - Nullable, no default
        */
        department_id: number | null;
        /**
        * **telenutrition.schedule_department_provider_licensed.is_schedulable**
        * - `bool` in database
        * - Nullable, no default
        */
        is_schedulable: boolean | null;
        /**
        * **telenutrition.schedule_department_provider_licensed.schedulable_type**
        * - `text` in database
        * - Nullable, no default
        */
        schedulable_type: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_department_provider_licensed.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_department_provider_licensed.department_id**
        * - `int2` in database
        * - Nullable, no default
        */
        department_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_department_provider_licensed.is_schedulable**
        * - `bool` in database
        * - Nullable, no default
        */
        is_schedulable?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_department_provider_licensed.schedulable_type**
        * - `text` in database
        * - Nullable, no default
        */
        schedulable_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        [key: string]: never;
      }
      export interface Updatable {
        [key: string]: never;
      }
      export type UniqueIndex = never;
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_employer**
     * - Table in database
     */
    export namespace schedule_employer {
      export type Table = 'telenutrition.schedule_employer';
      export interface Selectable {
        /**
        * **telenutrition.schedule_employer.employer_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_employer_id_seq'::regclass)`
        */
        employer_id: number;
        /**
        * **telenutrition.schedule_employer.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.schedule_employer.special_program**
        * - `text` in database
        * - Nullable, no default
        */
        special_program: string | null;
        /**
        * **telenutrition.schedule_employer.insurance_package_id**
        * - `int4` in database
        * - Nullable, no default
        */
        insurance_package_id: number | null;
        /**
        * **telenutrition.schedule_employer.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible: boolean;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_employer.employer_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_employer_id_seq'::regclass)`
        */
        employer_id: number;
        /**
        * **telenutrition.schedule_employer.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.schedule_employer.special_program**
        * - `text` in database
        * - Nullable, no default
        */
        special_program: string | null;
        /**
        * **telenutrition.schedule_employer.insurance_package_id**
        * - `int4` in database
        * - Nullable, no default
        */
        insurance_package_id: number | null;
        /**
        * **telenutrition.schedule_employer.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible: boolean;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_employer.employer_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_employer_id_seq'::regclass)`
        */
        employer_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_employer.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_employer.special_program**
        * - `text` in database
        * - Nullable, no default
        */
        special_program?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_employer.insurance_package_id**
        * - `int4` in database
        * - Nullable, no default
        */
        insurance_package_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_employer.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_employer.employer_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_employer_id_seq'::regclass)`
        */
        employer_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_employer.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_employer.special_program**
        * - `text` in database
        * - Nullable, no default
        */
        special_program?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_employer.insurance_package_id**
        * - `int4` in database
        * - Nullable, no default
        */
        insurance_package_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_employer.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_employer.employer_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_employer_id_seq'::regclass)`
        */
        employer_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_employer.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_employer.special_program**
        * - `text` in database
        * - Nullable, no default
        */
        special_program?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_employer.insurance_package_id**
        * - `int4` in database
        * - Nullable, no default
        */
        insurance_package_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_employer.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_employer_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_flow**
     * - Table in database
     */
    export namespace schedule_flow {
      export type Table = 'telenutrition.schedule_flow';
      export interface Selectable {
        /**
        * **telenutrition.schedule_flow.flow_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_flow_flow_id_seq'::regclass)`
        */
        flow_id: number;
        /**
        * **telenutrition.schedule_flow.user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        user_id: number | null;
        /**
        * **telenutrition.schedule_flow.state**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        state: db.JSONValue;
        /**
        * **telenutrition.schedule_flow.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
        /**
        * **telenutrition.schedule_flow.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id: number | null;
        /**
        * **telenutrition.schedule_flow.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.schedule_flow.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at: Date;
        /**
        * **telenutrition.schedule_flow.scheduled_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        scheduled_at: Date | null;
        /**
        * **telenutrition.schedule_flow.insurance**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        insurance: db.JSONValue;
        /**
        * **telenutrition.schedule_flow.timezone**
        * - `varchar` in database
        * - Nullable, no default
        */
        timezone: string | null;
        /**
        * **telenutrition.schedule_flow.federation_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        federation_id: string | null;
        /**
        * **telenutrition.schedule_flow.flow_type**
        * - `varchar` in database
        * - `NOT NULL`, default: `'scheduling_v1'::character varying`
        */
        flow_type: string;
        /**
        * **telenutrition.schedule_flow.current_step**
        * - `varchar` in database
        * - Nullable, no default
        */
        current_step: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_flow.flow_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_flow_flow_id_seq'::regclass)`
        */
        flow_id: number;
        /**
        * **telenutrition.schedule_flow.user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        user_id: number | null;
        /**
        * **telenutrition.schedule_flow.state**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        state: db.JSONValue;
        /**
        * **telenutrition.schedule_flow.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
        /**
        * **telenutrition.schedule_flow.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id: number | null;
        /**
        * **telenutrition.schedule_flow.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampTzString;
        /**
        * **telenutrition.schedule_flow.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at: db.TimestampTzString;
        /**
        * **telenutrition.schedule_flow.scheduled_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        scheduled_at: db.TimestampTzString | null;
        /**
        * **telenutrition.schedule_flow.insurance**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        insurance: db.JSONValue;
        /**
        * **telenutrition.schedule_flow.timezone**
        * - `varchar` in database
        * - Nullable, no default
        */
        timezone: string | null;
        /**
        * **telenutrition.schedule_flow.federation_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        federation_id: string | null;
        /**
        * **telenutrition.schedule_flow.flow_type**
        * - `varchar` in database
        * - `NOT NULL`, default: `'scheduling_v1'::character varying`
        */
        flow_type: string;
        /**
        * **telenutrition.schedule_flow.current_step**
        * - `varchar` in database
        * - Nullable, no default
        */
        current_step: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_flow.flow_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_flow_flow_id_seq'::regclass)`
        */
        flow_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_flow.user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        user_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_flow.state**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        state?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_flow.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_flow.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_flow.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_flow.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_flow.scheduled_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        scheduled_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_flow.insurance**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        insurance?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_flow.timezone**
        * - `varchar` in database
        * - Nullable, no default
        */
        timezone?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_flow.federation_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        federation_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_flow.flow_type**
        * - `varchar` in database
        * - `NOT NULL`, default: `'scheduling_v1'::character varying`
        */
        flow_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_flow.current_step**
        * - `varchar` in database
        * - Nullable, no default
        */
        current_step?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_flow.flow_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_flow_flow_id_seq'::regclass)`
        */
        flow_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_flow.user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        user_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_flow.state**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        state: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment;
        /**
        * **telenutrition.schedule_flow.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_flow.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_flow.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_flow.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_flow.scheduled_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        scheduled_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_flow.insurance**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        insurance: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment;
        /**
        * **telenutrition.schedule_flow.timezone**
        * - `varchar` in database
        * - Nullable, no default
        */
        timezone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_flow.federation_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        federation_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_flow.flow_type**
        * - `varchar` in database
        * - `NOT NULL`, default: `'scheduling_v1'::character varying`
        */
        flow_type?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_flow.current_step**
        * - `varchar` in database
        * - Nullable, no default
        */
        current_step?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_flow.flow_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_flow_flow_id_seq'::regclass)`
        */
        flow_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_flow.user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        user_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_flow.state**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        state?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_flow.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_flow.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_flow.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_flow.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_flow.scheduled_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        scheduled_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_flow.insurance**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        insurance?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_flow.timezone**
        * - `varchar` in database
        * - Nullable, no default
        */
        timezone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_flow.federation_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        federation_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_flow.flow_type**
        * - `varchar` in database
        * - `NOT NULL`, default: `'scheduling_v1'::character varying`
        */
        flow_type?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_flow.current_step**
        * - `varchar` in database
        * - Nullable, no default
        */
        current_step?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_flow_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_insurance**
     * - Table in database
     */
    export namespace schedule_insurance {
      export type Table = 'telenutrition.schedule_insurance';
      export interface Selectable {
        /**
        * **telenutrition.schedule_insurance.insurance_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_insurance_id_seq'::regclass)`
        */
        insurance_id: number;
        /**
        * **telenutrition.schedule_insurance.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.schedule_insurance.package_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        package_id: number;
        /**
        * **telenutrition.schedule_insurance.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible: boolean;
        /**
        * **telenutrition.schedule_insurance.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id: number | null;
        /**
        * **telenutrition.schedule_insurance.primary_subscriber_strategy**
        * - `bpchar` in database
        * - Nullable, default: `NULL::bpchar`
        */
        primary_subscriber_strategy: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_insurance.insurance_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_insurance_id_seq'::regclass)`
        */
        insurance_id: number;
        /**
        * **telenutrition.schedule_insurance.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.schedule_insurance.package_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        package_id: number;
        /**
        * **telenutrition.schedule_insurance.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible: boolean;
        /**
        * **telenutrition.schedule_insurance.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id: number | null;
        /**
        * **telenutrition.schedule_insurance.primary_subscriber_strategy**
        * - `bpchar` in database
        * - Nullable, default: `NULL::bpchar`
        */
        primary_subscriber_strategy: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_insurance.insurance_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_insurance_id_seq'::regclass)`
        */
        insurance_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_insurance.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_insurance.package_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        package_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_insurance.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_insurance.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_insurance.primary_subscriber_strategy**
        * - `bpchar` in database
        * - Nullable, default: `NULL::bpchar`
        */
        primary_subscriber_strategy?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_insurance.insurance_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_insurance_id_seq'::regclass)`
        */
        insurance_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_insurance.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_insurance.package_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        package_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_insurance.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_insurance.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_insurance.primary_subscriber_strategy**
        * - `bpchar` in database
        * - Nullable, default: `NULL::bpchar`
        */
        primary_subscriber_strategy?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_insurance.insurance_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_insurance_id_seq'::regclass)`
        */
        insurance_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_insurance.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_insurance.package_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        package_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_insurance.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_insurance.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_insurance.primary_subscriber_strategy**
        * - `bpchar` in database
        * - Nullable, default: `NULL::bpchar`
        */
        primary_subscriber_strategy?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_insurance_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_patient**
     * - Table in database
     */
    export namespace schedule_patient {
      export type Table = 'telenutrition.schedule_patient';
      export interface Selectable {
        /**
        * **telenutrition.schedule_patient.patient_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_patient_id_seq'::regclass)`
        */
        patient_id: number;
        /**
        * **telenutrition.schedule_patient.department_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        department_id: number;
        /**
        * **telenutrition.schedule_patient.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id: number | null;
        /**
        * **telenutrition.schedule_patient.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string;
        /**
        * **telenutrition.schedule_patient.address**
        * - `varchar` in database
        * - Nullable, no default
        */
        address: string | null;
        /**
        * **telenutrition.schedule_patient.address2**
        * - `varchar` in database
        * - Nullable, no default
        */
        address2: string | null;
        /**
        * **telenutrition.schedule_patient.city**
        * - `varchar` in database
        * - Nullable, no default
        */
        city: string | null;
        /**
        * **telenutrition.schedule_patient.sex**
        * - `bpchar` in database
        * - Nullable, no default
        */
        sex: string | null;
        /**
        * **telenutrition.schedule_patient.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone: string | null;
        /**
        * **telenutrition.schedule_patient.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **telenutrition.schedule_patient.timezone**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        timezone: string;
        /**
        * **telenutrition.schedule_patient.first_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        first_name: string | null;
        /**
        * **telenutrition.schedule_patient.last_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_name: string | null;
        /**
        * **telenutrition.schedule_patient.birthday**
        * - `date` in database
        * - Nullable, no default
        */
        birthday: Date | null;
        /**
        * **telenutrition.schedule_patient.zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        zip_code: string | null;
        /**
        * **telenutrition.schedule_patient.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
        /**
        * **telenutrition.schedule_patient.preferred_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        preferred_name: string | null;
        /**
        * **telenutrition.schedule_patient.pronouns**
        * - `varchar` in database
        * - Nullable, no default
        */
        pronouns: string | null;
        /**
        * **telenutrition.schedule_patient.language**
        * - `bpchar` in database
        * - Nullable, no default
        */
        language: string | null;
        /**
        * **telenutrition.schedule_patient.religion**
        * - `varchar` in database
        * - Nullable, no default
        */
        religion: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_patient.patient_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_patient_id_seq'::regclass)`
        */
        patient_id: number;
        /**
        * **telenutrition.schedule_patient.department_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        department_id: number;
        /**
        * **telenutrition.schedule_patient.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id: number | null;
        /**
        * **telenutrition.schedule_patient.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string;
        /**
        * **telenutrition.schedule_patient.address**
        * - `varchar` in database
        * - Nullable, no default
        */
        address: string | null;
        /**
        * **telenutrition.schedule_patient.address2**
        * - `varchar` in database
        * - Nullable, no default
        */
        address2: string | null;
        /**
        * **telenutrition.schedule_patient.city**
        * - `varchar` in database
        * - Nullable, no default
        */
        city: string | null;
        /**
        * **telenutrition.schedule_patient.sex**
        * - `bpchar` in database
        * - Nullable, no default
        */
        sex: string | null;
        /**
        * **telenutrition.schedule_patient.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone: string | null;
        /**
        * **telenutrition.schedule_patient.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **telenutrition.schedule_patient.timezone**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        timezone: string;
        /**
        * **telenutrition.schedule_patient.first_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        first_name: string | null;
        /**
        * **telenutrition.schedule_patient.last_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_name: string | null;
        /**
        * **telenutrition.schedule_patient.birthday**
        * - `date` in database
        * - Nullable, no default
        */
        birthday: db.DateString | null;
        /**
        * **telenutrition.schedule_patient.zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        zip_code: string | null;
        /**
        * **telenutrition.schedule_patient.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
        /**
        * **telenutrition.schedule_patient.preferred_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        preferred_name: string | null;
        /**
        * **telenutrition.schedule_patient.pronouns**
        * - `varchar` in database
        * - Nullable, no default
        */
        pronouns: string | null;
        /**
        * **telenutrition.schedule_patient.language**
        * - `bpchar` in database
        * - Nullable, no default
        */
        language: string | null;
        /**
        * **telenutrition.schedule_patient.religion**
        * - `varchar` in database
        * - Nullable, no default
        */
        religion: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_patient.patient_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_patient_id_seq'::regclass)`
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.department_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        department_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.address**
        * - `varchar` in database
        * - Nullable, no default
        */
        address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.address2**
        * - `varchar` in database
        * - Nullable, no default
        */
        address2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.city**
        * - `varchar` in database
        * - Nullable, no default
        */
        city?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.sex**
        * - `bpchar` in database
        * - Nullable, no default
        */
        sex?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.timezone**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        timezone?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.first_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        first_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.last_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.birthday**
        * - `date` in database
        * - Nullable, no default
        */
        birthday?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        zip_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.preferred_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        preferred_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.pronouns**
        * - `varchar` in database
        * - Nullable, no default
        */
        pronouns?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.language**
        * - `bpchar` in database
        * - Nullable, no default
        */
        language?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient.religion**
        * - `varchar` in database
        * - Nullable, no default
        */
        religion?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_patient.patient_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_patient_id_seq'::regclass)`
        */
        patient_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.department_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        department_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.address**
        * - `varchar` in database
        * - Nullable, no default
        */
        address?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.address2**
        * - `varchar` in database
        * - Nullable, no default
        */
        address2?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.city**
        * - `varchar` in database
        * - Nullable, no default
        */
        city?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.sex**
        * - `bpchar` in database
        * - Nullable, no default
        */
        sex?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.timezone**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        timezone: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.first_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        first_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.last_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.birthday**
        * - `date` in database
        * - Nullable, no default
        */
        birthday?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        zip_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.preferred_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        preferred_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.pronouns**
        * - `varchar` in database
        * - Nullable, no default
        */
        pronouns?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.language**
        * - `bpchar` in database
        * - Nullable, no default
        */
        language?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient.religion**
        * - `varchar` in database
        * - Nullable, no default
        */
        religion?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_patient.patient_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_patient_id_seq'::regclass)`
        */
        patient_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.department_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        department_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.address**
        * - `varchar` in database
        * - Nullable, no default
        */
        address?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.address2**
        * - `varchar` in database
        * - Nullable, no default
        */
        address2?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.city**
        * - `varchar` in database
        * - Nullable, no default
        */
        city?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.sex**
        * - `bpchar` in database
        * - Nullable, no default
        */
        sex?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.timezone**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        timezone?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.first_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        first_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.last_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.birthday**
        * - `date` in database
        * - Nullable, no default
        */
        birthday?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.zip_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        zip_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.preferred_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        preferred_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.pronouns**
        * - `varchar` in database
        * - Nullable, no default
        */
        pronouns?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.language**
        * - `bpchar` in database
        * - Nullable, no default
        */
        language?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient.religion**
        * - `varchar` in database
        * - Nullable, no default
        */
        religion?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_patient_identity_id_key' | 'schedule_patient_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_patient_payment_method**
     * - Table in database
     */
    export namespace schedule_patient_payment_method {
      export type Table = 'telenutrition.schedule_patient_payment_method';
      export interface Selectable {
        /**
        * **telenutrition.schedule_patient_payment_method.payment_method_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_patient_payment_method_payment_method_id_seq'::regclass)`
        */
        payment_method_id: number;
        /**
        * **telenutrition.schedule_patient_payment_method.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number;
        /**
        * **telenutrition.schedule_patient_payment_method.type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        type: string;
        /**
        * **telenutrition.schedule_patient_payment_method.employer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employer_id: number | null;
        /**
        * **telenutrition.schedule_patient_payment_method.insurance_id**
        * - `int4` in database
        * - Nullable, no default
        */
        insurance_id: number | null;
        /**
        * **telenutrition.schedule_patient_payment_method.group_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        group_id: string | null;
        /**
        * **telenutrition.schedule_patient_payment_method.member_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        member_id: string | null;
        /**
        * **telenutrition.schedule_patient_payment_method.data**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        data: db.JSONValue;
        /**
        * **telenutrition.schedule_patient_payment_method.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible: boolean;
        /**
        * **telenutrition.schedule_patient_payment_method.eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        eligible_id: number | null;
        /**
        * **telenutrition.schedule_patient_payment_method.status**
        * - `text` in database
        * - `NOT NULL`, default: `'unchecked'::text`
        */
        status: string;
        /**
        * **telenutrition.schedule_patient_payment_method.last_eligibility_check_id**
        * - `int4` in database
        * - Nullable, no default
        */
        last_eligibility_check_id: number | null;
        /**
        * **telenutrition.schedule_patient_payment_method.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.schedule_patient_payment_method.payment_method_type_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payment_method_type_id: number | null;
        /**
        * **telenutrition.schedule_patient_payment_method.primary_subscriber_member_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        primary_subscriber_member_id: string | null;
        /**
        * **telenutrition.schedule_patient_payment_method.primary_subscriber_dob**
        * - `date` in database
        * - Nullable, no default
        */
        primary_subscriber_dob: Date | null;
        /**
        * **telenutrition.schedule_patient_payment_method.primary_subscriber_relationship**
        * - `bpchar` in database
        * - Nullable, default: `NULL::bpchar`
        */
        primary_subscriber_relationship: string | null;
        /**
        * **telenutrition.schedule_patient_payment_method.sponsor_id**
        * - `int4` in database
        * - Nullable, no default
        */
        sponsor_id: number | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_patient_payment_method.payment_method_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_patient_payment_method_payment_method_id_seq'::regclass)`
        */
        payment_method_id: number;
        /**
        * **telenutrition.schedule_patient_payment_method.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number;
        /**
        * **telenutrition.schedule_patient_payment_method.type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        type: string;
        /**
        * **telenutrition.schedule_patient_payment_method.employer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employer_id: number | null;
        /**
        * **telenutrition.schedule_patient_payment_method.insurance_id**
        * - `int4` in database
        * - Nullable, no default
        */
        insurance_id: number | null;
        /**
        * **telenutrition.schedule_patient_payment_method.group_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        group_id: string | null;
        /**
        * **telenutrition.schedule_patient_payment_method.member_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        member_id: string | null;
        /**
        * **telenutrition.schedule_patient_payment_method.data**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        data: db.JSONValue;
        /**
        * **telenutrition.schedule_patient_payment_method.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible: boolean;
        /**
        * **telenutrition.schedule_patient_payment_method.eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        eligible_id: number | null;
        /**
        * **telenutrition.schedule_patient_payment_method.status**
        * - `text` in database
        * - `NOT NULL`, default: `'unchecked'::text`
        */
        status: string;
        /**
        * **telenutrition.schedule_patient_payment_method.last_eligibility_check_id**
        * - `int4` in database
        * - Nullable, no default
        */
        last_eligibility_check_id: number | null;
        /**
        * **telenutrition.schedule_patient_payment_method.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.schedule_patient_payment_method.payment_method_type_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payment_method_type_id: number | null;
        /**
        * **telenutrition.schedule_patient_payment_method.primary_subscriber_member_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        primary_subscriber_member_id: string | null;
        /**
        * **telenutrition.schedule_patient_payment_method.primary_subscriber_dob**
        * - `date` in database
        * - Nullable, no default
        */
        primary_subscriber_dob: db.DateString | null;
        /**
        * **telenutrition.schedule_patient_payment_method.primary_subscriber_relationship**
        * - `bpchar` in database
        * - Nullable, default: `NULL::bpchar`
        */
        primary_subscriber_relationship: string | null;
        /**
        * **telenutrition.schedule_patient_payment_method.sponsor_id**
        * - `int4` in database
        * - Nullable, no default
        */
        sponsor_id: number | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_patient_payment_method.payment_method_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_patient_payment_method_payment_method_id_seq'::regclass)`
        */
        payment_method_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.employer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employer_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.insurance_id**
        * - `int4` in database
        * - Nullable, no default
        */
        insurance_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.group_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        group_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.member_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        member_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.data**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        eligible_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.status**
        * - `text` in database
        * - `NOT NULL`, default: `'unchecked'::text`
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.last_eligibility_check_id**
        * - `int4` in database
        * - Nullable, no default
        */
        last_eligibility_check_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.payment_method_type_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payment_method_type_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.primary_subscriber_member_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        primary_subscriber_member_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.primary_subscriber_dob**
        * - `date` in database
        * - Nullable, no default
        */
        primary_subscriber_dob?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.primary_subscriber_relationship**
        * - `bpchar` in database
        * - Nullable, default: `NULL::bpchar`
        */
        primary_subscriber_relationship?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_payment_method.sponsor_id**
        * - `int4` in database
        * - Nullable, no default
        */
        sponsor_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_patient_payment_method.payment_method_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_patient_payment_method_payment_method_id_seq'::regclass)`
        */
        payment_method_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        type: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.employer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employer_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.insurance_id**
        * - `int4` in database
        * - Nullable, no default
        */
        insurance_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.group_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        group_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.member_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        member_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.data**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        data: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        eligible_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.status**
        * - `text` in database
        * - `NOT NULL`, default: `'unchecked'::text`
        */
        status?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.last_eligibility_check_id**
        * - `int4` in database
        * - Nullable, no default
        */
        last_eligibility_check_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.payment_method_type_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payment_method_type_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.primary_subscriber_member_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        primary_subscriber_member_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.primary_subscriber_dob**
        * - `date` in database
        * - Nullable, no default
        */
        primary_subscriber_dob?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.primary_subscriber_relationship**
        * - `bpchar` in database
        * - Nullable, default: `NULL::bpchar`
        */
        primary_subscriber_relationship?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_payment_method.sponsor_id**
        * - `int4` in database
        * - Nullable, no default
        */
        sponsor_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_patient_payment_method.payment_method_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_patient_payment_method_payment_method_id_seq'::regclass)`
        */
        payment_method_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        type?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.employer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employer_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.insurance_id**
        * - `int4` in database
        * - Nullable, no default
        */
        insurance_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.group_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        group_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.member_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        member_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.data**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.visible**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        visible?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        eligible_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.status**
        * - `text` in database
        * - `NOT NULL`, default: `'unchecked'::text`
        */
        status?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.last_eligibility_check_id**
        * - `int4` in database
        * - Nullable, no default
        */
        last_eligibility_check_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.payment_method_type_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payment_method_type_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.primary_subscriber_member_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        primary_subscriber_member_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.primary_subscriber_dob**
        * - `date` in database
        * - Nullable, no default
        */
        primary_subscriber_dob?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.primary_subscriber_relationship**
        * - `bpchar` in database
        * - Nullable, default: `NULL::bpchar`
        */
        primary_subscriber_relationship?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_payment_method.sponsor_id**
        * - `int4` in database
        * - Nullable, no default
        */
        sponsor_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_patient_payment_method_patient_id_data_key' | 'schedule_patient_payment_method_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_patient_survey**
     * - Table in database
     */
    export namespace schedule_patient_survey {
      export type Table = 'telenutrition.schedule_patient_survey';
      export interface Selectable {
        /**
        * **telenutrition.schedule_patient_survey.patient_survey_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_patient_survey_patient_survey_id_seq'::regclass)`
        */
        patient_survey_id: number;
        /**
        * **telenutrition.schedule_patient_survey.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number;
        /**
        * **telenutrition.schedule_patient_survey.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id: number;
        /**
        * **telenutrition.schedule_patient_survey.score**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        score: number;
        /**
        * **telenutrition.schedule_patient_survey.survey_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        survey_data: db.JSONValue | null;
        /**
        * **telenutrition.schedule_patient_survey.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_patient_survey.patient_survey_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_patient_survey_patient_survey_id_seq'::regclass)`
        */
        patient_survey_id: number;
        /**
        * **telenutrition.schedule_patient_survey.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number;
        /**
        * **telenutrition.schedule_patient_survey.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id: number;
        /**
        * **telenutrition.schedule_patient_survey.score**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        score: number;
        /**
        * **telenutrition.schedule_patient_survey.survey_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        survey_data: db.JSONValue | null;
        /**
        * **telenutrition.schedule_patient_survey.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_patient_survey.patient_survey_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_patient_survey_patient_survey_id_seq'::regclass)`
        */
        patient_survey_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_survey.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_survey.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_survey.score**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        score?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_survey.survey_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        survey_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_patient_survey.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_patient_survey.patient_survey_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_patient_survey_patient_survey_id_seq'::regclass)`
        */
        patient_survey_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_survey.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_survey.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_survey.score**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        score: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_survey.survey_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        survey_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_patient_survey.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_patient_survey.patient_survey_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_patient_survey_patient_survey_id_seq'::regclass)`
        */
        patient_survey_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_survey.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_survey.appointment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        appointment_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_survey.score**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        score?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_survey.survey_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        survey_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_patient_survey.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_patient_survey_appointment_id_key' | 'schedule_patient_survey_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_provider**
     * - Table in database
     */
    export namespace schedule_provider {
      export type Table = 'telenutrition.schedule_provider';
      export interface Selectable {
        /**
        * **telenutrition.schedule_provider.provider_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_provider_provider_id_seq'::regclass)`
        */
        provider_id: number;
        /**
        * **telenutrition.schedule_provider.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name: string;
        /**
        * **telenutrition.schedule_provider.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name: string;
        /**
        * **telenutrition.schedule_provider.okta_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        okta_id: string | null;
        /**
        * **telenutrition.schedule_provider.email**
        * - `text` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **telenutrition.schedule_provider.status**
        * - `int2` in database
        * - `NOT NULL`, default: `0`
        */
        status: number;
        /**
        * **telenutrition.schedule_provider.languages**
        * - `_varchar` in database
        * - Nullable, no default
        */
        languages: string[] | null;
        /**
        * **telenutrition.schedule_provider.pediatrics**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        pediatrics: boolean;
        /**
        * **telenutrition.schedule_provider.weekly_availability**
        * - `int2` in database
        * - Nullable, no default
        */
        weekly_availability: number | null;
        /**
        * **telenutrition.schedule_provider.certifications**
        * - `_int2` in database
        * - Nullable, no default
        */
        certifications: number[] | null;
        /**
        * **telenutrition.schedule_provider.home_email**
        * - `text` in database
        * - Nullable, no default
        */
        home_email: string | null;
        /**
        * **telenutrition.schedule_provider.home_phone**
        * - `text` in database
        * - Nullable, no default
        */
        home_phone: string | null;
        /**
        * **telenutrition.schedule_provider.home_zipcode**
        * - `text` in database
        * - Nullable, no default
        */
        home_zipcode: string | null;
        /**
        * **telenutrition.schedule_provider.timezone**
        * - `text` in database
        * - Nullable, no default
        */
        timezone: string | null;
        /**
        * **telenutrition.schedule_provider.capacity_provider_group**
        * - `text` in database
        * - Nullable, no default
        */
        capacity_provider_group: string | null;
        /**
        * **telenutrition.schedule_provider.npi**
        * - `int4` in database
        * - Nullable, no default
        */
        npi: number | null;
        /**
        * **telenutrition.schedule_provider.employment_status**
        * - `text` in database
        * - Nullable, no default
        */
        employment_status: string | null;
        /**
        * **telenutrition.schedule_provider.medallion_id**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_id: string | null;
        /**
        * **telenutrition.schedule_provider.credentialing_committee_status**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_committee_status: string | null;
        /**
        * **telenutrition.schedule_provider.initial_credentialing_date**
        * - `timestamp` in database
        * - Nullable, no default
        */
        initial_credentialing_date: Date | null;
        /**
        * **telenutrition.schedule_provider.latest_credentialing_date**
        * - `timestamp` in database
        * - Nullable, no default
        */
        latest_credentialing_date: Date | null;
        /**
        * **telenutrition.schedule_provider.caqh_number**
        * - `text` in database
        * - Nullable, no default
        */
        caqh_number: string | null;
        /**
        * **telenutrition.schedule_provider.credentialing_step**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_step: string | null;
        /**
        * **telenutrition.schedule_provider.zoom_phone**
        * - `text` in database
        * - Nullable, no default
        */
        zoom_phone: string | null;
        /**
        * **telenutrition.schedule_provider.zoom_pmi**
        * - `int8` in database
        * - Nullable, no default
        */
        zoom_pmi: db.Int8String | null;
        /**
        * **telenutrition.schedule_provider.employee_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employee_id: number | null;
        /**
        * **telenutrition.schedule_provider.display_name**
        * - `text` in database
        * - Nullable, no default
        */
        display_name: string | null;
        /**
        * **telenutrition.schedule_provider.experience**
        * - `text` in database
        * - Nullable, no default
        */
        experience: string | null;
        /**
        * **telenutrition.schedule_provider.education**
        * - `text` in database
        * - Nullable, no default
        */
        education: string | null;
        /**
        * **telenutrition.schedule_provider.background**
        * - `text` in database
        * - Nullable, no default
        */
        background: string | null;
        /**
        * **telenutrition.schedule_provider.care_philosophy**
        * - `text` in database
        * - Nullable, no default
        */
        care_philosophy: string | null;
        /**
        * **telenutrition.schedule_provider.hobbies**
        * - `text` in database
        * - Nullable, no default
        */
        hobbies: string | null;
        /**
        * **telenutrition.schedule_provider.favorite_foods**
        * - `text` in database
        * - Nullable, no default
        */
        favorite_foods: string | null;
        /**
        * **telenutrition.schedule_provider.professional_titles**
        * - `text` in database
        * - Nullable, no default
        */
        professional_titles: string | null;
        /**
        * **telenutrition.schedule_provider.specialties**
        * - `text` in database
        * - Nullable, no default
        */
        specialties: string | null;
        /**
        * **telenutrition.schedule_provider.specialty_categories**
        * - `_int4` in database
        * - Nullable, no default
        */
        specialty_categories: number[] | null;
        /**
        * **telenutrition.schedule_provider.medallion_percent_complete**
        * - `int4` in database
        * - Nullable, no default
        */
        medallion_percent_complete: number | null;
        /**
        * **telenutrition.schedule_provider.medallion_profile_completion_state**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_profile_completion_state: string | null;
        /**
        * **telenutrition.schedule_provider.medallion_percent_complete_last_checked**
        * - `timestamp` in database
        * - Nullable, no default
        */
        medallion_percent_complete_last_checked: Date | null;
        /**
        * **telenutrition.schedule_provider.verification_status**
        * - `text` in database
        * - Nullable, no default
        */
        verification_status: string | null;
        /**
        * **telenutrition.schedule_provider.verification_status_last_checked**
        * - `timestamp` in database
        * - Nullable, no default
        */
        verification_status_last_checked: Date | null;
        /**
        * **telenutrition.schedule_provider.zoom_uid**
        * - `text` in database
        * - Nullable, no default
        */
        zoom_uid: string | null;
        /**
        * **telenutrition.schedule_provider.rippling_user_id**
        * - `text` in database
        * - Nullable, no default
        */
        rippling_user_id: string | null;
        /**
        * **telenutrition.schedule_provider.min_patient_age**
        * - `int4` in database
        * - `NOT NULL`, default: `14`
        */
        min_patient_age: number;
        /**
        * **telenutrition.schedule_provider.specialty_ids**
        * - `_text` in database
        * - Nullable, no default
        */
        specialty_ids: string[] | null;
        /**
        * **telenutrition.schedule_provider.bio**
        * - `text` in database
        * - Nullable, no default
        */
        bio: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_provider.provider_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_provider_provider_id_seq'::regclass)`
        */
        provider_id: number;
        /**
        * **telenutrition.schedule_provider.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name: string;
        /**
        * **telenutrition.schedule_provider.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name: string;
        /**
        * **telenutrition.schedule_provider.okta_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        okta_id: string | null;
        /**
        * **telenutrition.schedule_provider.email**
        * - `text` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **telenutrition.schedule_provider.status**
        * - `int2` in database
        * - `NOT NULL`, default: `0`
        */
        status: number;
        /**
        * **telenutrition.schedule_provider.languages**
        * - `_varchar` in database
        * - Nullable, no default
        */
        languages: string[] | null;
        /**
        * **telenutrition.schedule_provider.pediatrics**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        pediatrics: boolean;
        /**
        * **telenutrition.schedule_provider.weekly_availability**
        * - `int2` in database
        * - Nullable, no default
        */
        weekly_availability: number | null;
        /**
        * **telenutrition.schedule_provider.certifications**
        * - `_int2` in database
        * - Nullable, no default
        */
        certifications: number[] | null;
        /**
        * **telenutrition.schedule_provider.home_email**
        * - `text` in database
        * - Nullable, no default
        */
        home_email: string | null;
        /**
        * **telenutrition.schedule_provider.home_phone**
        * - `text` in database
        * - Nullable, no default
        */
        home_phone: string | null;
        /**
        * **telenutrition.schedule_provider.home_zipcode**
        * - `text` in database
        * - Nullable, no default
        */
        home_zipcode: string | null;
        /**
        * **telenutrition.schedule_provider.timezone**
        * - `text` in database
        * - Nullable, no default
        */
        timezone: string | null;
        /**
        * **telenutrition.schedule_provider.capacity_provider_group**
        * - `text` in database
        * - Nullable, no default
        */
        capacity_provider_group: string | null;
        /**
        * **telenutrition.schedule_provider.npi**
        * - `int4` in database
        * - Nullable, no default
        */
        npi: number | null;
        /**
        * **telenutrition.schedule_provider.employment_status**
        * - `text` in database
        * - Nullable, no default
        */
        employment_status: string | null;
        /**
        * **telenutrition.schedule_provider.medallion_id**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_id: string | null;
        /**
        * **telenutrition.schedule_provider.credentialing_committee_status**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_committee_status: string | null;
        /**
        * **telenutrition.schedule_provider.initial_credentialing_date**
        * - `timestamp` in database
        * - Nullable, no default
        */
        initial_credentialing_date: db.TimestampString | null;
        /**
        * **telenutrition.schedule_provider.latest_credentialing_date**
        * - `timestamp` in database
        * - Nullable, no default
        */
        latest_credentialing_date: db.TimestampString | null;
        /**
        * **telenutrition.schedule_provider.caqh_number**
        * - `text` in database
        * - Nullable, no default
        */
        caqh_number: string | null;
        /**
        * **telenutrition.schedule_provider.credentialing_step**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_step: string | null;
        /**
        * **telenutrition.schedule_provider.zoom_phone**
        * - `text` in database
        * - Nullable, no default
        */
        zoom_phone: string | null;
        /**
        * **telenutrition.schedule_provider.zoom_pmi**
        * - `int8` in database
        * - Nullable, no default
        */
        zoom_pmi: number | null;
        /**
        * **telenutrition.schedule_provider.employee_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employee_id: number | null;
        /**
        * **telenutrition.schedule_provider.display_name**
        * - `text` in database
        * - Nullable, no default
        */
        display_name: string | null;
        /**
        * **telenutrition.schedule_provider.experience**
        * - `text` in database
        * - Nullable, no default
        */
        experience: string | null;
        /**
        * **telenutrition.schedule_provider.education**
        * - `text` in database
        * - Nullable, no default
        */
        education: string | null;
        /**
        * **telenutrition.schedule_provider.background**
        * - `text` in database
        * - Nullable, no default
        */
        background: string | null;
        /**
        * **telenutrition.schedule_provider.care_philosophy**
        * - `text` in database
        * - Nullable, no default
        */
        care_philosophy: string | null;
        /**
        * **telenutrition.schedule_provider.hobbies**
        * - `text` in database
        * - Nullable, no default
        */
        hobbies: string | null;
        /**
        * **telenutrition.schedule_provider.favorite_foods**
        * - `text` in database
        * - Nullable, no default
        */
        favorite_foods: string | null;
        /**
        * **telenutrition.schedule_provider.professional_titles**
        * - `text` in database
        * - Nullable, no default
        */
        professional_titles: string | null;
        /**
        * **telenutrition.schedule_provider.specialties**
        * - `text` in database
        * - Nullable, no default
        */
        specialties: string | null;
        /**
        * **telenutrition.schedule_provider.specialty_categories**
        * - `_int4` in database
        * - Nullable, no default
        */
        specialty_categories: number[] | null;
        /**
        * **telenutrition.schedule_provider.medallion_percent_complete**
        * - `int4` in database
        * - Nullable, no default
        */
        medallion_percent_complete: number | null;
        /**
        * **telenutrition.schedule_provider.medallion_profile_completion_state**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_profile_completion_state: string | null;
        /**
        * **telenutrition.schedule_provider.medallion_percent_complete_last_checked**
        * - `timestamp` in database
        * - Nullable, no default
        */
        medallion_percent_complete_last_checked: db.TimestampString | null;
        /**
        * **telenutrition.schedule_provider.verification_status**
        * - `text` in database
        * - Nullable, no default
        */
        verification_status: string | null;
        /**
        * **telenutrition.schedule_provider.verification_status_last_checked**
        * - `timestamp` in database
        * - Nullable, no default
        */
        verification_status_last_checked: db.TimestampString | null;
        /**
        * **telenutrition.schedule_provider.zoom_uid**
        * - `text` in database
        * - Nullable, no default
        */
        zoom_uid: string | null;
        /**
        * **telenutrition.schedule_provider.rippling_user_id**
        * - `text` in database
        * - Nullable, no default
        */
        rippling_user_id: string | null;
        /**
        * **telenutrition.schedule_provider.min_patient_age**
        * - `int4` in database
        * - `NOT NULL`, default: `14`
        */
        min_patient_age: number;
        /**
        * **telenutrition.schedule_provider.specialty_ids**
        * - `_text` in database
        * - Nullable, no default
        */
        specialty_ids: string[] | null;
        /**
        * **telenutrition.schedule_provider.bio**
        * - `text` in database
        * - Nullable, no default
        */
        bio: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_provider.provider_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_provider_provider_id_seq'::regclass)`
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.okta_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        okta_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.email**
        * - `text` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.status**
        * - `int2` in database
        * - `NOT NULL`, default: `0`
        */
        status?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.languages**
        * - `_varchar` in database
        * - Nullable, no default
        */
        languages?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.pediatrics**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        pediatrics?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.weekly_availability**
        * - `int2` in database
        * - Nullable, no default
        */
        weekly_availability?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.certifications**
        * - `_int2` in database
        * - Nullable, no default
        */
        certifications?: number[] | db.Parameter<number[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number[] | db.Parameter<number[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.home_email**
        * - `text` in database
        * - Nullable, no default
        */
        home_email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.home_phone**
        * - `text` in database
        * - Nullable, no default
        */
        home_phone?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.home_zipcode**
        * - `text` in database
        * - Nullable, no default
        */
        home_zipcode?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.timezone**
        * - `text` in database
        * - Nullable, no default
        */
        timezone?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.capacity_provider_group**
        * - `text` in database
        * - Nullable, no default
        */
        capacity_provider_group?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.npi**
        * - `int4` in database
        * - Nullable, no default
        */
        npi?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.employment_status**
        * - `text` in database
        * - Nullable, no default
        */
        employment_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.medallion_id**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.credentialing_committee_status**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_committee_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.initial_credentialing_date**
        * - `timestamp` in database
        * - Nullable, no default
        */
        initial_credentialing_date?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.latest_credentialing_date**
        * - `timestamp` in database
        * - Nullable, no default
        */
        latest_credentialing_date?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.caqh_number**
        * - `text` in database
        * - Nullable, no default
        */
        caqh_number?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.credentialing_step**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_step?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.zoom_phone**
        * - `text` in database
        * - Nullable, no default
        */
        zoom_phone?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.zoom_pmi**
        * - `int8` in database
        * - Nullable, no default
        */
        zoom_pmi?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.employee_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employee_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.display_name**
        * - `text` in database
        * - Nullable, no default
        */
        display_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.experience**
        * - `text` in database
        * - Nullable, no default
        */
        experience?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.education**
        * - `text` in database
        * - Nullable, no default
        */
        education?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.background**
        * - `text` in database
        * - Nullable, no default
        */
        background?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.care_philosophy**
        * - `text` in database
        * - Nullable, no default
        */
        care_philosophy?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.hobbies**
        * - `text` in database
        * - Nullable, no default
        */
        hobbies?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.favorite_foods**
        * - `text` in database
        * - Nullable, no default
        */
        favorite_foods?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.professional_titles**
        * - `text` in database
        * - Nullable, no default
        */
        professional_titles?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.specialties**
        * - `text` in database
        * - Nullable, no default
        */
        specialties?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.specialty_categories**
        * - `_int4` in database
        * - Nullable, no default
        */
        specialty_categories?: number[] | db.Parameter<number[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number[] | db.Parameter<number[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.medallion_percent_complete**
        * - `int4` in database
        * - Nullable, no default
        */
        medallion_percent_complete?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.medallion_profile_completion_state**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_profile_completion_state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.medallion_percent_complete_last_checked**
        * - `timestamp` in database
        * - Nullable, no default
        */
        medallion_percent_complete_last_checked?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.verification_status**
        * - `text` in database
        * - Nullable, no default
        */
        verification_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.verification_status_last_checked**
        * - `timestamp` in database
        * - Nullable, no default
        */
        verification_status_last_checked?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.zoom_uid**
        * - `text` in database
        * - Nullable, no default
        */
        zoom_uid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.rippling_user_id**
        * - `text` in database
        * - Nullable, no default
        */
        rippling_user_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.min_patient_age**
        * - `int4` in database
        * - `NOT NULL`, default: `14`
        */
        min_patient_age?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.specialty_ids**
        * - `_text` in database
        * - Nullable, no default
        */
        specialty_ids?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_provider.bio**
        * - `text` in database
        * - Nullable, no default
        */
        bio?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_provider.provider_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_provider_provider_id_seq'::regclass)`
        */
        provider_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.okta_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        okta_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.email**
        * - `text` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.status**
        * - `int2` in database
        * - `NOT NULL`, default: `0`
        */
        status?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.languages**
        * - `_varchar` in database
        * - Nullable, no default
        */
        languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.pediatrics**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        pediatrics?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.weekly_availability**
        * - `int2` in database
        * - Nullable, no default
        */
        weekly_availability?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.certifications**
        * - `_int2` in database
        * - Nullable, no default
        */
        certifications?: number[] | db.Parameter<number[]> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.home_email**
        * - `text` in database
        * - Nullable, no default
        */
        home_email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.home_phone**
        * - `text` in database
        * - Nullable, no default
        */
        home_phone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.home_zipcode**
        * - `text` in database
        * - Nullable, no default
        */
        home_zipcode?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.timezone**
        * - `text` in database
        * - Nullable, no default
        */
        timezone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.capacity_provider_group**
        * - `text` in database
        * - Nullable, no default
        */
        capacity_provider_group?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.npi**
        * - `int4` in database
        * - Nullable, no default
        */
        npi?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.employment_status**
        * - `text` in database
        * - Nullable, no default
        */
        employment_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.medallion_id**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.credentialing_committee_status**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_committee_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.initial_credentialing_date**
        * - `timestamp` in database
        * - Nullable, no default
        */
        initial_credentialing_date?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.latest_credentialing_date**
        * - `timestamp` in database
        * - Nullable, no default
        */
        latest_credentialing_date?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.caqh_number**
        * - `text` in database
        * - Nullable, no default
        */
        caqh_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.credentialing_step**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_step?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.zoom_phone**
        * - `text` in database
        * - Nullable, no default
        */
        zoom_phone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.zoom_pmi**
        * - `int8` in database
        * - Nullable, no default
        */
        zoom_pmi?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.employee_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employee_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.display_name**
        * - `text` in database
        * - Nullable, no default
        */
        display_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.experience**
        * - `text` in database
        * - Nullable, no default
        */
        experience?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.education**
        * - `text` in database
        * - Nullable, no default
        */
        education?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.background**
        * - `text` in database
        * - Nullable, no default
        */
        background?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.care_philosophy**
        * - `text` in database
        * - Nullable, no default
        */
        care_philosophy?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.hobbies**
        * - `text` in database
        * - Nullable, no default
        */
        hobbies?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.favorite_foods**
        * - `text` in database
        * - Nullable, no default
        */
        favorite_foods?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.professional_titles**
        * - `text` in database
        * - Nullable, no default
        */
        professional_titles?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.specialties**
        * - `text` in database
        * - Nullable, no default
        */
        specialties?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.specialty_categories**
        * - `_int4` in database
        * - Nullable, no default
        */
        specialty_categories?: number[] | db.Parameter<number[]> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.medallion_percent_complete**
        * - `int4` in database
        * - Nullable, no default
        */
        medallion_percent_complete?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.medallion_profile_completion_state**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_profile_completion_state?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.medallion_percent_complete_last_checked**
        * - `timestamp` in database
        * - Nullable, no default
        */
        medallion_percent_complete_last_checked?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.verification_status**
        * - `text` in database
        * - Nullable, no default
        */
        verification_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.verification_status_last_checked**
        * - `timestamp` in database
        * - Nullable, no default
        */
        verification_status_last_checked?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.zoom_uid**
        * - `text` in database
        * - Nullable, no default
        */
        zoom_uid?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.rippling_user_id**
        * - `text` in database
        * - Nullable, no default
        */
        rippling_user_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.min_patient_age**
        * - `int4` in database
        * - `NOT NULL`, default: `14`
        */
        min_patient_age?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.specialty_ids**
        * - `_text` in database
        * - Nullable, no default
        */
        specialty_ids?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_provider.bio**
        * - `text` in database
        * - Nullable, no default
        */
        bio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_provider.provider_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_provider_provider_id_seq'::regclass)`
        */
        provider_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.okta_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        okta_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.email**
        * - `text` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.status**
        * - `int2` in database
        * - `NOT NULL`, default: `0`
        */
        status?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.languages**
        * - `_varchar` in database
        * - Nullable, no default
        */
        languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.pediatrics**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        pediatrics?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.weekly_availability**
        * - `int2` in database
        * - Nullable, no default
        */
        weekly_availability?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.certifications**
        * - `_int2` in database
        * - Nullable, no default
        */
        certifications?: number[] | db.Parameter<number[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number[] | db.Parameter<number[]> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.home_email**
        * - `text` in database
        * - Nullable, no default
        */
        home_email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.home_phone**
        * - `text` in database
        * - Nullable, no default
        */
        home_phone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.home_zipcode**
        * - `text` in database
        * - Nullable, no default
        */
        home_zipcode?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.timezone**
        * - `text` in database
        * - Nullable, no default
        */
        timezone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.capacity_provider_group**
        * - `text` in database
        * - Nullable, no default
        */
        capacity_provider_group?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.npi**
        * - `int4` in database
        * - Nullable, no default
        */
        npi?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.employment_status**
        * - `text` in database
        * - Nullable, no default
        */
        employment_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.medallion_id**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.credentialing_committee_status**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_committee_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.initial_credentialing_date**
        * - `timestamp` in database
        * - Nullable, no default
        */
        initial_credentialing_date?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.latest_credentialing_date**
        * - `timestamp` in database
        * - Nullable, no default
        */
        latest_credentialing_date?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.caqh_number**
        * - `text` in database
        * - Nullable, no default
        */
        caqh_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.credentialing_step**
        * - `text` in database
        * - Nullable, no default
        */
        credentialing_step?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.zoom_phone**
        * - `text` in database
        * - Nullable, no default
        */
        zoom_phone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.zoom_pmi**
        * - `int8` in database
        * - Nullable, no default
        */
        zoom_pmi?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.employee_id**
        * - `int4` in database
        * - Nullable, no default
        */
        employee_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.display_name**
        * - `text` in database
        * - Nullable, no default
        */
        display_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.experience**
        * - `text` in database
        * - Nullable, no default
        */
        experience?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.education**
        * - `text` in database
        * - Nullable, no default
        */
        education?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.background**
        * - `text` in database
        * - Nullable, no default
        */
        background?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.care_philosophy**
        * - `text` in database
        * - Nullable, no default
        */
        care_philosophy?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.hobbies**
        * - `text` in database
        * - Nullable, no default
        */
        hobbies?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.favorite_foods**
        * - `text` in database
        * - Nullable, no default
        */
        favorite_foods?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.professional_titles**
        * - `text` in database
        * - Nullable, no default
        */
        professional_titles?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.specialties**
        * - `text` in database
        * - Nullable, no default
        */
        specialties?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.specialty_categories**
        * - `_int4` in database
        * - Nullable, no default
        */
        specialty_categories?: number[] | db.Parameter<number[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number[] | db.Parameter<number[]> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.medallion_percent_complete**
        * - `int4` in database
        * - Nullable, no default
        */
        medallion_percent_complete?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.medallion_profile_completion_state**
        * - `text` in database
        * - Nullable, no default
        */
        medallion_profile_completion_state?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.medallion_percent_complete_last_checked**
        * - `timestamp` in database
        * - Nullable, no default
        */
        medallion_percent_complete_last_checked?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.verification_status**
        * - `text` in database
        * - Nullable, no default
        */
        verification_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.verification_status_last_checked**
        * - `timestamp` in database
        * - Nullable, no default
        */
        verification_status_last_checked?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.zoom_uid**
        * - `text` in database
        * - Nullable, no default
        */
        zoom_uid?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.rippling_user_id**
        * - `text` in database
        * - Nullable, no default
        */
        rippling_user_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.min_patient_age**
        * - `int4` in database
        * - `NOT NULL`, default: `14`
        */
        min_patient_age?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.specialty_ids**
        * - `_text` in database
        * - Nullable, no default
        */
        specialty_ids?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_provider.bio**
        * - `text` in database
        * - Nullable, no default
        */
        bio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_provider_oid_key' | 'schedule_provider_pkey' | 'schedule_provider_unique_npi';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_referral**
     * - Table in database
     */
    export namespace schedule_referral {
      export type Table = 'telenutrition.schedule_referral';
      export interface Selectable {
        /**
        * **telenutrition.schedule_referral.referral_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_referrer_id_seq'::regclass)`
        */
        referral_id: number;
        /**
        * **telenutrition.schedule_referral.referrer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        referrer_id: number | null;
        /**
        * **telenutrition.schedule_referral.icd10_codes**
        * - `_varchar` in database
        * - Nullable, no default
        */
        icd10_codes: string[] | null;
        /**
        * **telenutrition.schedule_referral.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id: number | null;
        /**
        * **telenutrition.schedule_referral.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
        /**
        * **telenutrition.schedule_referral.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.schedule_referral.type**
        * - `varchar` in database
        * - Nullable, default: `'referral'::character varying`
        */
        type: string | null;
        /**
        * **telenutrition.schedule_referral.data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        data: db.JSONValue | null;
        /**
        * **telenutrition.schedule_referral.referral_date**
        * - `date` in database
        * - Nullable, no default
        */
        referral_date: Date | null;
        /**
        * **telenutrition.schedule_referral.referred_by**
        * - `text` in database
        * - Nullable, no default
        */
        referred_by: string | null;
        /**
        * **telenutrition.schedule_referral.referral_status**
        * - `text` in database
        * - Nullable, no default
        */
        referral_status: string | null;
        /**
        * **telenutrition.schedule_referral.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id: number | null;
        /**
        * **telenutrition.schedule_referral.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id: number | null;
        /**
        * **telenutrition.schedule_referral.source_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        source_data: db.JSONValue | null;
        /**
        * **telenutrition.schedule_referral.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id: number | null;
        /**
        * **telenutrition.schedule_referral.referral_external_id**
        * - `text` in database
        * - Nullable, no default
        */
        referral_external_id: string | null;
        /**
        * **telenutrition.schedule_referral.referral_external_status**
        * - `text` in database
        * - Nullable, no default
        */
        referral_external_status: string | null;
        /**
        * **telenutrition.schedule_referral.patient_external_id**
        * - `text` in database
        * - Nullable, no default
        */
        patient_external_id: string | null;
        /**
        * **telenutrition.schedule_referral.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at: Date;
        /**
        * **telenutrition.schedule_referral.referral_action**
        * - `jsonb` in database
        * - Nullable, no default
        */
        referral_action: db.JSONValue | null;
        /**
        * **telenutrition.schedule_referral.referral_source**
        * - `varchar` in database
        * - Nullable, default: `'unknown'::character varying`
        */
        referral_source: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_referral.referral_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_referrer_id_seq'::regclass)`
        */
        referral_id: number;
        /**
        * **telenutrition.schedule_referral.referrer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        referrer_id: number | null;
        /**
        * **telenutrition.schedule_referral.icd10_codes**
        * - `_varchar` in database
        * - Nullable, no default
        */
        icd10_codes: string[] | null;
        /**
        * **telenutrition.schedule_referral.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id: number | null;
        /**
        * **telenutrition.schedule_referral.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
        /**
        * **telenutrition.schedule_referral.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.schedule_referral.type**
        * - `varchar` in database
        * - Nullable, default: `'referral'::character varying`
        */
        type: string | null;
        /**
        * **telenutrition.schedule_referral.data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        data: db.JSONValue | null;
        /**
        * **telenutrition.schedule_referral.referral_date**
        * - `date` in database
        * - Nullable, no default
        */
        referral_date: db.DateString | null;
        /**
        * **telenutrition.schedule_referral.referred_by**
        * - `text` in database
        * - Nullable, no default
        */
        referred_by: string | null;
        /**
        * **telenutrition.schedule_referral.referral_status**
        * - `text` in database
        * - Nullable, no default
        */
        referral_status: string | null;
        /**
        * **telenutrition.schedule_referral.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id: number | null;
        /**
        * **telenutrition.schedule_referral.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id: number | null;
        /**
        * **telenutrition.schedule_referral.source_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        source_data: db.JSONValue | null;
        /**
        * **telenutrition.schedule_referral.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id: number | null;
        /**
        * **telenutrition.schedule_referral.referral_external_id**
        * - `text` in database
        * - Nullable, no default
        */
        referral_external_id: string | null;
        /**
        * **telenutrition.schedule_referral.referral_external_status**
        * - `text` in database
        * - Nullable, no default
        */
        referral_external_status: string | null;
        /**
        * **telenutrition.schedule_referral.patient_external_id**
        * - `text` in database
        * - Nullable, no default
        */
        patient_external_id: string | null;
        /**
        * **telenutrition.schedule_referral.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at: db.TimestampString;
        /**
        * **telenutrition.schedule_referral.referral_action**
        * - `jsonb` in database
        * - Nullable, no default
        */
        referral_action: db.JSONValue | null;
        /**
        * **telenutrition.schedule_referral.referral_source**
        * - `varchar` in database
        * - Nullable, default: `'unknown'::character varying`
        */
        referral_source: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_referral.referral_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_referrer_id_seq'::regclass)`
        */
        referral_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.referrer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        referrer_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.icd10_codes**
        * - `_varchar` in database
        * - Nullable, no default
        */
        icd10_codes?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.type**
        * - `varchar` in database
        * - Nullable, default: `'referral'::character varying`
        */
        type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.referral_date**
        * - `date` in database
        * - Nullable, no default
        */
        referral_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.referred_by**
        * - `text` in database
        * - Nullable, no default
        */
        referred_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.referral_status**
        * - `text` in database
        * - Nullable, no default
        */
        referral_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.source_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        source_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.referral_external_id**
        * - `text` in database
        * - Nullable, no default
        */
        referral_external_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.referral_external_status**
        * - `text` in database
        * - Nullable, no default
        */
        referral_external_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.patient_external_id**
        * - `text` in database
        * - Nullable, no default
        */
        patient_external_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.referral_action**
        * - `jsonb` in database
        * - Nullable, no default
        */
        referral_action?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referral.referral_source**
        * - `varchar` in database
        * - Nullable, default: `'unknown'::character varying`
        */
        referral_source?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_referral.referral_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_referrer_id_seq'::regclass)`
        */
        referral_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.referrer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        referrer_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.icd10_codes**
        * - `_varchar` in database
        * - Nullable, no default
        */
        icd10_codes?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.type**
        * - `varchar` in database
        * - Nullable, default: `'referral'::character varying`
        */
        type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.referral_date**
        * - `date` in database
        * - Nullable, no default
        */
        referral_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.referred_by**
        * - `text` in database
        * - Nullable, no default
        */
        referred_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.referral_status**
        * - `text` in database
        * - Nullable, no default
        */
        referral_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.source_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        source_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.referral_external_id**
        * - `text` in database
        * - Nullable, no default
        */
        referral_external_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.referral_external_status**
        * - `text` in database
        * - Nullable, no default
        */
        referral_external_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.patient_external_id**
        * - `text` in database
        * - Nullable, no default
        */
        patient_external_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.referral_action**
        * - `jsonb` in database
        * - Nullable, no default
        */
        referral_action?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referral.referral_source**
        * - `varchar` in database
        * - Nullable, default: `'unknown'::character varying`
        */
        referral_source?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_referral.referral_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_referrer_id_seq'::regclass)`
        */
        referral_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.referrer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        referrer_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.icd10_codes**
        * - `_varchar` in database
        * - Nullable, no default
        */
        icd10_codes?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.appointment_id**
        * - `int4` in database
        * - Nullable, no default
        */
        appointment_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.type**
        * - `varchar` in database
        * - Nullable, default: `'referral'::character varying`
        */
        type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.referral_date**
        * - `date` in database
        * - Nullable, no default
        */
        referral_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.referred_by**
        * - `text` in database
        * - Nullable, no default
        */
        referred_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.referral_status**
        * - `text` in database
        * - Nullable, no default
        */
        referral_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.source_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        source_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.referral_external_id**
        * - `text` in database
        * - Nullable, no default
        */
        referral_external_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.referral_external_status**
        * - `text` in database
        * - Nullable, no default
        */
        referral_external_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.patient_external_id**
        * - `text` in database
        * - Nullable, no default
        */
        patient_external_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.referral_action**
        * - `jsonb` in database
        * - Nullable, no default
        */
        referral_action?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referral.referral_source**
        * - `varchar` in database
        * - Nullable, default: `'unknown'::character varying`
        */
        referral_source?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_referral_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_referrer**
     * - Table in database
     */
    export namespace schedule_referrer {
      export type Table = 'telenutrition.schedule_referrer';
      export interface Selectable {
        /**
        * **telenutrition.schedule_referrer.referrer_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_referrer_id_seq'::regclass)`
        */
        referrer_id: number;
        /**
        * **telenutrition.schedule_referrer.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name: string;
        /**
        * **telenutrition.schedule_referrer.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name: string;
        /**
        * **telenutrition.schedule_referrer.email**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        email: string;
        /**
        * **telenutrition.schedule_referrer.organization**
        * - `varchar` in database
        * - Nullable, no default
        */
        organization: string | null;
        /**
        * **telenutrition.schedule_referrer.credentials**
        * - `varchar` in database
        * - Nullable, no default
        */
        credentials: string | null;
        /**
        * **telenutrition.schedule_referrer.org_id**
        * - `int4` in database
        * - Nullable, no default
        */
        org_id: number | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_referrer.referrer_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_referrer_id_seq'::regclass)`
        */
        referrer_id: number;
        /**
        * **telenutrition.schedule_referrer.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name: string;
        /**
        * **telenutrition.schedule_referrer.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name: string;
        /**
        * **telenutrition.schedule_referrer.email**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        email: string;
        /**
        * **telenutrition.schedule_referrer.organization**
        * - `varchar` in database
        * - Nullable, no default
        */
        organization: string | null;
        /**
        * **telenutrition.schedule_referrer.credentials**
        * - `varchar` in database
        * - Nullable, no default
        */
        credentials: string | null;
        /**
        * **telenutrition.schedule_referrer.org_id**
        * - `int4` in database
        * - Nullable, no default
        */
        org_id: number | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_referrer.referrer_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_referrer_id_seq'::regclass)`
        */
        referrer_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referrer.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referrer.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referrer.email**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referrer.organization**
        * - `varchar` in database
        * - Nullable, no default
        */
        organization?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referrer.credentials**
        * - `varchar` in database
        * - Nullable, no default
        */
        credentials?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_referrer.org_id**
        * - `int4` in database
        * - Nullable, no default
        */
        org_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_referrer.referrer_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_referrer_id_seq'::regclass)`
        */
        referrer_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referrer.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_referrer.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_referrer.email**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        email: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_referrer.organization**
        * - `varchar` in database
        * - Nullable, no default
        */
        organization?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referrer.credentials**
        * - `varchar` in database
        * - Nullable, no default
        */
        credentials?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_referrer.org_id**
        * - `int4` in database
        * - Nullable, no default
        */
        org_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_referrer.referrer_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_referrer_id_seq'::regclass)`
        */
        referrer_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referrer.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referrer.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referrer.email**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referrer.organization**
        * - `varchar` in database
        * - Nullable, no default
        */
        organization?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referrer.credentials**
        * - `varchar` in database
        * - Nullable, no default
        */
        credentials?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_referrer.org_id**
        * - `int4` in database
        * - Nullable, no default
        */
        org_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_referrer_email_key' | 'schedule_referrer_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_slot**
     * - Table in database
     */
    export namespace schedule_slot {
      export type Table = 'telenutrition.schedule_slot';
      export interface Selectable {
        /**
        * **telenutrition.schedule_slot.slot_id**
        * - `uuid` in database
        * - `NOT NULL`, no default
        */
        slot_id: string;
        /**
        * **telenutrition.schedule_slot.slot_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        slot_type: string;
        /**
        * **telenutrition.schedule_slot.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
        /**
        * **telenutrition.schedule_slot.start_timestamp**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        start_timestamp: Date;
        /**
        * **telenutrition.schedule_slot.end_timestamp**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        end_timestamp: Date;
        /**
        * **telenutrition.schedule_slot.duration**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        duration: number;
        /**
        * **telenutrition.schedule_slot.appointment_ids**
        * - `_int8` in database
        * - `NOT NULL`, no default
        */
        appointment_ids: db.Int8String[];
        /**
        * **telenutrition.schedule_slot.sync_token**
        * - `uuid` in database
        * - `NOT NULL`, no default
        */
        sync_token: string;
        /**
        * **telenutrition.schedule_slot.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.schedule_slot.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_slot.slot_id**
        * - `uuid` in database
        * - `NOT NULL`, no default
        */
        slot_id: string;
        /**
        * **telenutrition.schedule_slot.slot_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        slot_type: string;
        /**
        * **telenutrition.schedule_slot.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
        /**
        * **telenutrition.schedule_slot.start_timestamp**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        start_timestamp: db.TimestampString;
        /**
        * **telenutrition.schedule_slot.end_timestamp**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        end_timestamp: db.TimestampString;
        /**
        * **telenutrition.schedule_slot.duration**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        duration: number;
        /**
        * **telenutrition.schedule_slot.appointment_ids**
        * - `_int8` in database
        * - `NOT NULL`, no default
        */
        appointment_ids: number[];
        /**
        * **telenutrition.schedule_slot.sync_token**
        * - `uuid` in database
        * - `NOT NULL`, no default
        */
        sync_token: string;
        /**
        * **telenutrition.schedule_slot.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.schedule_slot.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_slot.slot_id**
        * - `uuid` in database
        * - `NOT NULL`, no default
        */
        slot_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_slot.slot_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        slot_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_slot.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_slot.start_timestamp**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        start_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_slot.end_timestamp**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        end_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_slot.duration**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        duration?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_slot.appointment_ids**
        * - `_int8` in database
        * - `NOT NULL`, no default
        */
        appointment_ids?: (number | db.Int8String)[] | db.Parameter<(number | db.Int8String)[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String)[] | db.Parameter<(number | db.Int8String)[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_slot.sync_token**
        * - `uuid` in database
        * - `NOT NULL`, no default
        */
        sync_token?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_slot.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_slot.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_slot.slot_id**
        * - `uuid` in database
        * - `NOT NULL`, no default
        */
        slot_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_slot.slot_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        slot_type: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_slot.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_slot.start_timestamp**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        start_timestamp: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.schedule_slot.end_timestamp**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        end_timestamp: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.schedule_slot.duration**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        duration: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_slot.appointment_ids**
        * - `_int8` in database
        * - `NOT NULL`, no default
        */
        appointment_ids: (number | db.Int8String)[] | db.Parameter<(number | db.Int8String)[]> | db.SQLFragment;
        /**
        * **telenutrition.schedule_slot.sync_token**
        * - `uuid` in database
        * - `NOT NULL`, no default
        */
        sync_token: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_slot.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_slot.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_slot.slot_id**
        * - `uuid` in database
        * - `NOT NULL`, no default
        */
        slot_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_slot.slot_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        slot_type?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_slot.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_slot.start_timestamp**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        start_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_slot.end_timestamp**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        end_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_slot.duration**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        duration?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_slot.appointment_ids**
        * - `_int8` in database
        * - `NOT NULL`, no default
        */
        appointment_ids?: (number | db.Int8String)[] | db.Parameter<(number | db.Int8String)[]> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String)[] | db.Parameter<(number | db.Int8String)[]> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_slot.sync_token**
        * - `uuid` in database
        * - `NOT NULL`, no default
        */
        sync_token?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_slot.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_slot.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_slot_pkey' | 'unique_schedule_slot';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_sponsor**
     * - Table in database
     */
    export namespace schedule_sponsor {
      export type Table = 'telenutrition.schedule_sponsor';
      export interface Selectable {
        /**
        * **telenutrition.schedule_sponsor.sponsor_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_sponsor_sponsor_id_seq'::regclass)`
        */
        sponsor_id: number;
        /**
        * **telenutrition.schedule_sponsor.label**
        * - `text` in database
        * - Nullable, no default
        */
        label: string | null;
        /**
        * **telenutrition.schedule_sponsor.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string;
        /**
        * **telenutrition.schedule_sponsor.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.schedule_sponsor.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_sponsor.sponsor_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_sponsor_sponsor_id_seq'::regclass)`
        */
        sponsor_id: number;
        /**
        * **telenutrition.schedule_sponsor.label**
        * - `text` in database
        * - Nullable, no default
        */
        label: string | null;
        /**
        * **telenutrition.schedule_sponsor.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string;
        /**
        * **telenutrition.schedule_sponsor.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.schedule_sponsor.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_sponsor.sponsor_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_sponsor_sponsor_id_seq'::regclass)`
        */
        sponsor_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_sponsor.label**
        * - `text` in database
        * - Nullable, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_sponsor.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_sponsor.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_sponsor.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_sponsor.sponsor_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_sponsor_sponsor_id_seq'::regclass)`
        */
        sponsor_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_sponsor.label**
        * - `text` in database
        * - Nullable, no default
        */
        label?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_sponsor.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.schedule_sponsor.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_sponsor.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_sponsor.sponsor_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_sponsor_sponsor_id_seq'::regclass)`
        */
        sponsor_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_sponsor.label**
        * - `text` in database
        * - Nullable, no default
        */
        label?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_sponsor.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_sponsor.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_sponsor.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_sponsor_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_user**
     * - Table in database
     */
    export namespace schedule_user {
      export type Table = 'telenutrition.schedule_user';
      export interface Selectable {
        /**
        * **telenutrition.schedule_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_user_user_id_seq'::regclass)`
        */
        user_id: number;
        /**
        * **telenutrition.schedule_user.fs_user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_user_id: number | null;
        /**
        * **telenutrition.schedule_user.fs_eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_eligible_id: number | null;
        /**
        * **telenutrition.schedule_user.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email: string | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_user_user_id_seq'::regclass)`
        */
        user_id: number;
        /**
        * **telenutrition.schedule_user.fs_user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_user_id: number | null;
        /**
        * **telenutrition.schedule_user.fs_eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_eligible_id: number | null;
        /**
        * **telenutrition.schedule_user.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email: string | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_user_user_id_seq'::regclass)`
        */
        user_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_user.fs_user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_user_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_user.fs_eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_eligible_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_user.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_user_user_id_seq'::regclass)`
        */
        user_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_user.fs_user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_user_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_user.fs_eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_eligible_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_user.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_user.user_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_user_user_id_seq'::regclass)`
        */
        user_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_user.fs_user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_user_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_user.fs_eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        fs_eligible_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_user.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_user_fs_user_id_idx' | 'schedule_user_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.schedule_user_patient**
     * - Table in database
     */
    export namespace schedule_user_patient {
      export type Table = 'telenutrition.schedule_user_patient';
      export interface Selectable {
        /**
        * **telenutrition.schedule_user_patient.user_patient_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_user_patient_user_patient_id_seq'::regclass)`
        */
        user_patient_id: number;
        /**
        * **telenutrition.schedule_user_patient.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id: number;
        /**
        * **telenutrition.schedule_user_patient.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.schedule_user_patient.user_patient_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_user_patient_user_patient_id_seq'::regclass)`
        */
        user_patient_id: number;
        /**
        * **telenutrition.schedule_user_patient.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id: number;
        /**
        * **telenutrition.schedule_user_patient.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number;
      }
      export interface Whereable {
        /**
        * **telenutrition.schedule_user_patient.user_patient_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_user_patient_user_patient_id_seq'::regclass)`
        */
        user_patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_user_patient.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.schedule_user_patient.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.schedule_user_patient.user_patient_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_user_patient_user_patient_id_seq'::regclass)`
        */
        user_patient_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.schedule_user_patient.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.schedule_user_patient.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number | db.Parameter<number> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.schedule_user_patient.user_patient_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.schedule_user_patient_user_patient_id_seq'::regclass)`
        */
        user_patient_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.schedule_user_patient.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.schedule_user_patient.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
      }
      export type UniqueIndex = 'schedule_user_patient_patient_id_key' | 'schedule_user_patient_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.state_credentialing_config**
     * - Table in database
     */
    export namespace state_credentialing_config {
      export type Table = 'telenutrition.state_credentialing_config';
      export interface Selectable {
        /**
        * **telenutrition.state_credentialing_config.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string;
        /**
        * **telenutrition.state_credentialing_config.licensure_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        licensure_required: boolean;
        /**
        * **telenutrition.state_credentialing_config.caqh_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        caqh_required: boolean;
        /**
        * **telenutrition.state_credentialing_config.medicaid_enrollment_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        medicaid_enrollment_required: boolean;
        /**
        * **telenutrition.state_credentialing_config.medicare_enrollment_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        medicare_enrollment_required: boolean;
        /**
        * **telenutrition.state_credentialing_config.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at: Date;
        /**
        * **telenutrition.state_credentialing_config.updated_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        updated_by: string;
        /**
        * **telenutrition.state_credentialing_config.pending_licensure_allowed**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        pending_licensure_allowed: boolean;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.state_credentialing_config.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string;
        /**
        * **telenutrition.state_credentialing_config.licensure_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        licensure_required: boolean;
        /**
        * **telenutrition.state_credentialing_config.caqh_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        caqh_required: boolean;
        /**
        * **telenutrition.state_credentialing_config.medicaid_enrollment_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        medicaid_enrollment_required: boolean;
        /**
        * **telenutrition.state_credentialing_config.medicare_enrollment_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        medicare_enrollment_required: boolean;
        /**
        * **telenutrition.state_credentialing_config.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at: db.TimestampString;
        /**
        * **telenutrition.state_credentialing_config.updated_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        updated_by: string;
        /**
        * **telenutrition.state_credentialing_config.pending_licensure_allowed**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        pending_licensure_allowed: boolean;
      }
      export interface Whereable {
        /**
        * **telenutrition.state_credentialing_config.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.state_credentialing_config.licensure_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        licensure_required?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.state_credentialing_config.caqh_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        caqh_required?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.state_credentialing_config.medicaid_enrollment_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        medicaid_enrollment_required?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.state_credentialing_config.medicare_enrollment_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        medicare_enrollment_required?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.state_credentialing_config.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.state_credentialing_config.updated_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        updated_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.state_credentialing_config.pending_licensure_allowed**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        pending_licensure_allowed?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.state_credentialing_config.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.state_credentialing_config.licensure_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        licensure_required?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.state_credentialing_config.caqh_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        caqh_required?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.state_credentialing_config.medicaid_enrollment_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        medicaid_enrollment_required?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.state_credentialing_config.medicare_enrollment_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        medicare_enrollment_required?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.state_credentialing_config.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.state_credentialing_config.updated_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        updated_by: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.state_credentialing_config.pending_licensure_allowed**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        pending_licensure_allowed?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.state_credentialing_config.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.state_credentialing_config.licensure_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        licensure_required?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.state_credentialing_config.caqh_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        caqh_required?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.state_credentialing_config.medicaid_enrollment_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        medicaid_enrollment_required?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.state_credentialing_config.medicare_enrollment_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        medicare_enrollment_required?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.state_credentialing_config.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.state_credentialing_config.updated_by**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        updated_by?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.state_credentialing_config.pending_licensure_allowed**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        pending_licensure_allowed?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'state_credentialing_config_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.sticky_note**
     * - Table in database
     */
    export namespace sticky_note {
      export type Table = 'telenutrition.sticky_note';
      export interface Selectable {
        /**
        * **telenutrition.sticky_note.sticky_note_id**
        * - `int4` in database
        * - Generated column
        */
        sticky_note_id: number;
        /**
        * **telenutrition.sticky_note.parent_note_id**
        * - `int4` in database
        * - Nullable, no default
        */
        parent_note_id: number | null;
        /**
        * **telenutrition.sticky_note.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number;
        /**
        * **telenutrition.sticky_note.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
        /**
        * **telenutrition.sticky_note.source_type**
        * - `varchar` in database
        * - Nullable, no default
        */
        source_type: string | null;
        /**
        * **telenutrition.sticky_note.source_id**
        * - `int4` in database
        * - Nullable, no default
        */
        source_id: number | null;
        /**
        * **telenutrition.sticky_note.note_content**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        note_content: string;
        /**
        * **telenutrition.sticky_note.status**
        * - `text` in database
        * - `NOT NULL`, default: `'active'::text`
        */
        status: string;
        /**
        * **telenutrition.sticky_note.is_active**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        is_active: boolean;
        /**
        * **telenutrition.sticky_note.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.sticky_note.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at: Date;
        /**
        * **telenutrition.sticky_note.archived_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        archived_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.sticky_note.sticky_note_id**
        * - `int4` in database
        * - Generated column
        */
        sticky_note_id: number;
        /**
        * **telenutrition.sticky_note.parent_note_id**
        * - `int4` in database
        * - Nullable, no default
        */
        parent_note_id: number | null;
        /**
        * **telenutrition.sticky_note.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number;
        /**
        * **telenutrition.sticky_note.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number;
        /**
        * **telenutrition.sticky_note.source_type**
        * - `varchar` in database
        * - Nullable, no default
        */
        source_type: string | null;
        /**
        * **telenutrition.sticky_note.source_id**
        * - `int4` in database
        * - Nullable, no default
        */
        source_id: number | null;
        /**
        * **telenutrition.sticky_note.note_content**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        note_content: string;
        /**
        * **telenutrition.sticky_note.status**
        * - `text` in database
        * - `NOT NULL`, default: `'active'::text`
        */
        status: string;
        /**
        * **telenutrition.sticky_note.is_active**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        is_active: boolean;
        /**
        * **telenutrition.sticky_note.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampTzString;
        /**
        * **telenutrition.sticky_note.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at: db.TimestampTzString;
        /**
        * **telenutrition.sticky_note.archived_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        archived_at: db.TimestampTzString | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.sticky_note.sticky_note_id**
        * - `int4` in database
        * - Generated column
        */
        sticky_note_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.sticky_note.parent_note_id**
        * - `int4` in database
        * - Nullable, no default
        */
        parent_note_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.sticky_note.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.sticky_note.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.sticky_note.source_type**
        * - `varchar` in database
        * - Nullable, no default
        */
        source_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.sticky_note.source_id**
        * - `int4` in database
        * - Nullable, no default
        */
        source_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.sticky_note.note_content**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        note_content?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.sticky_note.status**
        * - `text` in database
        * - `NOT NULL`, default: `'active'::text`
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.sticky_note.is_active**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        is_active?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.sticky_note.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.sticky_note.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.sticky_note.archived_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        archived_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.sticky_note.parent_note_id**
        * - `int4` in database
        * - Nullable, no default
        */
        parent_note_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.sticky_note.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.sticky_note.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.sticky_note.source_type**
        * - `varchar` in database
        * - Nullable, no default
        */
        source_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.sticky_note.source_id**
        * - `int4` in database
        * - Nullable, no default
        */
        source_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.sticky_note.note_content**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        note_content: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.sticky_note.status**
        * - `text` in database
        * - `NOT NULL`, default: `'active'::text`
        */
        status?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.sticky_note.is_active**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        is_active?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.sticky_note.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.sticky_note.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.sticky_note.archived_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        archived_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.sticky_note.parent_note_id**
        * - `int4` in database
        * - Nullable, no default
        */
        parent_note_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.sticky_note.patient_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.sticky_note.provider_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.sticky_note.source_type**
        * - `varchar` in database
        * - Nullable, no default
        */
        source_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.sticky_note.source_id**
        * - `int4` in database
        * - Nullable, no default
        */
        source_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.sticky_note.note_content**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        note_content?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.sticky_note.status**
        * - `text` in database
        * - `NOT NULL`, default: `'active'::text`
        */
        status?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.sticky_note.is_active**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        is_active?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.sticky_note.created_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.sticky_note.updated_at**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.sticky_note.archived_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        archived_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'sticky_note_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.valid_provider_payer_enrollment**
     * - View in database
     */
    export namespace valid_provider_payer_enrollment {
      export type Table = 'telenutrition.valid_provider_payer_enrollment';
      export interface Selectable {
        /**
        * **telenutrition.valid_provider_payer_enrollment.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.valid_provider_payer_enrollment.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id: number | null;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.valid_provider_payer_enrollment.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.valid_provider_payer_enrollment.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id: number | null;
      }
      export interface Whereable {
        /**
        * **telenutrition.valid_provider_payer_enrollment.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.valid_provider_payer_enrollment.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        [key: string]: never;
      }
      export interface Updatable {
        [key: string]: never;
      }
      export type UniqueIndex = never;
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.wallet**
     * - Table in database
     */
    export namespace wallet {
      export type Table = 'telenutrition.wallet';
      export interface Selectable {
        /**
        * **telenutrition.wallet.wallet_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.wallet_wallet_id_seq'::regclass)`
        */
        wallet_id: number;
        /**
        * **telenutrition.wallet.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id: number;
        /**
        * **telenutrition.wallet.balance**
        * - `money` in database
        * - `NOT NULL`, default: `0`
        */
        balance: string;
        /**
        * **telenutrition.wallet.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.wallet.wallet_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.wallet_wallet_id_seq'::regclass)`
        */
        wallet_id: number;
        /**
        * **telenutrition.wallet.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id: number;
        /**
        * **telenutrition.wallet.balance**
        * - `money` in database
        * - `NOT NULL`, default: `0`
        */
        balance: string;
        /**
        * **telenutrition.wallet.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **telenutrition.wallet.wallet_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.wallet_wallet_id_seq'::regclass)`
        */
        wallet_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.wallet.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.wallet.balance**
        * - `money` in database
        * - `NOT NULL`, default: `0`
        */
        balance?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.wallet.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.wallet.wallet_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.wallet_wallet_id_seq'::regclass)`
        */
        wallet_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.wallet.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.wallet.balance**
        * - `money` in database
        * - `NOT NULL`, default: `0`
        */
        balance?: (number | string) | db.Parameter<(number | string)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.wallet.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.wallet.wallet_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.wallet_wallet_id_seq'::regclass)`
        */
        wallet_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.wallet.user_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        user_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.wallet.balance**
        * - `money` in database
        * - `NOT NULL`, default: `0`
        */
        balance?: (number | string) | db.Parameter<(number | string)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.wallet.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'wallet_pkey' | 'wallet_user_id_idx';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.wallet_transaction**
     * - Table in database
     */
    export namespace wallet_transaction {
      export type Table = 'telenutrition.wallet_transaction';
      export interface Selectable {
        /**
        * **telenutrition.wallet_transaction.transaction_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.wallet_transaction_transaction_id_seq'::regclass)`
        */
        transaction_id: number;
        /**
        * **telenutrition.wallet_transaction.wallet_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        wallet_id: number;
        /**
        * **telenutrition.wallet_transaction.amount**
        * - `money` in database
        * - `NOT NULL`, default: `0`
        */
        amount: string;
        /**
        * **telenutrition.wallet_transaction.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.wallet_transaction.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta: db.JSONValue | null;
        /**
        * **telenutrition.wallet_transaction.transacted_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        transacted_at: Date;
        /**
        * **telenutrition.wallet_transaction.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.wallet_transaction.transaction_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.wallet_transaction_transaction_id_seq'::regclass)`
        */
        transaction_id: number;
        /**
        * **telenutrition.wallet_transaction.wallet_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        wallet_id: number;
        /**
        * **telenutrition.wallet_transaction.amount**
        * - `money` in database
        * - `NOT NULL`, default: `0`
        */
        amount: string;
        /**
        * **telenutrition.wallet_transaction.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **telenutrition.wallet_transaction.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta: db.JSONValue | null;
        /**
        * **telenutrition.wallet_transaction.transacted_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        transacted_at: db.TimestampString;
        /**
        * **telenutrition.wallet_transaction.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **telenutrition.wallet_transaction.transaction_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.wallet_transaction_transaction_id_seq'::regclass)`
        */
        transaction_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.wallet_transaction.wallet_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        wallet_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.wallet_transaction.amount**
        * - `money` in database
        * - `NOT NULL`, default: `0`
        */
        amount?: (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.wallet_transaction.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.wallet_transaction.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.wallet_transaction.transacted_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        transacted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.wallet_transaction.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.wallet_transaction.transaction_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.wallet_transaction_transaction_id_seq'::regclass)`
        */
        transaction_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.wallet_transaction.wallet_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        wallet_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **telenutrition.wallet_transaction.amount**
        * - `money` in database
        * - `NOT NULL`, default: `0`
        */
        amount?: (number | string) | db.Parameter<(number | string)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.wallet_transaction.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.wallet_transaction.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.wallet_transaction.transacted_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        transacted_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **telenutrition.wallet_transaction.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.wallet_transaction.transaction_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('telenutrition.wallet_transaction_transaction_id_seq'::regclass)`
        */
        transaction_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.wallet_transaction.wallet_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        wallet_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **telenutrition.wallet_transaction.amount**
        * - `money` in database
        * - `NOT NULL`, default: `0`
        */
        amount?: (number | string) | db.Parameter<(number | string)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | string) | db.Parameter<(number | string)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.wallet_transaction.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.wallet_transaction.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.wallet_transaction.transacted_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        transacted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **telenutrition.wallet_transaction.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'wallet_transaction_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.workramp_contact**
     * - Table in database
     */
    export namespace workramp_contact {
      export type Table = 'telenutrition.workramp_contact';
      export interface Selectable {
        /**
        * **telenutrition.workramp_contact.contact_id**
        * - `int8` in database
        * - Generated column
        */
        contact_id: db.Int8String;
        /**
        * **telenutrition.workramp_contact.workramp_contact_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        workramp_contact_id: string;
        /**
        * **telenutrition.workramp_contact.email**
        * - `text` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **telenutrition.workramp_contact.first_name**
        * - `text` in database
        * - Nullable, no default
        */
        first_name: string | null;
        /**
        * **telenutrition.workramp_contact.last_name**
        * - `text` in database
        * - Nullable, no default
        */
        last_name: string | null;
        /**
        * **telenutrition.workramp_contact.npi**
        * - `int4` in database
        * - Nullable, no default
        */
        npi: number | null;
        /**
        * **telenutrition.workramp_contact.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.workramp_contact.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.workramp_contact.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.workramp_contact.contact_id**
        * - `int8` in database
        * - Generated column
        */
        contact_id: number;
        /**
        * **telenutrition.workramp_contact.workramp_contact_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        workramp_contact_id: string;
        /**
        * **telenutrition.workramp_contact.email**
        * - `text` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **telenutrition.workramp_contact.first_name**
        * - `text` in database
        * - Nullable, no default
        */
        first_name: string | null;
        /**
        * **telenutrition.workramp_contact.last_name**
        * - `text` in database
        * - Nullable, no default
        */
        last_name: string | null;
        /**
        * **telenutrition.workramp_contact.npi**
        * - `int4` in database
        * - Nullable, no default
        */
        npi: number | null;
        /**
        * **telenutrition.workramp_contact.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id: number | null;
        /**
        * **telenutrition.workramp_contact.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.workramp_contact.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **telenutrition.workramp_contact.contact_id**
        * - `int8` in database
        * - Generated column
        */
        contact_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact.workramp_contact_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        workramp_contact_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact.email**
        * - `text` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact.first_name**
        * - `text` in database
        * - Nullable, no default
        */
        first_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact.last_name**
        * - `text` in database
        * - Nullable, no default
        */
        last_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact.npi**
        * - `int4` in database
        * - Nullable, no default
        */
        npi?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.workramp_contact.workramp_contact_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        workramp_contact_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.workramp_contact.email**
        * - `text` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.workramp_contact.first_name**
        * - `text` in database
        * - Nullable, no default
        */
        first_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.workramp_contact.last_name**
        * - `text` in database
        * - Nullable, no default
        */
        last_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.workramp_contact.npi**
        * - `int4` in database
        * - Nullable, no default
        */
        npi?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.workramp_contact.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.workramp_contact.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.workramp_contact.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.workramp_contact.workramp_contact_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        workramp_contact_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.workramp_contact.email**
        * - `text` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.workramp_contact.first_name**
        * - `text` in database
        * - Nullable, no default
        */
        first_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.workramp_contact.last_name**
        * - `text` in database
        * - Nullable, no default
        */
        last_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.workramp_contact.npi**
        * - `int4` in database
        * - Nullable, no default
        */
        npi?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.workramp_contact.provider_id**
        * - `int4` in database
        * - Nullable, no default
        */
        provider_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.workramp_contact.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.workramp_contact.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'unique_workramp_contact_id' | 'workramp_contact_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **telenutrition.workramp_contact_path**
     * - Table in database
     */
    export namespace workramp_contact_path {
      export type Table = 'telenutrition.workramp_contact_path';
      export interface Selectable {
        /**
        * **telenutrition.workramp_contact_path.contact_path_id**
        * - `int8` in database
        * - Generated column
        */
        contact_path_id: db.Int8String;
        /**
        * **telenutrition.workramp_contact_path.workramp_contact_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        workramp_contact_id: string;
        /**
        * **telenutrition.workramp_contact_path.path_id**
        * - `text` in database
        * - Nullable, no default
        */
        path_id: string | null;
        /**
        * **telenutrition.workramp_contact_path.path_name**
        * - `text` in database
        * - Nullable, no default
        */
        path_name: string | null;
        /**
        * **telenutrition.workramp_contact_path.path_created_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        path_created_at: Date | null;
        /**
        * **telenutrition.workramp_contact_path.path_due_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        path_due_at: Date | null;
        /**
        * **telenutrition.workramp_contact_path.path_completed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        path_completed_at: Date | null;
        /**
        * **telenutrition.workramp_contact_path.progress_percentage**
        * - `int4` in database
        * - Nullable, no default
        */
        progress_percentage: number | null;
        /**
        * **telenutrition.workramp_contact_path.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **telenutrition.workramp_contact_path.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **telenutrition.workramp_contact_path.contact_path_id**
        * - `int8` in database
        * - Generated column
        */
        contact_path_id: number;
        /**
        * **telenutrition.workramp_contact_path.workramp_contact_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        workramp_contact_id: string;
        /**
        * **telenutrition.workramp_contact_path.path_id**
        * - `text` in database
        * - Nullable, no default
        */
        path_id: string | null;
        /**
        * **telenutrition.workramp_contact_path.path_name**
        * - `text` in database
        * - Nullable, no default
        */
        path_name: string | null;
        /**
        * **telenutrition.workramp_contact_path.path_created_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        path_created_at: db.TimestampString | null;
        /**
        * **telenutrition.workramp_contact_path.path_due_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        path_due_at: db.TimestampString | null;
        /**
        * **telenutrition.workramp_contact_path.path_completed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        path_completed_at: db.TimestampString | null;
        /**
        * **telenutrition.workramp_contact_path.progress_percentage**
        * - `int4` in database
        * - Nullable, no default
        */
        progress_percentage: number | null;
        /**
        * **telenutrition.workramp_contact_path.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **telenutrition.workramp_contact_path.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **telenutrition.workramp_contact_path.contact_path_id**
        * - `int8` in database
        * - Generated column
        */
        contact_path_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact_path.workramp_contact_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        workramp_contact_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact_path.path_id**
        * - `text` in database
        * - Nullable, no default
        */
        path_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact_path.path_name**
        * - `text` in database
        * - Nullable, no default
        */
        path_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact_path.path_created_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        path_created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact_path.path_due_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        path_due_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact_path.path_completed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        path_completed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact_path.progress_percentage**
        * - `int4` in database
        * - Nullable, no default
        */
        progress_percentage?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact_path.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **telenutrition.workramp_contact_path.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **telenutrition.workramp_contact_path.workramp_contact_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        workramp_contact_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **telenutrition.workramp_contact_path.path_id**
        * - `text` in database
        * - Nullable, no default
        */
        path_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.workramp_contact_path.path_name**
        * - `text` in database
        * - Nullable, no default
        */
        path_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.workramp_contact_path.path_created_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        path_created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.workramp_contact_path.path_due_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        path_due_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.workramp_contact_path.path_completed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        path_completed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.workramp_contact_path.progress_percentage**
        * - `int4` in database
        * - Nullable, no default
        */
        progress_percentage?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.workramp_contact_path.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **telenutrition.workramp_contact_path.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **telenutrition.workramp_contact_path.workramp_contact_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        workramp_contact_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **telenutrition.workramp_contact_path.path_id**
        * - `text` in database
        * - Nullable, no default
        */
        path_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.workramp_contact_path.path_name**
        * - `text` in database
        * - Nullable, no default
        */
        path_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.workramp_contact_path.path_created_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        path_created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.workramp_contact_path.path_due_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        path_due_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.workramp_contact_path.path_completed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        path_completed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.workramp_contact_path.progress_percentage**
        * - `int4` in database
        * - Nullable, no default
        */
        progress_percentage?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.workramp_contact_path.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **telenutrition.workramp_contact_path.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'unique_workramp_contact_path_id' | 'workramp_contact_path_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /* --- aggregate types --- */
  
    export type Table = account_food_offering_vendor_mapping.Table | account_food_offering_vendor_mapping_history.Table | account_payment_method_type.Table | activity.Table | activity_user.Table | appointment_cancel_reason.Table | athena_api_auth.Table | billing_code.Table | billing_contract.Table | billing_rule.Table | billing_rule_history.Table | billing_service_facility.Table | billing_transaction.Table | clinical_encounter.Table | clinical_encounter_amendment.Table | clinical_encounter_history.Table | clinical_encounter_oversight.Table | clinical_encounter_screening_questionnaire.Table | common_verification.Table | common_verification_method.Table | food_offering_type.Table | food_offering_type_history.Table | food_vendor.Table | food_vendor_history.Table | historical_athena_encounter_raw.Table | iam_federated_credentials.Table | iam_identity.Table | iam_user.Table | incentive.Table | incentive_contract.Table | incentive_rule.Table | instacart_code.Table | instacart_code_order.Table | issue_report.Table | issue_report_type.Table | medallion_provider.Table | ontology_concept.Table | patient_attribute.Table | patient_attribute_option.Table | patient_fact.Table | patient_fact_source.Table | patient_payment_transaction.Table | patient_summary.Table | payer.Table | payer_enrollment.Table | payer_provider_schedulability.Table | payer_roster.Table | payment_eligibility_check.Table | payment_method_type.Table | provider_board_certificate.Table | provider_license.Table | provider_license_application.Table | provider_license_summary.Table | provider_program_enrollment.Table | provider_task.Table | reward.Table | reward_user.Table | schedule_appointment.Table | schedule_appointment_history.Table | schedule_appointment_type.Table | schedule_appointment_type_mapping.Table | schedule_consent.Table | schedule_department.Table | schedule_department_provider.Table | schedule_department_provider_licensed.Table | schedule_employer.Table | schedule_flow.Table | schedule_insurance.Table | schedule_patient.Table | schedule_patient_payment_method.Table | schedule_patient_survey.Table | schedule_provider.Table | schedule_referral.Table | schedule_referrer.Table | schedule_slot.Table | schedule_sponsor.Table | schedule_user.Table | schedule_user_patient.Table | state_credentialing_config.Table | sticky_note.Table | valid_provider_payer_enrollment.Table | wallet.Table | wallet_transaction.Table | workramp_contact.Table | workramp_contact_path.Table;
    export type Selectable = account_food_offering_vendor_mapping.Selectable | account_food_offering_vendor_mapping_history.Selectable | account_payment_method_type.Selectable | activity.Selectable | activity_user.Selectable | appointment_cancel_reason.Selectable | athena_api_auth.Selectable | billing_code.Selectable | billing_contract.Selectable | billing_rule.Selectable | billing_rule_history.Selectable | billing_service_facility.Selectable | billing_transaction.Selectable | clinical_encounter.Selectable | clinical_encounter_amendment.Selectable | clinical_encounter_history.Selectable | clinical_encounter_oversight.Selectable | clinical_encounter_screening_questionnaire.Selectable | common_verification.Selectable | common_verification_method.Selectable | food_offering_type.Selectable | food_offering_type_history.Selectable | food_vendor.Selectable | food_vendor_history.Selectable | historical_athena_encounter_raw.Selectable | iam_federated_credentials.Selectable | iam_identity.Selectable | iam_user.Selectable | incentive.Selectable | incentive_contract.Selectable | incentive_rule.Selectable | instacart_code.Selectable | instacart_code_order.Selectable | issue_report.Selectable | issue_report_type.Selectable | medallion_provider.Selectable | ontology_concept.Selectable | patient_attribute.Selectable | patient_attribute_option.Selectable | patient_fact.Selectable | patient_fact_source.Selectable | patient_payment_transaction.Selectable | patient_summary.Selectable | payer.Selectable | payer_enrollment.Selectable | payer_provider_schedulability.Selectable | payer_roster.Selectable | payment_eligibility_check.Selectable | payment_method_type.Selectable | provider_board_certificate.Selectable | provider_license.Selectable | provider_license_application.Selectable | provider_license_summary.Selectable | provider_program_enrollment.Selectable | provider_task.Selectable | reward.Selectable | reward_user.Selectable | schedule_appointment.Selectable | schedule_appointment_history.Selectable | schedule_appointment_type.Selectable | schedule_appointment_type_mapping.Selectable | schedule_consent.Selectable | schedule_department.Selectable | schedule_department_provider.Selectable | schedule_department_provider_licensed.Selectable | schedule_employer.Selectable | schedule_flow.Selectable | schedule_insurance.Selectable | schedule_patient.Selectable | schedule_patient_payment_method.Selectable | schedule_patient_survey.Selectable | schedule_provider.Selectable | schedule_referral.Selectable | schedule_referrer.Selectable | schedule_slot.Selectable | schedule_sponsor.Selectable | schedule_user.Selectable | schedule_user_patient.Selectable | state_credentialing_config.Selectable | sticky_note.Selectable | valid_provider_payer_enrollment.Selectable | wallet.Selectable | wallet_transaction.Selectable | workramp_contact.Selectable | workramp_contact_path.Selectable;
    export type JSONSelectable = account_food_offering_vendor_mapping.JSONSelectable | account_food_offering_vendor_mapping_history.JSONSelectable | account_payment_method_type.JSONSelectable | activity.JSONSelectable | activity_user.JSONSelectable | appointment_cancel_reason.JSONSelectable | athena_api_auth.JSONSelectable | billing_code.JSONSelectable | billing_contract.JSONSelectable | billing_rule.JSONSelectable | billing_rule_history.JSONSelectable | billing_service_facility.JSONSelectable | billing_transaction.JSONSelectable | clinical_encounter.JSONSelectable | clinical_encounter_amendment.JSONSelectable | clinical_encounter_history.JSONSelectable | clinical_encounter_oversight.JSONSelectable | clinical_encounter_screening_questionnaire.JSONSelectable | common_verification.JSONSelectable | common_verification_method.JSONSelectable | food_offering_type.JSONSelectable | food_offering_type_history.JSONSelectable | food_vendor.JSONSelectable | food_vendor_history.JSONSelectable | historical_athena_encounter_raw.JSONSelectable | iam_federated_credentials.JSONSelectable | iam_identity.JSONSelectable | iam_user.JSONSelectable | incentive.JSONSelectable | incentive_contract.JSONSelectable | incentive_rule.JSONSelectable | instacart_code.JSONSelectable | instacart_code_order.JSONSelectable | issue_report.JSONSelectable | issue_report_type.JSONSelectable | medallion_provider.JSONSelectable | ontology_concept.JSONSelectable | patient_attribute.JSONSelectable | patient_attribute_option.JSONSelectable | patient_fact.JSONSelectable | patient_fact_source.JSONSelectable | patient_payment_transaction.JSONSelectable | patient_summary.JSONSelectable | payer.JSONSelectable | payer_enrollment.JSONSelectable | payer_provider_schedulability.JSONSelectable | payer_roster.JSONSelectable | payment_eligibility_check.JSONSelectable | payment_method_type.JSONSelectable | provider_board_certificate.JSONSelectable | provider_license.JSONSelectable | provider_license_application.JSONSelectable | provider_license_summary.JSONSelectable | provider_program_enrollment.JSONSelectable | provider_task.JSONSelectable | reward.JSONSelectable | reward_user.JSONSelectable | schedule_appointment.JSONSelectable | schedule_appointment_history.JSONSelectable | schedule_appointment_type.JSONSelectable | schedule_appointment_type_mapping.JSONSelectable | schedule_consent.JSONSelectable | schedule_department.JSONSelectable | schedule_department_provider.JSONSelectable | schedule_department_provider_licensed.JSONSelectable | schedule_employer.JSONSelectable | schedule_flow.JSONSelectable | schedule_insurance.JSONSelectable | schedule_patient.JSONSelectable | schedule_patient_payment_method.JSONSelectable | schedule_patient_survey.JSONSelectable | schedule_provider.JSONSelectable | schedule_referral.JSONSelectable | schedule_referrer.JSONSelectable | schedule_slot.JSONSelectable | schedule_sponsor.JSONSelectable | schedule_user.JSONSelectable | schedule_user_patient.JSONSelectable | state_credentialing_config.JSONSelectable | sticky_note.JSONSelectable | valid_provider_payer_enrollment.JSONSelectable | wallet.JSONSelectable | wallet_transaction.JSONSelectable | workramp_contact.JSONSelectable | workramp_contact_path.JSONSelectable;
    export type Whereable = account_food_offering_vendor_mapping.Whereable | account_food_offering_vendor_mapping_history.Whereable | account_payment_method_type.Whereable | activity.Whereable | activity_user.Whereable | appointment_cancel_reason.Whereable | athena_api_auth.Whereable | billing_code.Whereable | billing_contract.Whereable | billing_rule.Whereable | billing_rule_history.Whereable | billing_service_facility.Whereable | billing_transaction.Whereable | clinical_encounter.Whereable | clinical_encounter_amendment.Whereable | clinical_encounter_history.Whereable | clinical_encounter_oversight.Whereable | clinical_encounter_screening_questionnaire.Whereable | common_verification.Whereable | common_verification_method.Whereable | food_offering_type.Whereable | food_offering_type_history.Whereable | food_vendor.Whereable | food_vendor_history.Whereable | historical_athena_encounter_raw.Whereable | iam_federated_credentials.Whereable | iam_identity.Whereable | iam_user.Whereable | incentive.Whereable | incentive_contract.Whereable | incentive_rule.Whereable | instacart_code.Whereable | instacart_code_order.Whereable | issue_report.Whereable | issue_report_type.Whereable | medallion_provider.Whereable | ontology_concept.Whereable | patient_attribute.Whereable | patient_attribute_option.Whereable | patient_fact.Whereable | patient_fact_source.Whereable | patient_payment_transaction.Whereable | patient_summary.Whereable | payer.Whereable | payer_enrollment.Whereable | payer_provider_schedulability.Whereable | payer_roster.Whereable | payment_eligibility_check.Whereable | payment_method_type.Whereable | provider_board_certificate.Whereable | provider_license.Whereable | provider_license_application.Whereable | provider_license_summary.Whereable | provider_program_enrollment.Whereable | provider_task.Whereable | reward.Whereable | reward_user.Whereable | schedule_appointment.Whereable | schedule_appointment_history.Whereable | schedule_appointment_type.Whereable | schedule_appointment_type_mapping.Whereable | schedule_consent.Whereable | schedule_department.Whereable | schedule_department_provider.Whereable | schedule_department_provider_licensed.Whereable | schedule_employer.Whereable | schedule_flow.Whereable | schedule_insurance.Whereable | schedule_patient.Whereable | schedule_patient_payment_method.Whereable | schedule_patient_survey.Whereable | schedule_provider.Whereable | schedule_referral.Whereable | schedule_referrer.Whereable | schedule_slot.Whereable | schedule_sponsor.Whereable | schedule_user.Whereable | schedule_user_patient.Whereable | state_credentialing_config.Whereable | sticky_note.Whereable | valid_provider_payer_enrollment.Whereable | wallet.Whereable | wallet_transaction.Whereable | workramp_contact.Whereable | workramp_contact_path.Whereable;
    export type Insertable = account_food_offering_vendor_mapping.Insertable | account_food_offering_vendor_mapping_history.Insertable | account_payment_method_type.Insertable | activity.Insertable | activity_user.Insertable | appointment_cancel_reason.Insertable | athena_api_auth.Insertable | billing_code.Insertable | billing_contract.Insertable | billing_rule.Insertable | billing_rule_history.Insertable | billing_service_facility.Insertable | billing_transaction.Insertable | clinical_encounter.Insertable | clinical_encounter_amendment.Insertable | clinical_encounter_history.Insertable | clinical_encounter_oversight.Insertable | clinical_encounter_screening_questionnaire.Insertable | common_verification.Insertable | common_verification_method.Insertable | food_offering_type.Insertable | food_offering_type_history.Insertable | food_vendor.Insertable | food_vendor_history.Insertable | historical_athena_encounter_raw.Insertable | iam_federated_credentials.Insertable | iam_identity.Insertable | iam_user.Insertable | incentive.Insertable | incentive_contract.Insertable | incentive_rule.Insertable | instacart_code.Insertable | instacart_code_order.Insertable | issue_report.Insertable | issue_report_type.Insertable | medallion_provider.Insertable | ontology_concept.Insertable | patient_attribute.Insertable | patient_attribute_option.Insertable | patient_fact.Insertable | patient_fact_source.Insertable | patient_payment_transaction.Insertable | patient_summary.Insertable | payer.Insertable | payer_enrollment.Insertable | payer_provider_schedulability.Insertable | payer_roster.Insertable | payment_eligibility_check.Insertable | payment_method_type.Insertable | provider_board_certificate.Insertable | provider_license.Insertable | provider_license_application.Insertable | provider_license_summary.Insertable | provider_program_enrollment.Insertable | provider_task.Insertable | reward.Insertable | reward_user.Insertable | schedule_appointment.Insertable | schedule_appointment_history.Insertable | schedule_appointment_type.Insertable | schedule_appointment_type_mapping.Insertable | schedule_consent.Insertable | schedule_department.Insertable | schedule_department_provider.Insertable | schedule_department_provider_licensed.Insertable | schedule_employer.Insertable | schedule_flow.Insertable | schedule_insurance.Insertable | schedule_patient.Insertable | schedule_patient_payment_method.Insertable | schedule_patient_survey.Insertable | schedule_provider.Insertable | schedule_referral.Insertable | schedule_referrer.Insertable | schedule_slot.Insertable | schedule_sponsor.Insertable | schedule_user.Insertable | schedule_user_patient.Insertable | state_credentialing_config.Insertable | sticky_note.Insertable | valid_provider_payer_enrollment.Insertable | wallet.Insertable | wallet_transaction.Insertable | workramp_contact.Insertable | workramp_contact_path.Insertable;
    export type Updatable = account_food_offering_vendor_mapping.Updatable | account_food_offering_vendor_mapping_history.Updatable | account_payment_method_type.Updatable | activity.Updatable | activity_user.Updatable | appointment_cancel_reason.Updatable | athena_api_auth.Updatable | billing_code.Updatable | billing_contract.Updatable | billing_rule.Updatable | billing_rule_history.Updatable | billing_service_facility.Updatable | billing_transaction.Updatable | clinical_encounter.Updatable | clinical_encounter_amendment.Updatable | clinical_encounter_history.Updatable | clinical_encounter_oversight.Updatable | clinical_encounter_screening_questionnaire.Updatable | common_verification.Updatable | common_verification_method.Updatable | food_offering_type.Updatable | food_offering_type_history.Updatable | food_vendor.Updatable | food_vendor_history.Updatable | historical_athena_encounter_raw.Updatable | iam_federated_credentials.Updatable | iam_identity.Updatable | iam_user.Updatable | incentive.Updatable | incentive_contract.Updatable | incentive_rule.Updatable | instacart_code.Updatable | instacart_code_order.Updatable | issue_report.Updatable | issue_report_type.Updatable | medallion_provider.Updatable | ontology_concept.Updatable | patient_attribute.Updatable | patient_attribute_option.Updatable | patient_fact.Updatable | patient_fact_source.Updatable | patient_payment_transaction.Updatable | patient_summary.Updatable | payer.Updatable | payer_enrollment.Updatable | payer_provider_schedulability.Updatable | payer_roster.Updatable | payment_eligibility_check.Updatable | payment_method_type.Updatable | provider_board_certificate.Updatable | provider_license.Updatable | provider_license_application.Updatable | provider_license_summary.Updatable | provider_program_enrollment.Updatable | provider_task.Updatable | reward.Updatable | reward_user.Updatable | schedule_appointment.Updatable | schedule_appointment_history.Updatable | schedule_appointment_type.Updatable | schedule_appointment_type_mapping.Updatable | schedule_consent.Updatable | schedule_department.Updatable | schedule_department_provider.Updatable | schedule_department_provider_licensed.Updatable | schedule_employer.Updatable | schedule_flow.Updatable | schedule_insurance.Updatable | schedule_patient.Updatable | schedule_patient_payment_method.Updatable | schedule_patient_survey.Updatable | schedule_provider.Updatable | schedule_referral.Updatable | schedule_referrer.Updatable | schedule_slot.Updatable | schedule_sponsor.Updatable | schedule_user.Updatable | schedule_user_patient.Updatable | state_credentialing_config.Updatable | sticky_note.Updatable | valid_provider_payer_enrollment.Updatable | wallet.Updatable | wallet_transaction.Updatable | workramp_contact.Updatable | workramp_contact_path.Updatable;
    export type UniqueIndex = account_food_offering_vendor_mapping.UniqueIndex | account_food_offering_vendor_mapping_history.UniqueIndex | account_payment_method_type.UniqueIndex | activity.UniqueIndex | activity_user.UniqueIndex | appointment_cancel_reason.UniqueIndex | athena_api_auth.UniqueIndex | billing_code.UniqueIndex | billing_contract.UniqueIndex | billing_rule.UniqueIndex | billing_rule_history.UniqueIndex | billing_service_facility.UniqueIndex | billing_transaction.UniqueIndex | clinical_encounter.UniqueIndex | clinical_encounter_amendment.UniqueIndex | clinical_encounter_history.UniqueIndex | clinical_encounter_oversight.UniqueIndex | clinical_encounter_screening_questionnaire.UniqueIndex | common_verification.UniqueIndex | common_verification_method.UniqueIndex | food_offering_type.UniqueIndex | food_offering_type_history.UniqueIndex | food_vendor.UniqueIndex | food_vendor_history.UniqueIndex | historical_athena_encounter_raw.UniqueIndex | iam_federated_credentials.UniqueIndex | iam_identity.UniqueIndex | iam_user.UniqueIndex | incentive.UniqueIndex | incentive_contract.UniqueIndex | incentive_rule.UniqueIndex | instacart_code.UniqueIndex | instacart_code_order.UniqueIndex | issue_report.UniqueIndex | issue_report_type.UniqueIndex | medallion_provider.UniqueIndex | ontology_concept.UniqueIndex | patient_attribute.UniqueIndex | patient_attribute_option.UniqueIndex | patient_fact.UniqueIndex | patient_fact_source.UniqueIndex | patient_payment_transaction.UniqueIndex | patient_summary.UniqueIndex | payer.UniqueIndex | payer_enrollment.UniqueIndex | payer_provider_schedulability.UniqueIndex | payer_roster.UniqueIndex | payment_eligibility_check.UniqueIndex | payment_method_type.UniqueIndex | provider_board_certificate.UniqueIndex | provider_license.UniqueIndex | provider_license_application.UniqueIndex | provider_license_summary.UniqueIndex | provider_program_enrollment.UniqueIndex | provider_task.UniqueIndex | reward.UniqueIndex | reward_user.UniqueIndex | schedule_appointment.UniqueIndex | schedule_appointment_history.UniqueIndex | schedule_appointment_type.UniqueIndex | schedule_appointment_type_mapping.UniqueIndex | schedule_consent.UniqueIndex | schedule_department.UniqueIndex | schedule_department_provider.UniqueIndex | schedule_department_provider_licensed.UniqueIndex | schedule_employer.UniqueIndex | schedule_flow.UniqueIndex | schedule_insurance.UniqueIndex | schedule_patient.UniqueIndex | schedule_patient_payment_method.UniqueIndex | schedule_patient_survey.UniqueIndex | schedule_provider.UniqueIndex | schedule_referral.UniqueIndex | schedule_referrer.UniqueIndex | schedule_slot.UniqueIndex | schedule_sponsor.UniqueIndex | schedule_user.UniqueIndex | schedule_user_patient.UniqueIndex | state_credentialing_config.UniqueIndex | sticky_note.UniqueIndex | valid_provider_payer_enrollment.UniqueIndex | wallet.UniqueIndex | wallet_transaction.UniqueIndex | workramp_contact.UniqueIndex | workramp_contact_path.UniqueIndex;
    export type Column = account_food_offering_vendor_mapping.Column | account_food_offering_vendor_mapping_history.Column | account_payment_method_type.Column | activity.Column | activity_user.Column | appointment_cancel_reason.Column | athena_api_auth.Column | billing_code.Column | billing_contract.Column | billing_rule.Column | billing_rule_history.Column | billing_service_facility.Column | billing_transaction.Column | clinical_encounter.Column | clinical_encounter_amendment.Column | clinical_encounter_history.Column | clinical_encounter_oversight.Column | clinical_encounter_screening_questionnaire.Column | common_verification.Column | common_verification_method.Column | food_offering_type.Column | food_offering_type_history.Column | food_vendor.Column | food_vendor_history.Column | historical_athena_encounter_raw.Column | iam_federated_credentials.Column | iam_identity.Column | iam_user.Column | incentive.Column | incentive_contract.Column | incentive_rule.Column | instacart_code.Column | instacart_code_order.Column | issue_report.Column | issue_report_type.Column | medallion_provider.Column | ontology_concept.Column | patient_attribute.Column | patient_attribute_option.Column | patient_fact.Column | patient_fact_source.Column | patient_payment_transaction.Column | patient_summary.Column | payer.Column | payer_enrollment.Column | payer_provider_schedulability.Column | payer_roster.Column | payment_eligibility_check.Column | payment_method_type.Column | provider_board_certificate.Column | provider_license.Column | provider_license_application.Column | provider_license_summary.Column | provider_program_enrollment.Column | provider_task.Column | reward.Column | reward_user.Column | schedule_appointment.Column | schedule_appointment_history.Column | schedule_appointment_type.Column | schedule_appointment_type_mapping.Column | schedule_consent.Column | schedule_department.Column | schedule_department_provider.Column | schedule_department_provider_licensed.Column | schedule_employer.Column | schedule_flow.Column | schedule_insurance.Column | schedule_patient.Column | schedule_patient_payment_method.Column | schedule_patient_survey.Column | schedule_provider.Column | schedule_referral.Column | schedule_referrer.Column | schedule_slot.Column | schedule_sponsor.Column | schedule_user.Column | schedule_user_patient.Column | state_credentialing_config.Column | sticky_note.Column | valid_provider_payer_enrollment.Column | wallet.Column | wallet_transaction.Column | workramp_contact.Column | workramp_contact_path.Column;
  
    export type AllBaseTables = [account_food_offering_vendor_mapping.Table, account_food_offering_vendor_mapping_history.Table, account_payment_method_type.Table, activity.Table, activity_user.Table, appointment_cancel_reason.Table, athena_api_auth.Table, billing_code.Table, billing_contract.Table, billing_rule.Table, billing_rule_history.Table, billing_service_facility.Table, billing_transaction.Table, clinical_encounter.Table, clinical_encounter_amendment.Table, clinical_encounter_history.Table, clinical_encounter_oversight.Table, clinical_encounter_screening_questionnaire.Table, common_verification.Table, common_verification_method.Table, food_offering_type.Table, food_offering_type_history.Table, food_vendor.Table, food_vendor_history.Table, historical_athena_encounter_raw.Table, iam_federated_credentials.Table, iam_identity.Table, iam_user.Table, incentive.Table, incentive_contract.Table, incentive_rule.Table, instacart_code.Table, instacart_code_order.Table, issue_report.Table, issue_report_type.Table, medallion_provider.Table, ontology_concept.Table, patient_attribute.Table, patient_attribute_option.Table, patient_fact.Table, patient_fact_source.Table, patient_payment_transaction.Table, patient_summary.Table, payer.Table, payer_enrollment.Table, payer_roster.Table, payment_eligibility_check.Table, payment_method_type.Table, provider_board_certificate.Table, provider_license.Table, provider_license_application.Table, provider_program_enrollment.Table, provider_task.Table, reward.Table, reward_user.Table, schedule_appointment.Table, schedule_appointment_history.Table, schedule_appointment_type.Table, schedule_appointment_type_mapping.Table, schedule_consent.Table, schedule_department.Table, schedule_department_provider.Table, schedule_employer.Table, schedule_flow.Table, schedule_insurance.Table, schedule_patient.Table, schedule_patient_payment_method.Table, schedule_patient_survey.Table, schedule_provider.Table, schedule_referral.Table, schedule_referrer.Table, schedule_slot.Table, schedule_sponsor.Table, schedule_user.Table, schedule_user_patient.Table, state_credentialing_config.Table, sticky_note.Table, wallet.Table, wallet_transaction.Table, workramp_contact.Table, workramp_contact_path.Table];
    export type AllForeignTables = [];
    export type AllViews = [payer_provider_schedulability.Table, provider_license_summary.Table, schedule_department_provider_licensed.Table, valid_provider_payer_enrollment.Table];
    export type AllMaterializedViews = [];
    export type AllTablesAndViews = [account_food_offering_vendor_mapping.Table, account_food_offering_vendor_mapping_history.Table, account_payment_method_type.Table, activity.Table, activity_user.Table, appointment_cancel_reason.Table, athena_api_auth.Table, billing_code.Table, billing_contract.Table, billing_rule.Table, billing_rule_history.Table, billing_service_facility.Table, billing_transaction.Table, clinical_encounter.Table, clinical_encounter_amendment.Table, clinical_encounter_history.Table, clinical_encounter_oversight.Table, clinical_encounter_screening_questionnaire.Table, common_verification.Table, common_verification_method.Table, food_offering_type.Table, food_offering_type_history.Table, food_vendor.Table, food_vendor_history.Table, historical_athena_encounter_raw.Table, iam_federated_credentials.Table, iam_identity.Table, iam_user.Table, incentive.Table, incentive_contract.Table, incentive_rule.Table, instacart_code.Table, instacart_code_order.Table, issue_report.Table, issue_report_type.Table, medallion_provider.Table, ontology_concept.Table, patient_attribute.Table, patient_attribute_option.Table, patient_fact.Table, patient_fact_source.Table, patient_payment_transaction.Table, patient_summary.Table, payer.Table, payer_enrollment.Table, payer_provider_schedulability.Table, payer_roster.Table, payment_eligibility_check.Table, payment_method_type.Table, provider_board_certificate.Table, provider_license.Table, provider_license_application.Table, provider_license_summary.Table, provider_program_enrollment.Table, provider_task.Table, reward.Table, reward_user.Table, schedule_appointment.Table, schedule_appointment_history.Table, schedule_appointment_type.Table, schedule_appointment_type_mapping.Table, schedule_consent.Table, schedule_department.Table, schedule_department_provider.Table, schedule_department_provider_licensed.Table, schedule_employer.Table, schedule_flow.Table, schedule_insurance.Table, schedule_patient.Table, schedule_patient_payment_method.Table, schedule_patient_survey.Table, schedule_provider.Table, schedule_referral.Table, schedule_referrer.Table, schedule_slot.Table, schedule_sponsor.Table, schedule_user.Table, schedule_user_patient.Table, state_credentialing_config.Table, sticky_note.Table, valid_provider_payer_enrollment.Table, wallet.Table, wallet_transaction.Table, workramp_contact.Table, workramp_contact_path.Table];
  }


  /* === schema: common === */

  export namespace common {
  
    /* --- enums --- */
  
    export type dnc_operation = 'DELETE' | 'INSERT' | 'UPDATE';
    export namespace every {
      export type dnc_operation = ['DELETE', 'INSERT', 'UPDATE'];
    }
    export type dnc_source = 'client' | 'foodsmart' | 'member';
    export namespace every {
      export type dnc_source = ['client', 'foodsmart', 'member'];
    }
  
    /* --- tables --- */
  
    /**
     * **common.account**
     * - Table in database
     */
    export namespace account {
      export type Table = 'common.account';
      export interface Selectable {
        /**
        * **common.account.account_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.account_account_id_seq'::regclass)`
        */
        account_id: number;
        /**
        * **common.account.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name: string;
        /**
        * **common.account.active**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        active: boolean;
        /**
        * **common.account.features**
        * - `_varchar` in database
        * - Nullable, no default
        */
        features: string[] | null;
        /**
        * **common.account.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **common.account.enrollment_url**
        * - `text` in database
        * - Nullable, no default
        */
        enrollment_url: string | null;
        /**
        * **common.account.efile**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        efile: boolean;
      }
      export interface JSONSelectable {
        /**
        * **common.account.account_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.account_account_id_seq'::regclass)`
        */
        account_id: number;
        /**
        * **common.account.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name: string;
        /**
        * **common.account.active**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        active: boolean;
        /**
        * **common.account.features**
        * - `_varchar` in database
        * - Nullable, no default
        */
        features: string[] | null;
        /**
        * **common.account.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **common.account.enrollment_url**
        * - `text` in database
        * - Nullable, no default
        */
        enrollment_url: string | null;
        /**
        * **common.account.efile**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        efile: boolean;
      }
      export interface Whereable {
        /**
        * **common.account.account_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.account_account_id_seq'::regclass)`
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.account.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.account.active**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        active?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.account.features**
        * - `_varchar` in database
        * - Nullable, no default
        */
        features?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.account.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.account.enrollment_url**
        * - `text` in database
        * - Nullable, no default
        */
        enrollment_url?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.account.efile**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        efile?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.account.account_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.account_account_id_seq'::regclass)`
        */
        account_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **common.account.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.account.active**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        active?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **common.account.features**
        * - `_varchar` in database
        * - Nullable, no default
        */
        features?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.account.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.account.enrollment_url**
        * - `text` in database
        * - Nullable, no default
        */
        enrollment_url?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.account.efile**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        efile?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.account.account_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.account_account_id_seq'::regclass)`
        */
        account_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.account.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.account.active**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        active?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.account.features**
        * - `_varchar` in database
        * - Nullable, no default
        */
        features?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.account.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.account.enrollment_url**
        * - `text` in database
        * - Nullable, no default
        */
        enrollment_url?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.account.efile**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        efile?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'account_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.account_membership**
     * - Table in database
     */
    export namespace account_membership {
      export type Table = 'common.account_membership';
      export interface Selectable {
        /**
        * **common.account_membership.account_membership_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.account_membership_account_membership_id_seq'::regclass)`
        */
        account_membership_id: number;
        /**
        * **common.account_membership.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id: number;
        /**
        * **common.account_membership.query**
        * - `jsonb` in database
        * - Nullable, no default
        */
        query: db.JSONValue | null;
        /**
        * **common.account_membership.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **common.account_membership.sql**
        * - `text` in database
        * - Nullable, no default
        */
        sql: string | null;
        /**
        * **common.account_membership.type**
        * - `text` in database
        * - Nullable, no default
        */
        type: string | null;
      }
      export interface JSONSelectable {
        /**
        * **common.account_membership.account_membership_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.account_membership_account_membership_id_seq'::regclass)`
        */
        account_membership_id: number;
        /**
        * **common.account_membership.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id: number;
        /**
        * **common.account_membership.query**
        * - `jsonb` in database
        * - Nullable, no default
        */
        query: db.JSONValue | null;
        /**
        * **common.account_membership.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **common.account_membership.sql**
        * - `text` in database
        * - Nullable, no default
        */
        sql: string | null;
        /**
        * **common.account_membership.type**
        * - `text` in database
        * - Nullable, no default
        */
        type: string | null;
      }
      export interface Whereable {
        /**
        * **common.account_membership.account_membership_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.account_membership_account_membership_id_seq'::regclass)`
        */
        account_membership_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.account_membership.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.account_membership.query**
        * - `jsonb` in database
        * - Nullable, no default
        */
        query?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.account_membership.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.account_membership.sql**
        * - `text` in database
        * - Nullable, no default
        */
        sql?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.account_membership.type**
        * - `text` in database
        * - Nullable, no default
        */
        type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.account_membership.account_membership_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.account_membership_account_membership_id_seq'::regclass)`
        */
        account_membership_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **common.account_membership.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.account_membership.query**
        * - `jsonb` in database
        * - Nullable, no default
        */
        query?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.account_membership.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.account_membership.sql**
        * - `text` in database
        * - Nullable, no default
        */
        sql?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.account_membership.type**
        * - `text` in database
        * - Nullable, no default
        */
        type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.account_membership.account_membership_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.account_membership_account_membership_id_seq'::regclass)`
        */
        account_membership_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.account_membership.account_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.account_membership.query**
        * - `jsonb` in database
        * - Nullable, no default
        */
        query?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.account_membership.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.account_membership.sql**
        * - `text` in database
        * - Nullable, no default
        */
        sql?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.account_membership.type**
        * - `text` in database
        * - Nullable, no default
        */
        type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'account_membership_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.company_holiday**
     * - Table in database
     */
    export namespace company_holiday {
      export type Table = 'common.company_holiday';
      export interface Selectable {
        /**
        * **common.company_holiday.holiday_id**
        * - `int4` in database
        * - Generated column
        */
        holiday_id: number;
        /**
        * **common.company_holiday.calendar_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        calendar_date: Date;
        /**
        * **common.company_holiday.reason**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        reason: string;
      }
      export interface JSONSelectable {
        /**
        * **common.company_holiday.holiday_id**
        * - `int4` in database
        * - Generated column
        */
        holiday_id: number;
        /**
        * **common.company_holiday.calendar_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        calendar_date: db.DateString;
        /**
        * **common.company_holiday.reason**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        reason: string;
      }
      export interface Whereable {
        /**
        * **common.company_holiday.holiday_id**
        * - `int4` in database
        * - Generated column
        */
        holiday_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.company_holiday.calendar_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        calendar_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.company_holiday.reason**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        reason?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.company_holiday.calendar_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        calendar_date: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment;
        /**
        * **common.company_holiday.reason**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        reason: string | db.Parameter<string> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.company_holiday.calendar_date**
        * - `date` in database
        * - `NOT NULL`, no default
        */
        calendar_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment>;
        /**
        * **common.company_holiday.reason**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        reason?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      }
      export type UniqueIndex = 'company_holiday_pkey' | 'unique_calendar_date';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.dnc_audit_email**
     * - Table in database
     */
    export namespace dnc_audit_email {
      export type Table = 'common.dnc_audit_email';
      export interface Selectable {
        /**
        * **common.dnc_audit_email.audit_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.dnc_audit_email_audit_id_seq'::regclass)`
        */
        audit_id: number;
        /**
        * **common.dnc_audit_email.email**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        email: string;
        /**
        * **common.dnc_audit_email.operation**
        * - `dnc_operation` in database
        * - `NOT NULL`, no default
        */
        operation: dnc_operation;
        /**
        * **common.dnc_audit_email.old_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        old_data: db.JSONValue | null;
        /**
        * **common.dnc_audit_email.new_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        new_data: db.JSONValue | null;
        /**
        * **common.dnc_audit_email.changed_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        changed_at: Date;
        /**
        * **common.dnc_audit_email.changed_by**
        * - `text` in database
        * - Nullable, no default
        */
        changed_by: string | null;
      }
      export interface JSONSelectable {
        /**
        * **common.dnc_audit_email.audit_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.dnc_audit_email_audit_id_seq'::regclass)`
        */
        audit_id: number;
        /**
        * **common.dnc_audit_email.email**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        email: string;
        /**
        * **common.dnc_audit_email.operation**
        * - `dnc_operation` in database
        * - `NOT NULL`, no default
        */
        operation: dnc_operation;
        /**
        * **common.dnc_audit_email.old_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        old_data: db.JSONValue | null;
        /**
        * **common.dnc_audit_email.new_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        new_data: db.JSONValue | null;
        /**
        * **common.dnc_audit_email.changed_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        changed_at: db.TimestampString;
        /**
        * **common.dnc_audit_email.changed_by**
        * - `text` in database
        * - Nullable, no default
        */
        changed_by: string | null;
      }
      export interface Whereable {
        /**
        * **common.dnc_audit_email.audit_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.dnc_audit_email_audit_id_seq'::regclass)`
        */
        audit_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_email.email**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_email.operation**
        * - `dnc_operation` in database
        * - `NOT NULL`, no default
        */
        operation?: dnc_operation | db.Parameter<dnc_operation> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, dnc_operation | db.Parameter<dnc_operation> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_email.old_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        old_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_email.new_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        new_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_email.changed_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        changed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_email.changed_by**
        * - `text` in database
        * - Nullable, no default
        */
        changed_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.dnc_audit_email.audit_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.dnc_audit_email_audit_id_seq'::regclass)`
        */
        audit_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_audit_email.email**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        email: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.dnc_audit_email.operation**
        * - `dnc_operation` in database
        * - `NOT NULL`, no default
        */
        operation: dnc_operation | db.Parameter<dnc_operation> | db.SQLFragment;
        /**
        * **common.dnc_audit_email.old_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        old_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_audit_email.new_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        new_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_audit_email.changed_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        changed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_audit_email.changed_by**
        * - `text` in database
        * - Nullable, no default
        */
        changed_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.dnc_audit_email.audit_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.dnc_audit_email_audit_id_seq'::regclass)`
        */
        audit_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_audit_email.email**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.dnc_audit_email.operation**
        * - `dnc_operation` in database
        * - `NOT NULL`, no default
        */
        operation?: dnc_operation | db.Parameter<dnc_operation> | db.SQLFragment | db.SQLFragment<any, dnc_operation | db.Parameter<dnc_operation> | db.SQLFragment>;
        /**
        * **common.dnc_audit_email.old_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        old_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_audit_email.new_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        new_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_audit_email.changed_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        changed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_audit_email.changed_by**
        * - `text` in database
        * - Nullable, no default
        */
        changed_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'dnc_audit_email_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.dnc_audit_identity**
     * - Table in database
     */
    export namespace dnc_audit_identity {
      export type Table = 'common.dnc_audit_identity';
      export interface Selectable {
        /**
        * **common.dnc_audit_identity.audit_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.dnc_audit_identity_audit_id_seq'::regclass)`
        */
        audit_id: number;
        /**
        * **common.dnc_audit_identity.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id: number | null;
        /**
        * **common.dnc_audit_identity.operation**
        * - `dnc_operation` in database
        * - `NOT NULL`, no default
        */
        operation: dnc_operation;
        /**
        * **common.dnc_audit_identity.old_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        old_data: db.JSONValue | null;
        /**
        * **common.dnc_audit_identity.new_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        new_data: db.JSONValue | null;
        /**
        * **common.dnc_audit_identity.changed_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        changed_at: Date;
        /**
        * **common.dnc_audit_identity.changed_by**
        * - `text` in database
        * - Nullable, no default
        */
        changed_by: string | null;
      }
      export interface JSONSelectable {
        /**
        * **common.dnc_audit_identity.audit_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.dnc_audit_identity_audit_id_seq'::regclass)`
        */
        audit_id: number;
        /**
        * **common.dnc_audit_identity.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id: number | null;
        /**
        * **common.dnc_audit_identity.operation**
        * - `dnc_operation` in database
        * - `NOT NULL`, no default
        */
        operation: dnc_operation;
        /**
        * **common.dnc_audit_identity.old_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        old_data: db.JSONValue | null;
        /**
        * **common.dnc_audit_identity.new_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        new_data: db.JSONValue | null;
        /**
        * **common.dnc_audit_identity.changed_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        changed_at: db.TimestampString;
        /**
        * **common.dnc_audit_identity.changed_by**
        * - `text` in database
        * - Nullable, no default
        */
        changed_by: string | null;
      }
      export interface Whereable {
        /**
        * **common.dnc_audit_identity.audit_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.dnc_audit_identity_audit_id_seq'::regclass)`
        */
        audit_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_identity.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_identity.operation**
        * - `dnc_operation` in database
        * - `NOT NULL`, no default
        */
        operation?: dnc_operation | db.Parameter<dnc_operation> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, dnc_operation | db.Parameter<dnc_operation> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_identity.old_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        old_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_identity.new_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        new_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_identity.changed_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        changed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_identity.changed_by**
        * - `text` in database
        * - Nullable, no default
        */
        changed_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.dnc_audit_identity.audit_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.dnc_audit_identity_audit_id_seq'::regclass)`
        */
        audit_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_audit_identity.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_audit_identity.operation**
        * - `dnc_operation` in database
        * - `NOT NULL`, no default
        */
        operation: dnc_operation | db.Parameter<dnc_operation> | db.SQLFragment;
        /**
        * **common.dnc_audit_identity.old_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        old_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_audit_identity.new_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        new_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_audit_identity.changed_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        changed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_audit_identity.changed_by**
        * - `text` in database
        * - Nullable, no default
        */
        changed_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.dnc_audit_identity.audit_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.dnc_audit_identity_audit_id_seq'::regclass)`
        */
        audit_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_audit_identity.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_audit_identity.operation**
        * - `dnc_operation` in database
        * - `NOT NULL`, no default
        */
        operation?: dnc_operation | db.Parameter<dnc_operation> | db.SQLFragment | db.SQLFragment<any, dnc_operation | db.Parameter<dnc_operation> | db.SQLFragment>;
        /**
        * **common.dnc_audit_identity.old_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        old_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_audit_identity.new_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        new_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_audit_identity.changed_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        changed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_audit_identity.changed_by**
        * - `text` in database
        * - Nullable, no default
        */
        changed_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'dnc_audit_identity_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.dnc_audit_phone**
     * - Table in database
     */
    export namespace dnc_audit_phone {
      export type Table = 'common.dnc_audit_phone';
      export interface Selectable {
        /**
        * **common.dnc_audit_phone.audit_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.dnc_audit_phone_audit_id_seq'::regclass)`
        */
        audit_id: number;
        /**
        * **common.dnc_audit_phone.phone**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        phone: string;
        /**
        * **common.dnc_audit_phone.operation**
        * - `dnc_operation` in database
        * - `NOT NULL`, no default
        */
        operation: dnc_operation;
        /**
        * **common.dnc_audit_phone.old_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        old_data: db.JSONValue | null;
        /**
        * **common.dnc_audit_phone.new_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        new_data: db.JSONValue | null;
        /**
        * **common.dnc_audit_phone.changed_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        changed_at: Date;
        /**
        * **common.dnc_audit_phone.changed_by**
        * - `text` in database
        * - Nullable, no default
        */
        changed_by: string | null;
      }
      export interface JSONSelectable {
        /**
        * **common.dnc_audit_phone.audit_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.dnc_audit_phone_audit_id_seq'::regclass)`
        */
        audit_id: number;
        /**
        * **common.dnc_audit_phone.phone**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        phone: string;
        /**
        * **common.dnc_audit_phone.operation**
        * - `dnc_operation` in database
        * - `NOT NULL`, no default
        */
        operation: dnc_operation;
        /**
        * **common.dnc_audit_phone.old_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        old_data: db.JSONValue | null;
        /**
        * **common.dnc_audit_phone.new_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        new_data: db.JSONValue | null;
        /**
        * **common.dnc_audit_phone.changed_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        changed_at: db.TimestampString;
        /**
        * **common.dnc_audit_phone.changed_by**
        * - `text` in database
        * - Nullable, no default
        */
        changed_by: string | null;
      }
      export interface Whereable {
        /**
        * **common.dnc_audit_phone.audit_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.dnc_audit_phone_audit_id_seq'::regclass)`
        */
        audit_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_phone.phone**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        phone?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_phone.operation**
        * - `dnc_operation` in database
        * - `NOT NULL`, no default
        */
        operation?: dnc_operation | db.Parameter<dnc_operation> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, dnc_operation | db.Parameter<dnc_operation> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_phone.old_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        old_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_phone.new_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        new_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_phone.changed_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        changed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_audit_phone.changed_by**
        * - `text` in database
        * - Nullable, no default
        */
        changed_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.dnc_audit_phone.audit_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.dnc_audit_phone_audit_id_seq'::regclass)`
        */
        audit_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_audit_phone.phone**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        phone: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.dnc_audit_phone.operation**
        * - `dnc_operation` in database
        * - `NOT NULL`, no default
        */
        operation: dnc_operation | db.Parameter<dnc_operation> | db.SQLFragment;
        /**
        * **common.dnc_audit_phone.old_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        old_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_audit_phone.new_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        new_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_audit_phone.changed_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        changed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_audit_phone.changed_by**
        * - `text` in database
        * - Nullable, no default
        */
        changed_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.dnc_audit_phone.audit_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.dnc_audit_phone_audit_id_seq'::regclass)`
        */
        audit_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_audit_phone.phone**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        phone?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.dnc_audit_phone.operation**
        * - `dnc_operation` in database
        * - `NOT NULL`, no default
        */
        operation?: dnc_operation | db.Parameter<dnc_operation> | db.SQLFragment | db.SQLFragment<any, dnc_operation | db.Parameter<dnc_operation> | db.SQLFragment>;
        /**
        * **common.dnc_audit_phone.old_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        old_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_audit_phone.new_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        new_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_audit_phone.changed_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        changed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_audit_phone.changed_by**
        * - `text` in database
        * - Nullable, no default
        */
        changed_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'dnc_audit_phone_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.dnc_entry_email**
     * - Table in database
     */
    export namespace dnc_entry_email {
      export type Table = 'common.dnc_entry_email';
      export interface Selectable {
        /**
        * **common.dnc_entry_email.email**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        email: string;
        /**
        * **common.dnc_entry_email.optout_channel_email**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_email: boolean;
        /**
        * **common.dnc_entry_email.source**
        * - `dnc_source` in database
        * - `NOT NULL`, no default
        */
        source: dnc_source;
        /**
        * **common.dnc_entry_email.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **common.dnc_entry_email.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by: string | null;
        /**
        * **common.dnc_entry_email.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
        /**
        * **common.dnc_entry_email.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by: string | null;
      }
      export interface JSONSelectable {
        /**
        * **common.dnc_entry_email.email**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        email: string;
        /**
        * **common.dnc_entry_email.optout_channel_email**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_email: boolean;
        /**
        * **common.dnc_entry_email.source**
        * - `dnc_source` in database
        * - `NOT NULL`, no default
        */
        source: dnc_source;
        /**
        * **common.dnc_entry_email.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **common.dnc_entry_email.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by: string | null;
        /**
        * **common.dnc_entry_email.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
        /**
        * **common.dnc_entry_email.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by: string | null;
      }
      export interface Whereable {
        /**
        * **common.dnc_entry_email.email**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_email.optout_channel_email**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_email?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_email.source**
        * - `dnc_source` in database
        * - `NOT NULL`, no default
        */
        source?: dnc_source | db.Parameter<dnc_source> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, dnc_source | db.Parameter<dnc_source> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_email.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_email.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_email.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_email.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.dnc_entry_email.email**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        email: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.dnc_entry_email.optout_channel_email**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_email?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_entry_email.source**
        * - `dnc_source` in database
        * - `NOT NULL`, no default
        */
        source: dnc_source | db.Parameter<dnc_source> | db.SQLFragment;
        /**
        * **common.dnc_entry_email.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_entry_email.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_entry_email.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_entry_email.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.dnc_entry_email.email**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.dnc_entry_email.optout_channel_email**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_email?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_entry_email.source**
        * - `dnc_source` in database
        * - `NOT NULL`, no default
        */
        source?: dnc_source | db.Parameter<dnc_source> | db.SQLFragment | db.SQLFragment<any, dnc_source | db.Parameter<dnc_source> | db.SQLFragment>;
        /**
        * **common.dnc_entry_email.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_entry_email.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_entry_email.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_entry_email.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'dnc_entry_email_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.dnc_entry_identity**
     * - Table in database
     */
    export namespace dnc_entry_identity {
      export type Table = 'common.dnc_entry_identity';
      export interface Selectable {
        /**
        * **common.dnc_entry_identity.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number;
        /**
        * **common.dnc_entry_identity.optout_channel_voice**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_voice: boolean;
        /**
        * **common.dnc_entry_identity.optout_channel_sms**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_sms: boolean;
        /**
        * **common.dnc_entry_identity.optout_channel_email**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_email: boolean;
        /**
        * **common.dnc_entry_identity.source**
        * - `dnc_source` in database
        * - `NOT NULL`, no default
        */
        source: dnc_source;
        /**
        * **common.dnc_entry_identity.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **common.dnc_entry_identity.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by: string | null;
        /**
        * **common.dnc_entry_identity.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
        /**
        * **common.dnc_entry_identity.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by: string | null;
      }
      export interface JSONSelectable {
        /**
        * **common.dnc_entry_identity.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number;
        /**
        * **common.dnc_entry_identity.optout_channel_voice**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_voice: boolean;
        /**
        * **common.dnc_entry_identity.optout_channel_sms**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_sms: boolean;
        /**
        * **common.dnc_entry_identity.optout_channel_email**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_email: boolean;
        /**
        * **common.dnc_entry_identity.source**
        * - `dnc_source` in database
        * - `NOT NULL`, no default
        */
        source: dnc_source;
        /**
        * **common.dnc_entry_identity.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **common.dnc_entry_identity.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by: string | null;
        /**
        * **common.dnc_entry_identity.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
        /**
        * **common.dnc_entry_identity.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by: string | null;
      }
      export interface Whereable {
        /**
        * **common.dnc_entry_identity.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_identity.optout_channel_voice**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_voice?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_identity.optout_channel_sms**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_sms?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_identity.optout_channel_email**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_email?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_identity.source**
        * - `dnc_source` in database
        * - `NOT NULL`, no default
        */
        source?: dnc_source | db.Parameter<dnc_source> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, dnc_source | db.Parameter<dnc_source> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_identity.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_identity.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_identity.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_identity.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.dnc_entry_identity.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.dnc_entry_identity.optout_channel_voice**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_voice?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_entry_identity.optout_channel_sms**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_sms?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_entry_identity.optout_channel_email**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_email?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_entry_identity.source**
        * - `dnc_source` in database
        * - `NOT NULL`, no default
        */
        source: dnc_source | db.Parameter<dnc_source> | db.SQLFragment;
        /**
        * **common.dnc_entry_identity.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_entry_identity.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_entry_identity.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_entry_identity.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.dnc_entry_identity.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.dnc_entry_identity.optout_channel_voice**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_voice?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_entry_identity.optout_channel_sms**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_sms?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_entry_identity.optout_channel_email**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_email?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_entry_identity.source**
        * - `dnc_source` in database
        * - `NOT NULL`, no default
        */
        source?: dnc_source | db.Parameter<dnc_source> | db.SQLFragment | db.SQLFragment<any, dnc_source | db.Parameter<dnc_source> | db.SQLFragment>;
        /**
        * **common.dnc_entry_identity.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_entry_identity.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_entry_identity.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_entry_identity.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'dnc_entry_identity_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.dnc_entry_phone**
     * - Table in database
     */
    export namespace dnc_entry_phone {
      export type Table = 'common.dnc_entry_phone';
      export interface Selectable {
        /**
        * **common.dnc_entry_phone.phone**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        phone: string;
        /**
        * **common.dnc_entry_phone.optout_channel_voice**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_voice: boolean;
        /**
        * **common.dnc_entry_phone.optout_channel_sms**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_sms: boolean;
        /**
        * **common.dnc_entry_phone.source**
        * - `dnc_source` in database
        * - `NOT NULL`, no default
        */
        source: dnc_source;
        /**
        * **common.dnc_entry_phone.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **common.dnc_entry_phone.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by: string | null;
        /**
        * **common.dnc_entry_phone.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
        /**
        * **common.dnc_entry_phone.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by: string | null;
      }
      export interface JSONSelectable {
        /**
        * **common.dnc_entry_phone.phone**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        phone: string;
        /**
        * **common.dnc_entry_phone.optout_channel_voice**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_voice: boolean;
        /**
        * **common.dnc_entry_phone.optout_channel_sms**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_sms: boolean;
        /**
        * **common.dnc_entry_phone.source**
        * - `dnc_source` in database
        * - `NOT NULL`, no default
        */
        source: dnc_source;
        /**
        * **common.dnc_entry_phone.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **common.dnc_entry_phone.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by: string | null;
        /**
        * **common.dnc_entry_phone.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
        /**
        * **common.dnc_entry_phone.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by: string | null;
      }
      export interface Whereable {
        /**
        * **common.dnc_entry_phone.phone**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        phone?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_phone.optout_channel_voice**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_voice?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_phone.optout_channel_sms**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_sms?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_phone.source**
        * - `dnc_source` in database
        * - `NOT NULL`, no default
        */
        source?: dnc_source | db.Parameter<dnc_source> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, dnc_source | db.Parameter<dnc_source> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_phone.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_phone.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_phone.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_entry_phone.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.dnc_entry_phone.phone**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        phone: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.dnc_entry_phone.optout_channel_voice**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_voice?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_entry_phone.optout_channel_sms**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_sms?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_entry_phone.source**
        * - `dnc_source` in database
        * - `NOT NULL`, no default
        */
        source: dnc_source | db.Parameter<dnc_source> | db.SQLFragment;
        /**
        * **common.dnc_entry_phone.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_entry_phone.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_entry_phone.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.dnc_entry_phone.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.dnc_entry_phone.phone**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        phone?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.dnc_entry_phone.optout_channel_voice**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_voice?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_entry_phone.optout_channel_sms**
        * - `bool` in database
        * - `NOT NULL`, default: `true`
        */
        optout_channel_sms?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_entry_phone.source**
        * - `dnc_source` in database
        * - `NOT NULL`, no default
        */
        source?: dnc_source | db.Parameter<dnc_source> | db.SQLFragment | db.SQLFragment<any, dnc_source | db.Parameter<dnc_source> | db.SQLFragment>;
        /**
        * **common.dnc_entry_phone.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_entry_phone.created_by**
        * - `text` in database
        * - Nullable, no default
        */
        created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_entry_phone.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.dnc_entry_phone.updated_by**
        * - `text` in database
        * - Nullable, no default
        */
        updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'dnc_entry_phone_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.dnc_list_email**
     * - Materialized view in database
     */
    export namespace dnc_list_email {
      export type Table = 'common.dnc_list_email';
      export interface Selectable {
        /**
        * **common.dnc_list_email.email**
        * - `text` in database
        * - Materialized view column
        */
        email: string | null;
        /**
        * **common.dnc_list_email.identity_ids**
        * - `_int4` in database
        * - Materialized view column
        */
        identity_ids: number[] | null;
        /**
        * **common.dnc_list_email.optout_channel_email**
        * - `bool` in database
        * - Materialized view column
        */
        optout_channel_email: boolean | null;
        /**
        * **common.dnc_list_email.created_at**
        * - `timestamp` in database
        * - Materialized view column
        */
        created_at: Date | null;
        /**
        * **common.dnc_list_email.updated_at**
        * - `timestamp` in database
        * - Materialized view column
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **common.dnc_list_email.email**
        * - `text` in database
        * - Materialized view column
        */
        email: string | null;
        /**
        * **common.dnc_list_email.identity_ids**
        * - `_int4` in database
        * - Materialized view column
        */
        identity_ids: number[] | null;
        /**
        * **common.dnc_list_email.optout_channel_email**
        * - `bool` in database
        * - Materialized view column
        */
        optout_channel_email: boolean | null;
        /**
        * **common.dnc_list_email.created_at**
        * - `timestamp` in database
        * - Materialized view column
        */
        created_at: db.TimestampString | null;
        /**
        * **common.dnc_list_email.updated_at**
        * - `timestamp` in database
        * - Materialized view column
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **common.dnc_list_email.email**
        * - `text` in database
        * - Materialized view column
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_list_email.identity_ids**
        * - `_int4` in database
        * - Materialized view column
        */
        identity_ids?: number[] | db.Parameter<number[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number[] | db.Parameter<number[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_list_email.optout_channel_email**
        * - `bool` in database
        * - Materialized view column
        */
        optout_channel_email?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_list_email.created_at**
        * - `timestamp` in database
        * - Materialized view column
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_list_email.updated_at**
        * - `timestamp` in database
        * - Materialized view column
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        [key: string]: never;
      }
      export interface Updatable {
        [key: string]: never;
      }
      export type UniqueIndex = 'dnc_list_email_email_idx';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.dnc_list_phone**
     * - Materialized view in database
     */
    export namespace dnc_list_phone {
      export type Table = 'common.dnc_list_phone';
      export interface Selectable {
        /**
        * **common.dnc_list_phone.phone**
        * - `text` in database
        * - Materialized view column
        */
        phone: string | null;
        /**
        * **common.dnc_list_phone.identity_ids**
        * - `_int4` in database
        * - Materialized view column
        */
        identity_ids: number[] | null;
        /**
        * **common.dnc_list_phone.optout_channel_voice**
        * - `bool` in database
        * - Materialized view column
        */
        optout_channel_voice: boolean | null;
        /**
        * **common.dnc_list_phone.optout_channel_sms**
        * - `bool` in database
        * - Materialized view column
        */
        optout_channel_sms: boolean | null;
        /**
        * **common.dnc_list_phone.created_at**
        * - `timestamp` in database
        * - Materialized view column
        */
        created_at: Date | null;
        /**
        * **common.dnc_list_phone.updated_at**
        * - `timestamp` in database
        * - Materialized view column
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **common.dnc_list_phone.phone**
        * - `text` in database
        * - Materialized view column
        */
        phone: string | null;
        /**
        * **common.dnc_list_phone.identity_ids**
        * - `_int4` in database
        * - Materialized view column
        */
        identity_ids: number[] | null;
        /**
        * **common.dnc_list_phone.optout_channel_voice**
        * - `bool` in database
        * - Materialized view column
        */
        optout_channel_voice: boolean | null;
        /**
        * **common.dnc_list_phone.optout_channel_sms**
        * - `bool` in database
        * - Materialized view column
        */
        optout_channel_sms: boolean | null;
        /**
        * **common.dnc_list_phone.created_at**
        * - `timestamp` in database
        * - Materialized view column
        */
        created_at: db.TimestampString | null;
        /**
        * **common.dnc_list_phone.updated_at**
        * - `timestamp` in database
        * - Materialized view column
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **common.dnc_list_phone.phone**
        * - `text` in database
        * - Materialized view column
        */
        phone?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_list_phone.identity_ids**
        * - `_int4` in database
        * - Materialized view column
        */
        identity_ids?: number[] | db.Parameter<number[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number[] | db.Parameter<number[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_list_phone.optout_channel_voice**
        * - `bool` in database
        * - Materialized view column
        */
        optout_channel_voice?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_list_phone.optout_channel_sms**
        * - `bool` in database
        * - Materialized view column
        */
        optout_channel_sms?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_list_phone.created_at**
        * - `timestamp` in database
        * - Materialized view column
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.dnc_list_phone.updated_at**
        * - `timestamp` in database
        * - Materialized view column
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        [key: string]: never;
      }
      export interface Updatable {
        [key: string]: never;
      }
      export type UniqueIndex = 'dnc_list_phone_optout_channel_sms_idx' | 'dnc_list_phone_optout_channel_voice_idx' | 'dnc_list_phone_phone_idx';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.eligibility_member**
     * - Table in database
     */
    export namespace eligibility_member {
      export type Table = 'common.eligibility_member';
      export interface Selectable {
        /**
        * **common.eligibility_member.eligibility_id**
        * - `int4` in database
        * - Generated column
        */
        eligibility_id: number;
        /**
        * **common.eligibility_member.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id: number | null;
        /**
        * **common.eligibility_member.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id: number | null;
        /**
        * **common.eligibility_member.external_member_id**
        * - `text` in database
        * - Nullable, no default
        */
        external_member_id: string | null;
        /**
        * **common.eligibility_member.eligibility_effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_effective_date: Date | null;
        /**
        * **common.eligibility_member.eligibility_termination_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_termination_date: Date | null;
        /**
        * **common.eligibility_member.eligibility_added_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_added_date: Date | null;
        /**
        * **common.eligibility_member.eligibility_removed_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_removed_date: Date | null;
        /**
        * **common.eligibility_member.demographic_first_name**
        * - `text` in database
        * - Nullable, no default
        */
        demographic_first_name: string | null;
        /**
        * **common.eligibility_member.demographic_last_name**
        * - `text` in database
        * - Nullable, no default
        */
        demographic_last_name: string | null;
        /**
        * **common.eligibility_member.demographic_dob**
        * - `date` in database
        * - Nullable, no default
        */
        demographic_dob: Date | null;
        /**
        * **common.eligibility_member.demographic_lang**
        * - `varchar` in database
        * - Nullable, no default
        */
        demographic_lang: string | null;
        /**
        * **common.eligibility_member.demographic_gender**
        * - `text` in database
        * - Nullable, no default
        */
        demographic_gender: string | null;
        /**
        * **common.eligibility_member.contact_phone**
        * - `text` in database
        * - Nullable, no default
        */
        contact_phone: string | null;
        /**
        * **common.eligibility_member.contact_phone_mobile**
        * - `text` in database
        * - Nullable, no default
        */
        contact_phone_mobile: string | null;
        /**
        * **common.eligibility_member.contact_phone_home**
        * - `text` in database
        * - Nullable, no default
        */
        contact_phone_home: string | null;
        /**
        * **common.eligibility_member.contact_email**
        * - `text` in database
        * - Nullable, no default
        */
        contact_email: string | null;
        /**
        * **common.eligibility_member.location_address_1**
        * - `text` in database
        * - Nullable, no default
        */
        location_address_1: string | null;
        /**
        * **common.eligibility_member.location_address_2**
        * - `text` in database
        * - Nullable, no default
        */
        location_address_2: string | null;
        /**
        * **common.eligibility_member.location_city**
        * - `text` in database
        * - Nullable, no default
        */
        location_city: string | null;
        /**
        * **common.eligibility_member.location_state**
        * - `text` in database
        * - Nullable, no default
        */
        location_state: string | null;
        /**
        * **common.eligibility_member.location_zipcode**
        * - `text` in database
        * - Nullable, no default
        */
        location_zipcode: string | null;
        /**
        * **common.eligibility_member.insurance_group_id**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_group_id: string | null;
        /**
        * **common.eligibility_member.insurance_policy_id**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_policy_id: string | null;
        /**
        * **common.eligibility_member.insurance_effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        insurance_effective_date: Date | null;
        /**
        * **common.eligibility_member.insurance_termination_date**
        * - `date` in database
        * - Nullable, no default
        */
        insurance_termination_date: Date | null;
        /**
        * **common.eligibility_member.insurance_carrier_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_carrier_name: string | null;
        /**
        * **common.eligibility_member.insurance_plan_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_plan_name: string | null;
        /**
        * **common.eligibility_member.insurance_plan_tier**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_plan_tier: string | null;
        /**
        * **common.eligibility_member.insurance_lob**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_lob: string | null;
        /**
        * **common.eligibility_member.insurance_is_primary**
        * - `bool` in database
        * - Nullable, no default
        */
        insurance_is_primary: boolean | null;
        /**
        * **common.eligibility_member.insurance_relationship**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_relationship: string | null;
        /**
        * **common.eligibility_member.insurance_subscriber_policy_id**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_policy_id: string | null;
        /**
        * **common.eligibility_member.insurance_subscriber_first_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_first_name: string | null;
        /**
        * **common.eligibility_member.insurance_subscriber_last_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_last_name: string | null;
        /**
        * **common.eligibility_member.insurance_subscriber_dob**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_dob: string | null;
        /**
        * **common.eligibility_member.insurance_subscriber_gender**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_gender: string | null;
        /**
        * **common.eligibility_member.comm_optout_email**
        * - `bool` in database
        * - Nullable, no default
        */
        comm_optout_email: boolean | null;
        /**
        * **common.eligibility_member.comm_optout_phone**
        * - `bool` in database
        * - Nullable, no default
        */
        comm_optout_phone: boolean | null;
        /**
        * **common.eligibility_member.comm_preference**
        * - `text` in database
        * - Nullable, no default
        */
        comm_preference: string | null;
        /**
        * **common.eligibility_member.source_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        source_data: db.JSONValue | null;
      }
      export interface JSONSelectable {
        /**
        * **common.eligibility_member.eligibility_id**
        * - `int4` in database
        * - Generated column
        */
        eligibility_id: number;
        /**
        * **common.eligibility_member.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id: number | null;
        /**
        * **common.eligibility_member.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id: number | null;
        /**
        * **common.eligibility_member.external_member_id**
        * - `text` in database
        * - Nullable, no default
        */
        external_member_id: string | null;
        /**
        * **common.eligibility_member.eligibility_effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_effective_date: db.DateString | null;
        /**
        * **common.eligibility_member.eligibility_termination_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_termination_date: db.DateString | null;
        /**
        * **common.eligibility_member.eligibility_added_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_added_date: db.DateString | null;
        /**
        * **common.eligibility_member.eligibility_removed_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_removed_date: db.DateString | null;
        /**
        * **common.eligibility_member.demographic_first_name**
        * - `text` in database
        * - Nullable, no default
        */
        demographic_first_name: string | null;
        /**
        * **common.eligibility_member.demographic_last_name**
        * - `text` in database
        * - Nullable, no default
        */
        demographic_last_name: string | null;
        /**
        * **common.eligibility_member.demographic_dob**
        * - `date` in database
        * - Nullable, no default
        */
        demographic_dob: db.DateString | null;
        /**
        * **common.eligibility_member.demographic_lang**
        * - `varchar` in database
        * - Nullable, no default
        */
        demographic_lang: string | null;
        /**
        * **common.eligibility_member.demographic_gender**
        * - `text` in database
        * - Nullable, no default
        */
        demographic_gender: string | null;
        /**
        * **common.eligibility_member.contact_phone**
        * - `text` in database
        * - Nullable, no default
        */
        contact_phone: string | null;
        /**
        * **common.eligibility_member.contact_phone_mobile**
        * - `text` in database
        * - Nullable, no default
        */
        contact_phone_mobile: string | null;
        /**
        * **common.eligibility_member.contact_phone_home**
        * - `text` in database
        * - Nullable, no default
        */
        contact_phone_home: string | null;
        /**
        * **common.eligibility_member.contact_email**
        * - `text` in database
        * - Nullable, no default
        */
        contact_email: string | null;
        /**
        * **common.eligibility_member.location_address_1**
        * - `text` in database
        * - Nullable, no default
        */
        location_address_1: string | null;
        /**
        * **common.eligibility_member.location_address_2**
        * - `text` in database
        * - Nullable, no default
        */
        location_address_2: string | null;
        /**
        * **common.eligibility_member.location_city**
        * - `text` in database
        * - Nullable, no default
        */
        location_city: string | null;
        /**
        * **common.eligibility_member.location_state**
        * - `text` in database
        * - Nullable, no default
        */
        location_state: string | null;
        /**
        * **common.eligibility_member.location_zipcode**
        * - `text` in database
        * - Nullable, no default
        */
        location_zipcode: string | null;
        /**
        * **common.eligibility_member.insurance_group_id**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_group_id: string | null;
        /**
        * **common.eligibility_member.insurance_policy_id**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_policy_id: string | null;
        /**
        * **common.eligibility_member.insurance_effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        insurance_effective_date: db.DateString | null;
        /**
        * **common.eligibility_member.insurance_termination_date**
        * - `date` in database
        * - Nullable, no default
        */
        insurance_termination_date: db.DateString | null;
        /**
        * **common.eligibility_member.insurance_carrier_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_carrier_name: string | null;
        /**
        * **common.eligibility_member.insurance_plan_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_plan_name: string | null;
        /**
        * **common.eligibility_member.insurance_plan_tier**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_plan_tier: string | null;
        /**
        * **common.eligibility_member.insurance_lob**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_lob: string | null;
        /**
        * **common.eligibility_member.insurance_is_primary**
        * - `bool` in database
        * - Nullable, no default
        */
        insurance_is_primary: boolean | null;
        /**
        * **common.eligibility_member.insurance_relationship**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_relationship: string | null;
        /**
        * **common.eligibility_member.insurance_subscriber_policy_id**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_policy_id: string | null;
        /**
        * **common.eligibility_member.insurance_subscriber_first_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_first_name: string | null;
        /**
        * **common.eligibility_member.insurance_subscriber_last_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_last_name: string | null;
        /**
        * **common.eligibility_member.insurance_subscriber_dob**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_dob: string | null;
        /**
        * **common.eligibility_member.insurance_subscriber_gender**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_gender: string | null;
        /**
        * **common.eligibility_member.comm_optout_email**
        * - `bool` in database
        * - Nullable, no default
        */
        comm_optout_email: boolean | null;
        /**
        * **common.eligibility_member.comm_optout_phone**
        * - `bool` in database
        * - Nullable, no default
        */
        comm_optout_phone: boolean | null;
        /**
        * **common.eligibility_member.comm_preference**
        * - `text` in database
        * - Nullable, no default
        */
        comm_preference: string | null;
        /**
        * **common.eligibility_member.source_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        source_data: db.JSONValue | null;
      }
      export interface Whereable {
        /**
        * **common.eligibility_member.eligibility_id**
        * - `int4` in database
        * - Generated column
        */
        eligibility_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.external_member_id**
        * - `text` in database
        * - Nullable, no default
        */
        external_member_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.eligibility_effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_effective_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.eligibility_termination_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_termination_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.eligibility_added_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_added_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.eligibility_removed_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_removed_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.demographic_first_name**
        * - `text` in database
        * - Nullable, no default
        */
        demographic_first_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.demographic_last_name**
        * - `text` in database
        * - Nullable, no default
        */
        demographic_last_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.demographic_dob**
        * - `date` in database
        * - Nullable, no default
        */
        demographic_dob?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.demographic_lang**
        * - `varchar` in database
        * - Nullable, no default
        */
        demographic_lang?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.demographic_gender**
        * - `text` in database
        * - Nullable, no default
        */
        demographic_gender?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.contact_phone**
        * - `text` in database
        * - Nullable, no default
        */
        contact_phone?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.contact_phone_mobile**
        * - `text` in database
        * - Nullable, no default
        */
        contact_phone_mobile?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.contact_phone_home**
        * - `text` in database
        * - Nullable, no default
        */
        contact_phone_home?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.contact_email**
        * - `text` in database
        * - Nullable, no default
        */
        contact_email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.location_address_1**
        * - `text` in database
        * - Nullable, no default
        */
        location_address_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.location_address_2**
        * - `text` in database
        * - Nullable, no default
        */
        location_address_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.location_city**
        * - `text` in database
        * - Nullable, no default
        */
        location_city?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.location_state**
        * - `text` in database
        * - Nullable, no default
        */
        location_state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.location_zipcode**
        * - `text` in database
        * - Nullable, no default
        */
        location_zipcode?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.insurance_group_id**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_group_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.insurance_policy_id**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_policy_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.insurance_effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        insurance_effective_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.insurance_termination_date**
        * - `date` in database
        * - Nullable, no default
        */
        insurance_termination_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.insurance_carrier_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_carrier_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.insurance_plan_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_plan_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.insurance_plan_tier**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_plan_tier?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.insurance_lob**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_lob?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.insurance_is_primary**
        * - `bool` in database
        * - Nullable, no default
        */
        insurance_is_primary?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.insurance_relationship**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_relationship?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.insurance_subscriber_policy_id**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_policy_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.insurance_subscriber_first_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_first_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.insurance_subscriber_last_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_last_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.insurance_subscriber_dob**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_dob?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.insurance_subscriber_gender**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_gender?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.comm_optout_email**
        * - `bool` in database
        * - Nullable, no default
        */
        comm_optout_email?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.comm_optout_phone**
        * - `bool` in database
        * - Nullable, no default
        */
        comm_optout_phone?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.comm_preference**
        * - `text` in database
        * - Nullable, no default
        */
        comm_preference?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.eligibility_member.source_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        source_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.eligibility_member.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.external_member_id**
        * - `text` in database
        * - Nullable, no default
        */
        external_member_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.eligibility_effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_effective_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.eligibility_termination_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_termination_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.eligibility_added_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_added_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.eligibility_removed_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_removed_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.demographic_first_name**
        * - `text` in database
        * - Nullable, no default
        */
        demographic_first_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.demographic_last_name**
        * - `text` in database
        * - Nullable, no default
        */
        demographic_last_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.demographic_dob**
        * - `date` in database
        * - Nullable, no default
        */
        demographic_dob?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.demographic_lang**
        * - `varchar` in database
        * - Nullable, no default
        */
        demographic_lang?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.demographic_gender**
        * - `text` in database
        * - Nullable, no default
        */
        demographic_gender?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.contact_phone**
        * - `text` in database
        * - Nullable, no default
        */
        contact_phone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.contact_phone_mobile**
        * - `text` in database
        * - Nullable, no default
        */
        contact_phone_mobile?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.contact_phone_home**
        * - `text` in database
        * - Nullable, no default
        */
        contact_phone_home?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.contact_email**
        * - `text` in database
        * - Nullable, no default
        */
        contact_email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.location_address_1**
        * - `text` in database
        * - Nullable, no default
        */
        location_address_1?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.location_address_2**
        * - `text` in database
        * - Nullable, no default
        */
        location_address_2?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.location_city**
        * - `text` in database
        * - Nullable, no default
        */
        location_city?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.location_state**
        * - `text` in database
        * - Nullable, no default
        */
        location_state?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.location_zipcode**
        * - `text` in database
        * - Nullable, no default
        */
        location_zipcode?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.insurance_group_id**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_group_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.insurance_policy_id**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_policy_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.insurance_effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        insurance_effective_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.insurance_termination_date**
        * - `date` in database
        * - Nullable, no default
        */
        insurance_termination_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.insurance_carrier_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_carrier_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.insurance_plan_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_plan_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.insurance_plan_tier**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_plan_tier?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.insurance_lob**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_lob?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.insurance_is_primary**
        * - `bool` in database
        * - Nullable, no default
        */
        insurance_is_primary?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.insurance_relationship**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_relationship?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.insurance_subscriber_policy_id**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_policy_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.insurance_subscriber_first_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_first_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.insurance_subscriber_last_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_last_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.insurance_subscriber_dob**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_dob?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.insurance_subscriber_gender**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_gender?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.comm_optout_email**
        * - `bool` in database
        * - Nullable, no default
        */
        comm_optout_email?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.comm_optout_phone**
        * - `bool` in database
        * - Nullable, no default
        */
        comm_optout_phone?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.comm_preference**
        * - `text` in database
        * - Nullable, no default
        */
        comm_preference?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.eligibility_member.source_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        source_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.eligibility_member.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.identity_id**
        * - `int4` in database
        * - Nullable, no default
        */
        identity_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.external_member_id**
        * - `text` in database
        * - Nullable, no default
        */
        external_member_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.eligibility_effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_effective_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.eligibility_termination_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_termination_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.eligibility_added_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_added_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.eligibility_removed_date**
        * - `date` in database
        * - Nullable, no default
        */
        eligibility_removed_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.demographic_first_name**
        * - `text` in database
        * - Nullable, no default
        */
        demographic_first_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.demographic_last_name**
        * - `text` in database
        * - Nullable, no default
        */
        demographic_last_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.demographic_dob**
        * - `date` in database
        * - Nullable, no default
        */
        demographic_dob?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.demographic_lang**
        * - `varchar` in database
        * - Nullable, no default
        */
        demographic_lang?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.demographic_gender**
        * - `text` in database
        * - Nullable, no default
        */
        demographic_gender?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.contact_phone**
        * - `text` in database
        * - Nullable, no default
        */
        contact_phone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.contact_phone_mobile**
        * - `text` in database
        * - Nullable, no default
        */
        contact_phone_mobile?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.contact_phone_home**
        * - `text` in database
        * - Nullable, no default
        */
        contact_phone_home?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.contact_email**
        * - `text` in database
        * - Nullable, no default
        */
        contact_email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.location_address_1**
        * - `text` in database
        * - Nullable, no default
        */
        location_address_1?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.location_address_2**
        * - `text` in database
        * - Nullable, no default
        */
        location_address_2?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.location_city**
        * - `text` in database
        * - Nullable, no default
        */
        location_city?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.location_state**
        * - `text` in database
        * - Nullable, no default
        */
        location_state?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.location_zipcode**
        * - `text` in database
        * - Nullable, no default
        */
        location_zipcode?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.insurance_group_id**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_group_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.insurance_policy_id**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_policy_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.insurance_effective_date**
        * - `date` in database
        * - Nullable, no default
        */
        insurance_effective_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.insurance_termination_date**
        * - `date` in database
        * - Nullable, no default
        */
        insurance_termination_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.insurance_carrier_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_carrier_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.insurance_plan_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_plan_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.insurance_plan_tier**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_plan_tier?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.insurance_lob**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_lob?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.insurance_is_primary**
        * - `bool` in database
        * - Nullable, no default
        */
        insurance_is_primary?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.insurance_relationship**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_relationship?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.insurance_subscriber_policy_id**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_policy_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.insurance_subscriber_first_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_first_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.insurance_subscriber_last_name**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_last_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.insurance_subscriber_dob**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_dob?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.insurance_subscriber_gender**
        * - `text` in database
        * - Nullable, no default
        */
        insurance_subscriber_gender?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.comm_optout_email**
        * - `bool` in database
        * - Nullable, no default
        */
        comm_optout_email?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.comm_optout_phone**
        * - `bool` in database
        * - Nullable, no default
        */
        comm_optout_phone?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.comm_preference**
        * - `text` in database
        * - Nullable, no default
        */
        comm_preference?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.eligibility_member.source_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        source_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'eligibility_member_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.employee**
     * - Table in database
     */
    export namespace employee {
      export type Table = 'common.employee';
      export interface Selectable {
        /**
        * **common.employee.employee_id**
        * - `int4` in database
        * - Generated column
        */
        employee_id: number;
        /**
        * **common.employee.company**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        company: string;
        /**
        * **common.employee.role_state**
        * - `text` in database
        * - Nullable, no default
        */
        role_state: string | null;
        /**
        * **common.employee.employment_type**
        * - `text` in database
        * - Nullable, no default
        */
        employment_type: string | null;
        /**
        * **common.employee.start_date**
        * - `date` in database
        * - Nullable, no default
        */
        start_date: Date | null;
        /**
        * **common.employee.end_date**
        * - `date` in database
        * - Nullable, no default
        */
        end_date: Date | null;
        /**
        * **common.employee.title**
        * - `text` in database
        * - Nullable, no default
        */
        title: string | null;
        /**
        * **common.employee.first_name**
        * - `text` in database
        * - Nullable, no default
        */
        first_name: string | null;
        /**
        * **common.employee.last_name**
        * - `text` in database
        * - Nullable, no default
        */
        last_name: string | null;
        /**
        * **common.employee.preferred_first_name**
        * - `text` in database
        * - Nullable, no default
        */
        preferred_first_name: string | null;
        /**
        * **common.employee.preferred_last_name**
        * - `text` in database
        * - Nullable, no default
        */
        preferred_last_name: string | null;
        /**
        * **common.employee.personal_email**
        * - `text` in database
        * - Nullable, no default
        */
        personal_email: string | null;
        /**
        * **common.employee.work_email**
        * - `text` in database
        * - Nullable, no default
        */
        work_email: string | null;
        /**
        * **common.employee.custom_fields**
        * - `jsonb` in database
        * - Nullable, no default
        */
        custom_fields: db.JSONValue | null;
        /**
        * **common.employee.rippling_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        rippling_id: string;
        /**
        * **common.employee.rippling_employee_number**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        rippling_employee_number: number;
        /**
        * **common.employee.source_created_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        source_created_at: Date;
        /**
        * **common.employee.source_updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        source_updated_at: Date | null;
        /**
        * **common.employee.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **common.employee.rippling_user_id**
        * - `text` in database
        * - Nullable, no default
        */
        rippling_user_id: string | null;
      }
      export interface JSONSelectable {
        /**
        * **common.employee.employee_id**
        * - `int4` in database
        * - Generated column
        */
        employee_id: number;
        /**
        * **common.employee.company**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        company: string;
        /**
        * **common.employee.role_state**
        * - `text` in database
        * - Nullable, no default
        */
        role_state: string | null;
        /**
        * **common.employee.employment_type**
        * - `text` in database
        * - Nullable, no default
        */
        employment_type: string | null;
        /**
        * **common.employee.start_date**
        * - `date` in database
        * - Nullable, no default
        */
        start_date: db.DateString | null;
        /**
        * **common.employee.end_date**
        * - `date` in database
        * - Nullable, no default
        */
        end_date: db.DateString | null;
        /**
        * **common.employee.title**
        * - `text` in database
        * - Nullable, no default
        */
        title: string | null;
        /**
        * **common.employee.first_name**
        * - `text` in database
        * - Nullable, no default
        */
        first_name: string | null;
        /**
        * **common.employee.last_name**
        * - `text` in database
        * - Nullable, no default
        */
        last_name: string | null;
        /**
        * **common.employee.preferred_first_name**
        * - `text` in database
        * - Nullable, no default
        */
        preferred_first_name: string | null;
        /**
        * **common.employee.preferred_last_name**
        * - `text` in database
        * - Nullable, no default
        */
        preferred_last_name: string | null;
        /**
        * **common.employee.personal_email**
        * - `text` in database
        * - Nullable, no default
        */
        personal_email: string | null;
        /**
        * **common.employee.work_email**
        * - `text` in database
        * - Nullable, no default
        */
        work_email: string | null;
        /**
        * **common.employee.custom_fields**
        * - `jsonb` in database
        * - Nullable, no default
        */
        custom_fields: db.JSONValue | null;
        /**
        * **common.employee.rippling_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        rippling_id: string;
        /**
        * **common.employee.rippling_employee_number**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        rippling_employee_number: number;
        /**
        * **common.employee.source_created_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        source_created_at: db.TimestampString;
        /**
        * **common.employee.source_updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        source_updated_at: db.TimestampString | null;
        /**
        * **common.employee.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **common.employee.rippling_user_id**
        * - `text` in database
        * - Nullable, no default
        */
        rippling_user_id: string | null;
      }
      export interface Whereable {
        /**
        * **common.employee.employee_id**
        * - `int4` in database
        * - Generated column
        */
        employee_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.company**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        company?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.role_state**
        * - `text` in database
        * - Nullable, no default
        */
        role_state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.employment_type**
        * - `text` in database
        * - Nullable, no default
        */
        employment_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.start_date**
        * - `date` in database
        * - Nullable, no default
        */
        start_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.end_date**
        * - `date` in database
        * - Nullable, no default
        */
        end_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.title**
        * - `text` in database
        * - Nullable, no default
        */
        title?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.first_name**
        * - `text` in database
        * - Nullable, no default
        */
        first_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.last_name**
        * - `text` in database
        * - Nullable, no default
        */
        last_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.preferred_first_name**
        * - `text` in database
        * - Nullable, no default
        */
        preferred_first_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.preferred_last_name**
        * - `text` in database
        * - Nullable, no default
        */
        preferred_last_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.personal_email**
        * - `text` in database
        * - Nullable, no default
        */
        personal_email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.work_email**
        * - `text` in database
        * - Nullable, no default
        */
        work_email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.custom_fields**
        * - `jsonb` in database
        * - Nullable, no default
        */
        custom_fields?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.rippling_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        rippling_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.rippling_employee_number**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        rippling_employee_number?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.source_created_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        source_created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.source_updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        source_updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.employee.rippling_user_id**
        * - `text` in database
        * - Nullable, no default
        */
        rippling_user_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.employee.company**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        company: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.employee.role_state**
        * - `text` in database
        * - Nullable, no default
        */
        role_state?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.employee.employment_type**
        * - `text` in database
        * - Nullable, no default
        */
        employment_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.employee.start_date**
        * - `date` in database
        * - Nullable, no default
        */
        start_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.employee.end_date**
        * - `date` in database
        * - Nullable, no default
        */
        end_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.employee.title**
        * - `text` in database
        * - Nullable, no default
        */
        title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.employee.first_name**
        * - `text` in database
        * - Nullable, no default
        */
        first_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.employee.last_name**
        * - `text` in database
        * - Nullable, no default
        */
        last_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.employee.preferred_first_name**
        * - `text` in database
        * - Nullable, no default
        */
        preferred_first_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.employee.preferred_last_name**
        * - `text` in database
        * - Nullable, no default
        */
        preferred_last_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.employee.personal_email**
        * - `text` in database
        * - Nullable, no default
        */
        personal_email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.employee.work_email**
        * - `text` in database
        * - Nullable, no default
        */
        work_email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.employee.custom_fields**
        * - `jsonb` in database
        * - Nullable, no default
        */
        custom_fields?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.employee.rippling_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        rippling_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.employee.rippling_employee_number**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        rippling_employee_number: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.employee.source_created_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        source_created_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **common.employee.source_updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        source_updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.employee.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.employee.rippling_user_id**
        * - `text` in database
        * - Nullable, no default
        */
        rippling_user_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.employee.company**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        company?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.employee.role_state**
        * - `text` in database
        * - Nullable, no default
        */
        role_state?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.employee.employment_type**
        * - `text` in database
        * - Nullable, no default
        */
        employment_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.employee.start_date**
        * - `date` in database
        * - Nullable, no default
        */
        start_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.employee.end_date**
        * - `date` in database
        * - Nullable, no default
        */
        end_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.employee.title**
        * - `text` in database
        * - Nullable, no default
        */
        title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.employee.first_name**
        * - `text` in database
        * - Nullable, no default
        */
        first_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.employee.last_name**
        * - `text` in database
        * - Nullable, no default
        */
        last_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.employee.preferred_first_name**
        * - `text` in database
        * - Nullable, no default
        */
        preferred_first_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.employee.preferred_last_name**
        * - `text` in database
        * - Nullable, no default
        */
        preferred_last_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.employee.personal_email**
        * - `text` in database
        * - Nullable, no default
        */
        personal_email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.employee.work_email**
        * - `text` in database
        * - Nullable, no default
        */
        work_email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.employee.custom_fields**
        * - `jsonb` in database
        * - Nullable, no default
        */
        custom_fields?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.employee.rippling_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        rippling_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.employee.rippling_employee_number**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        rippling_employee_number?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.employee.source_created_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        source_created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **common.employee.source_updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        source_updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.employee.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.employee.rippling_user_id**
        * - `text` in database
        * - Nullable, no default
        */
        rippling_user_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'employee_pkey' | 'employee_rippling_employee_number_key' | 'employee_rippling_id_key';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.flow_task_log**
     * - Table in database
     */
    export namespace flow_task_log {
      export type Table = 'common.flow_task_log';
      export interface Selectable {
        /**
        * **common.flow_task_log.flow_task_log_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.flow_task_log_id_seq'::regclass)`
        */
        flow_task_log_id: number;
        /**
        * **common.flow_task_log.flow_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        flow_id: string;
        /**
        * **common.flow_task_log.task_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        task_id: string;
        /**
        * **common.flow_task_log.status**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        status: string;
        /**
        * **common.flow_task_log.skipped_reason**
        * - `varchar` in database
        * - Nullable, no default
        */
        skipped_reason: string | null;
        /**
        * **common.flow_task_log.skipped_flow_log_id**
        * - `int4` in database
        * - Nullable, no default
        */
        skipped_flow_log_id: number | null;
        /**
        * **common.flow_task_log.input_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        input_id: string | null;
        /**
        * **common.flow_task_log.input**
        * - `jsonb` in database
        * - Nullable, no default
        */
        input: db.JSONValue | null;
        /**
        * **common.flow_task_log.input_hash**
        * - `varchar` in database
        * - Nullable, no default
        */
        input_hash: string | null;
        /**
        * **common.flow_task_log.input_date**
        * - `date` in database
        * - Nullable, no default
        */
        input_date: Date | null;
        /**
        * **common.flow_task_log.output**
        * - `jsonb` in database
        * - Nullable, no default
        */
        output: db.JSONValue | null;
        /**
        * **common.flow_task_log.output_hash**
        * - `varchar` in database
        * - Nullable, no default
        */
        output_hash: string | null;
        /**
        * **common.flow_task_log.state_machine_arn**
        * - `text` in database
        * - Nullable, no default
        */
        state_machine_arn: string | null;
        /**
        * **common.flow_task_log.execution_arn**
        * - `text` in database
        * - Nullable, no default
        */
        execution_arn: string | null;
        /**
        * **common.flow_task_log.start_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        start_at: Date;
        /**
        * **common.flow_task_log.end_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        end_at: Date | null;
        /**
        * **common.flow_task_log.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta: db.JSONValue | null;
        /**
        * **common.flow_task_log.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **common.flow_task_log.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **common.flow_task_log.flow_task_log_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.flow_task_log_id_seq'::regclass)`
        */
        flow_task_log_id: number;
        /**
        * **common.flow_task_log.flow_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        flow_id: string;
        /**
        * **common.flow_task_log.task_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        task_id: string;
        /**
        * **common.flow_task_log.status**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        status: string;
        /**
        * **common.flow_task_log.skipped_reason**
        * - `varchar` in database
        * - Nullable, no default
        */
        skipped_reason: string | null;
        /**
        * **common.flow_task_log.skipped_flow_log_id**
        * - `int4` in database
        * - Nullable, no default
        */
        skipped_flow_log_id: number | null;
        /**
        * **common.flow_task_log.input_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        input_id: string | null;
        /**
        * **common.flow_task_log.input**
        * - `jsonb` in database
        * - Nullable, no default
        */
        input: db.JSONValue | null;
        /**
        * **common.flow_task_log.input_hash**
        * - `varchar` in database
        * - Nullable, no default
        */
        input_hash: string | null;
        /**
        * **common.flow_task_log.input_date**
        * - `date` in database
        * - Nullable, no default
        */
        input_date: db.DateString | null;
        /**
        * **common.flow_task_log.output**
        * - `jsonb` in database
        * - Nullable, no default
        */
        output: db.JSONValue | null;
        /**
        * **common.flow_task_log.output_hash**
        * - `varchar` in database
        * - Nullable, no default
        */
        output_hash: string | null;
        /**
        * **common.flow_task_log.state_machine_arn**
        * - `text` in database
        * - Nullable, no default
        */
        state_machine_arn: string | null;
        /**
        * **common.flow_task_log.execution_arn**
        * - `text` in database
        * - Nullable, no default
        */
        execution_arn: string | null;
        /**
        * **common.flow_task_log.start_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        start_at: db.TimestampString;
        /**
        * **common.flow_task_log.end_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        end_at: db.TimestampString | null;
        /**
        * **common.flow_task_log.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta: db.JSONValue | null;
        /**
        * **common.flow_task_log.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **common.flow_task_log.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **common.flow_task_log.flow_task_log_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.flow_task_log_id_seq'::regclass)`
        */
        flow_task_log_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.flow_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        flow_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.task_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        task_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.status**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.skipped_reason**
        * - `varchar` in database
        * - Nullable, no default
        */
        skipped_reason?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.skipped_flow_log_id**
        * - `int4` in database
        * - Nullable, no default
        */
        skipped_flow_log_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.input_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        input_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.input**
        * - `jsonb` in database
        * - Nullable, no default
        */
        input?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.input_hash**
        * - `varchar` in database
        * - Nullable, no default
        */
        input_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.input_date**
        * - `date` in database
        * - Nullable, no default
        */
        input_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.output**
        * - `jsonb` in database
        * - Nullable, no default
        */
        output?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.output_hash**
        * - `varchar` in database
        * - Nullable, no default
        */
        output_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.state_machine_arn**
        * - `text` in database
        * - Nullable, no default
        */
        state_machine_arn?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.execution_arn**
        * - `text` in database
        * - Nullable, no default
        */
        execution_arn?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.start_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        start_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.end_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        end_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.flow_task_log.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.flow_task_log.flow_task_log_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.flow_task_log_id_seq'::regclass)`
        */
        flow_task_log_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **common.flow_task_log.flow_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        flow_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.flow_task_log.task_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        task_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.flow_task_log.status**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        status: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.flow_task_log.skipped_reason**
        * - `varchar` in database
        * - Nullable, no default
        */
        skipped_reason?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.flow_task_log.skipped_flow_log_id**
        * - `int4` in database
        * - Nullable, no default
        */
        skipped_flow_log_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.flow_task_log.input_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        input_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.flow_task_log.input**
        * - `jsonb` in database
        * - Nullable, no default
        */
        input?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.flow_task_log.input_hash**
        * - `varchar` in database
        * - Nullable, no default
        */
        input_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.flow_task_log.input_date**
        * - `date` in database
        * - Nullable, no default
        */
        input_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.flow_task_log.output**
        * - `jsonb` in database
        * - Nullable, no default
        */
        output?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.flow_task_log.output_hash**
        * - `varchar` in database
        * - Nullable, no default
        */
        output_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.flow_task_log.state_machine_arn**
        * - `text` in database
        * - Nullable, no default
        */
        state_machine_arn?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.flow_task_log.execution_arn**
        * - `text` in database
        * - Nullable, no default
        */
        execution_arn?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.flow_task_log.start_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        start_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **common.flow_task_log.end_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        end_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.flow_task_log.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.flow_task_log.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.flow_task_log.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.flow_task_log.flow_task_log_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.flow_task_log_id_seq'::regclass)`
        */
        flow_task_log_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.flow_task_log.flow_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        flow_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.flow_task_log.task_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        task_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.flow_task_log.status**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.flow_task_log.skipped_reason**
        * - `varchar` in database
        * - Nullable, no default
        */
        skipped_reason?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.flow_task_log.skipped_flow_log_id**
        * - `int4` in database
        * - Nullable, no default
        */
        skipped_flow_log_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.flow_task_log.input_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        input_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.flow_task_log.input**
        * - `jsonb` in database
        * - Nullable, no default
        */
        input?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.flow_task_log.input_hash**
        * - `varchar` in database
        * - Nullable, no default
        */
        input_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.flow_task_log.input_date**
        * - `date` in database
        * - Nullable, no default
        */
        input_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.flow_task_log.output**
        * - `jsonb` in database
        * - Nullable, no default
        */
        output?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.flow_task_log.output_hash**
        * - `varchar` in database
        * - Nullable, no default
        */
        output_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.flow_task_log.state_machine_arn**
        * - `text` in database
        * - Nullable, no default
        */
        state_machine_arn?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.flow_task_log.execution_arn**
        * - `text` in database
        * - Nullable, no default
        */
        execution_arn?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.flow_task_log.start_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        start_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **common.flow_task_log.end_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        end_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.flow_task_log.meta**
        * - `jsonb` in database
        * - Nullable, no default
        */
        meta?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.flow_task_log.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.flow_task_log.updated_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'flow_task_log_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.language_iso6391**
     * - Table in database
     */
    export namespace language_iso6391 {
      export type Table = 'common.language_iso6391';
      export interface Selectable {
        /**
        * **common.language_iso6391.code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code: string;
        /**
        * **common.language_iso6391.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
      }
      export interface JSONSelectable {
        /**
        * **common.language_iso6391.code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code: string;
        /**
        * **common.language_iso6391.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
      }
      export interface Whereable {
        /**
        * **common.language_iso6391.code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.language_iso6391.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.language_iso6391.code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.language_iso6391.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.language_iso6391.code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        code?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.language_iso6391.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      }
      export type UniqueIndex = 'language_iso6391_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.meeting_participant**
     * - Table in database
     */
    export namespace meeting_participant {
      export type Table = 'common.meeting_participant';
      export interface Selectable {
        /**
        * **common.meeting_participant.user_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        user_id: string;
        /**
        * **common.meeting_participant.meeting_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        meeting_id: string;
        /**
        * **common.meeting_participant.join_time**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        join_time: Date | null;
        /**
        * **common.meeting_participant.leave_time**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        leave_time: Date | null;
        /**
        * **common.meeting_participant.duration**
        * - `int4` in database
        * - Nullable, no default
        */
        duration: number | null;
        /**
        * **common.meeting_participant.internal_user**
        * - `bool` in database
        * - Nullable, no default
        */
        internal_user: boolean | null;
        /**
        * **common.meeting_participant.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data: db.JSONValue | null;
      }
      export interface JSONSelectable {
        /**
        * **common.meeting_participant.user_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        user_id: string;
        /**
        * **common.meeting_participant.meeting_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        meeting_id: string;
        /**
        * **common.meeting_participant.join_time**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        join_time: db.TimestampTzString | null;
        /**
        * **common.meeting_participant.leave_time**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        leave_time: db.TimestampTzString | null;
        /**
        * **common.meeting_participant.duration**
        * - `int4` in database
        * - Nullable, no default
        */
        duration: number | null;
        /**
        * **common.meeting_participant.internal_user**
        * - `bool` in database
        * - Nullable, no default
        */
        internal_user: boolean | null;
        /**
        * **common.meeting_participant.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data: db.JSONValue | null;
      }
      export interface Whereable {
        /**
        * **common.meeting_participant.user_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        user_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.meeting_participant.meeting_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        meeting_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.meeting_participant.join_time**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        join_time?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.meeting_participant.leave_time**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        leave_time?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.meeting_participant.duration**
        * - `int4` in database
        * - Nullable, no default
        */
        duration?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.meeting_participant.internal_user**
        * - `bool` in database
        * - Nullable, no default
        */
        internal_user?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.meeting_participant.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.meeting_participant.user_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        user_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.meeting_participant.meeting_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        meeting_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.meeting_participant.join_time**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        join_time?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.meeting_participant.leave_time**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        leave_time?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.meeting_participant.duration**
        * - `int4` in database
        * - Nullable, no default
        */
        duration?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.meeting_participant.internal_user**
        * - `bool` in database
        * - Nullable, no default
        */
        internal_user?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.meeting_participant.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.meeting_participant.user_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        user_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.meeting_participant.meeting_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        meeting_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.meeting_participant.join_time**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        join_time?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.meeting_participant.leave_time**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        leave_time?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.meeting_participant.duration**
        * - `int4` in database
        * - Nullable, no default
        */
        duration?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.meeting_participant.internal_user**
        * - `bool` in database
        * - Nullable, no default
        */
        internal_user?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.meeting_participant.raw_data**
        * - `jsonb` in database
        * - Nullable, no default
        */
        raw_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'meeting_participant_user_id_meeting_id_join_time_key';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.outbound_file_config**
     * - Table in database
     */
    export namespace outbound_file_config {
      export type Table = 'common.outbound_file_config';
      export interface Selectable {
        /**
        * **common.outbound_file_config.outbound_file_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.outbound_file_config_outbound_file_id_seq'::regclass)`
        */
        outbound_file_id: number;
        /**
        * **common.outbound_file_config.client**
        *
        * Client as it is setup in our sftp system.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        client: string;
        /**
        * **common.outbound_file_config.query**
        *
        * Query for extract. Needs to include column names.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string;
        /**
        * **common.outbound_file_config.schedule**
        *
        * Cron based scheduling string. Interval is fuzzy, and will export inside workflow.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        schedule: string;
        /**
        * **common.outbound_file_config.bucket_type**
        *
        * External SFTP or internal SFTP Pickup
        * - `text` in database
        * - `NOT NULL`, no default
        */
        bucket_type: string;
        /**
        * **common.outbound_file_config.file_name**
        *
        * Final file name of extract. Supports date templating inside [] such as file_name_[YYYYMMDD].csv.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        file_name: string;
        /**
        * **common.outbound_file_config.unload_opts**
        *
        * Options to be used when unloading data.
        * - `jsonb` in database
        * - Nullable, no default
        */
        unload_opts: db.JSONValue | null;
      }
      export interface JSONSelectable {
        /**
        * **common.outbound_file_config.outbound_file_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.outbound_file_config_outbound_file_id_seq'::regclass)`
        */
        outbound_file_id: number;
        /**
        * **common.outbound_file_config.client**
        *
        * Client as it is setup in our sftp system.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        client: string;
        /**
        * **common.outbound_file_config.query**
        *
        * Query for extract. Needs to include column names.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string;
        /**
        * **common.outbound_file_config.schedule**
        *
        * Cron based scheduling string. Interval is fuzzy, and will export inside workflow.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        schedule: string;
        /**
        * **common.outbound_file_config.bucket_type**
        *
        * External SFTP or internal SFTP Pickup
        * - `text` in database
        * - `NOT NULL`, no default
        */
        bucket_type: string;
        /**
        * **common.outbound_file_config.file_name**
        *
        * Final file name of extract. Supports date templating inside [] such as file_name_[YYYYMMDD].csv.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        file_name: string;
        /**
        * **common.outbound_file_config.unload_opts**
        *
        * Options to be used when unloading data.
        * - `jsonb` in database
        * - Nullable, no default
        */
        unload_opts: db.JSONValue | null;
      }
      export interface Whereable {
        /**
        * **common.outbound_file_config.outbound_file_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.outbound_file_config_outbound_file_id_seq'::regclass)`
        */
        outbound_file_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.outbound_file_config.client**
        *
        * Client as it is setup in our sftp system.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        client?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.outbound_file_config.query**
        *
        * Query for extract. Needs to include column names.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.outbound_file_config.schedule**
        *
        * Cron based scheduling string. Interval is fuzzy, and will export inside workflow.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        schedule?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.outbound_file_config.bucket_type**
        *
        * External SFTP or internal SFTP Pickup
        * - `text` in database
        * - `NOT NULL`, no default
        */
        bucket_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.outbound_file_config.file_name**
        *
        * Final file name of extract. Supports date templating inside [] such as file_name_[YYYYMMDD].csv.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        file_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.outbound_file_config.unload_opts**
        *
        * Options to be used when unloading data.
        * - `jsonb` in database
        * - Nullable, no default
        */
        unload_opts?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.outbound_file_config.outbound_file_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.outbound_file_config_outbound_file_id_seq'::regclass)`
        */
        outbound_file_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **common.outbound_file_config.client**
        *
        * Client as it is setup in our sftp system.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        client: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.outbound_file_config.query**
        *
        * Query for extract. Needs to include column names.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.outbound_file_config.schedule**
        *
        * Cron based scheduling string. Interval is fuzzy, and will export inside workflow.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        schedule: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.outbound_file_config.bucket_type**
        *
        * External SFTP or internal SFTP Pickup
        * - `text` in database
        * - `NOT NULL`, no default
        */
        bucket_type: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.outbound_file_config.file_name**
        *
        * Final file name of extract. Supports date templating inside [] such as file_name_[YYYYMMDD].csv.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        file_name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.outbound_file_config.unload_opts**
        *
        * Options to be used when unloading data.
        * - `jsonb` in database
        * - Nullable, no default
        */
        unload_opts?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.outbound_file_config.outbound_file_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.outbound_file_config_outbound_file_id_seq'::regclass)`
        */
        outbound_file_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.outbound_file_config.client**
        *
        * Client as it is setup in our sftp system.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        client?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.outbound_file_config.query**
        *
        * Query for extract. Needs to include column names.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.outbound_file_config.schedule**
        *
        * Cron based scheduling string. Interval is fuzzy, and will export inside workflow.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        schedule?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.outbound_file_config.bucket_type**
        *
        * External SFTP or internal SFTP Pickup
        * - `text` in database
        * - `NOT NULL`, no default
        */
        bucket_type?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.outbound_file_config.file_name**
        *
        * Final file name of extract. Supports date templating inside [] such as file_name_[YYYYMMDD].csv.
        * - `text` in database
        * - `NOT NULL`, no default
        */
        file_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.outbound_file_config.unload_opts**
        *
        * Options to be used when unloading data.
        * - `jsonb` in database
        * - Nullable, no default
        */
        unload_opts?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = never;
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.program**
     * - Table in database
     */
    export namespace program {
      export type Table = 'common.program';
      export interface Selectable {
        /**
        * **common.program.program_id**
        * - `int4` in database
        * - Generated column
        */
        program_id: number;
        /**
        * **common.program.program_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        program_code: string;
        /**
        * **common.program.label**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **common.program.description**
        * - `text` in database
        * - Nullable, no default
        */
        description: string | null;
        /**
        * **common.program.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
        /**
        * **common.program.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **common.program.program_id**
        * - `int4` in database
        * - Generated column
        */
        program_id: number;
        /**
        * **common.program.program_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        program_code: string;
        /**
        * **common.program.label**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **common.program.description**
        * - `text` in database
        * - Nullable, no default
        */
        description: string | null;
        /**
        * **common.program.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
        /**
        * **common.program.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **common.program.program_id**
        * - `int4` in database
        * - Generated column
        */
        program_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program.program_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        program_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program.label**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.program.program_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        program_code: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.program.label**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.program.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.program.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.program.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.program.program_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        program_code?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.program.label**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.program.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.program.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.program.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'idx_program_code' | 'program_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.program_contract**
     * - Table in database
     */
    export namespace program_contract {
      export type Table = 'common.program_contract';
      export interface Selectable {
        /**
        * **common.program_contract.program_contract_id**
        * - `int4` in database
        * - Generated column
        */
        program_contract_id: number;
        /**
        * **common.program_contract.program_rule_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_rule_id: number;
        /**
        * **common.program_contract.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id: number | null;
        /**
        * **common.program_contract.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id: number | null;
        /**
        * **common.program_contract.start_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        start_at: Date;
        /**
        * **common.program_contract.end_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        end_at: Date | null;
        /**
        * **common.program_contract.enabled**
        * - `bool` in database
        * - Nullable, default: `false`
        */
        enabled: boolean | null;
        /**
        * **common.program_contract.params**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        params: db.JSONValue;
        /**
        * **common.program_contract.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
        /**
        * **common.program_contract.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **common.program_contract.program_contract_id**
        * - `int4` in database
        * - Generated column
        */
        program_contract_id: number;
        /**
        * **common.program_contract.program_rule_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_rule_id: number;
        /**
        * **common.program_contract.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id: number | null;
        /**
        * **common.program_contract.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id: number | null;
        /**
        * **common.program_contract.start_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        start_at: db.TimestampString;
        /**
        * **common.program_contract.end_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        end_at: db.TimestampString | null;
        /**
        * **common.program_contract.enabled**
        * - `bool` in database
        * - Nullable, default: `false`
        */
        enabled: boolean | null;
        /**
        * **common.program_contract.params**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        params: db.JSONValue;
        /**
        * **common.program_contract.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
        /**
        * **common.program_contract.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **common.program_contract.program_contract_id**
        * - `int4` in database
        * - Generated column
        */
        program_contract_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_contract.program_rule_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_rule_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_contract.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_contract.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_contract.start_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        start_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_contract.end_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        end_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_contract.enabled**
        * - `bool` in database
        * - Nullable, default: `false`
        */
        enabled?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_contract.params**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        params?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_contract.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_contract.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.program_contract.program_rule_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_rule_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.program_contract.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.program_contract.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.program_contract.start_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        start_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **common.program_contract.end_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        end_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.program_contract.enabled**
        * - `bool` in database
        * - Nullable, default: `false`
        */
        enabled?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.program_contract.params**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        params: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment;
        /**
        * **common.program_contract.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.program_contract.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.program_contract.program_rule_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_rule_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.program_contract.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.program_contract.payer_id**
        * - `int4` in database
        * - Nullable, no default
        */
        payer_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.program_contract.start_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        start_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **common.program_contract.end_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        end_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.program_contract.enabled**
        * - `bool` in database
        * - Nullable, default: `false`
        */
        enabled?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.program_contract.params**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        params?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment>;
        /**
        * **common.program_contract.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.program_contract.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'program_contract_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.program_membership**
     * - Table in database
     */
    export namespace program_membership {
      export type Table = 'common.program_membership';
      export interface Selectable {
        /**
        * **common.program_membership.program_membership_id**
        * - `int4` in database
        * - Generated column
        */
        program_membership_id: number;
        /**
        * **common.program_membership.program_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_id: number;
        /**
        * **common.program_membership.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number;
        /**
        * **common.program_membership.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **common.program_membership.program_membership_id**
        * - `int4` in database
        * - Generated column
        */
        program_membership_id: number;
        /**
        * **common.program_membership.program_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_id: number;
        /**
        * **common.program_membership.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number;
        /**
        * **common.program_membership.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **common.program_membership.program_membership_id**
        * - `int4` in database
        * - Generated column
        */
        program_membership_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_membership.program_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_membership.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_membership.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.program_membership.program_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.program_membership.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.program_membership.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.program_membership.program_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.program_membership.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.program_membership.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'program_membership_pkey' | 'unique_program_identity';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.program_membership_history**
     * - Table in database
     */
    export namespace program_membership_history {
      export type Table = 'common.program_membership_history';
      export interface Selectable {
        /**
        * **common.program_membership_history.event_id**
        * - `int4` in database
        * - Generated column
        */
        event_id: number;
        /**
        * **common.program_membership_history.program_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_id: number;
        /**
        * **common.program_membership_history.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number;
        /**
        * **common.program_membership_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type: string;
        /**
        * **common.program_membership_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **common.program_membership_history.event_id**
        * - `int4` in database
        * - Generated column
        */
        event_id: number;
        /**
        * **common.program_membership_history.program_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_id: number;
        /**
        * **common.program_membership_history.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number;
        /**
        * **common.program_membership_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type: string;
        /**
        * **common.program_membership_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **common.program_membership_history.event_id**
        * - `int4` in database
        * - Generated column
        */
        event_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_membership_history.program_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_membership_history.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_membership_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_membership_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.program_membership_history.program_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.program_membership_history.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.program_membership_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.program_membership_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.program_membership_history.program_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.program_membership_history.identity_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        identity_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.program_membership_history.event_type**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        event_type?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.program_membership_history.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'program_membership_history_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.program_rule**
     * - Table in database
     */
    export namespace program_rule {
      export type Table = 'common.program_rule';
      export interface Selectable {
        /**
        * **common.program_rule.program_rule_id**
        * - `int4` in database
        * - Generated column
        */
        program_rule_id: number;
        /**
        * **common.program_rule.program_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_id: number;
        /**
        * **common.program_rule.params_schema**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        params_schema: db.JSONValue;
        /**
        * **common.program_rule.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string;
        /**
        * **common.program_rule.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
        /**
        * **common.program_rule.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
        /**
        * **common.program_rule.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
      }
      export interface JSONSelectable {
        /**
        * **common.program_rule.program_rule_id**
        * - `int4` in database
        * - Generated column
        */
        program_rule_id: number;
        /**
        * **common.program_rule.program_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_id: number;
        /**
        * **common.program_rule.params_schema**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        params_schema: db.JSONValue;
        /**
        * **common.program_rule.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string;
        /**
        * **common.program_rule.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
        /**
        * **common.program_rule.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
        /**
        * **common.program_rule.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
      }
      export interface Whereable {
        /**
        * **common.program_rule.program_rule_id**
        * - `int4` in database
        * - Generated column
        */
        program_rule_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_rule.program_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_rule.params_schema**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        params_schema?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_rule.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_rule.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_rule.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.program_rule.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.program_rule.program_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.program_rule.params_schema**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        params_schema: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment;
        /**
        * **common.program_rule.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.program_rule.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.program_rule.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.program_rule.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.program_rule.program_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        program_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.program_rule.params_schema**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        params_schema?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment>;
        /**
        * **common.program_rule.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.program_rule.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.program_rule.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.program_rule.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      }
      export type UniqueIndex = 'program_rule_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.referral_config**
     * - Table in database
     */
    export namespace referral_config {
      export type Table = 'common.referral_config';
      export interface Selectable {
        /**
        * **common.referral_config.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id: number | null;
        /**
        * **common.referral_config.process_enabled**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        process_enabled: boolean;
        /**
        * **common.referral_config.custom_flow**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        custom_flow: boolean;
        /**
        * **common.referral_config.eligibility_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        eligibility_required: boolean;
        /**
        * **common.referral_config.eligibility_grace_period_in_seconds**
        * - `int4` in database
        * - `NOT NULL`, default: `0`
        */
        eligibility_grace_period_in_seconds: number;
        /**
        * **common.referral_config.callback_config**
        * - `jsonb` in database
        * - Nullable, no default
        */
        callback_config: db.JSONValue | null;
        /**
        * **common.referral_config.source**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source: string;
      }
      export interface JSONSelectable {
        /**
        * **common.referral_config.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id: number | null;
        /**
        * **common.referral_config.process_enabled**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        process_enabled: boolean;
        /**
        * **common.referral_config.custom_flow**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        custom_flow: boolean;
        /**
        * **common.referral_config.eligibility_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        eligibility_required: boolean;
        /**
        * **common.referral_config.eligibility_grace_period_in_seconds**
        * - `int4` in database
        * - `NOT NULL`, default: `0`
        */
        eligibility_grace_period_in_seconds: number;
        /**
        * **common.referral_config.callback_config**
        * - `jsonb` in database
        * - Nullable, no default
        */
        callback_config: db.JSONValue | null;
        /**
        * **common.referral_config.source**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source: string;
      }
      export interface Whereable {
        /**
        * **common.referral_config.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.referral_config.process_enabled**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        process_enabled?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.referral_config.custom_flow**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        custom_flow?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.referral_config.eligibility_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        eligibility_required?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.referral_config.eligibility_grace_period_in_seconds**
        * - `int4` in database
        * - `NOT NULL`, default: `0`
        */
        eligibility_grace_period_in_seconds?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.referral_config.callback_config**
        * - `jsonb` in database
        * - Nullable, no default
        */
        callback_config?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.referral_config.source**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.referral_config.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.referral_config.process_enabled**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        process_enabled?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **common.referral_config.custom_flow**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        custom_flow?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **common.referral_config.eligibility_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        eligibility_required?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment;
        /**
        * **common.referral_config.eligibility_grace_period_in_seconds**
        * - `int4` in database
        * - `NOT NULL`, default: `0`
        */
        eligibility_grace_period_in_seconds?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **common.referral_config.callback_config**
        * - `jsonb` in database
        * - Nullable, no default
        */
        callback_config?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.referral_config.source**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source: string | db.Parameter<string> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.referral_config.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.referral_config.process_enabled**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        process_enabled?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.referral_config.custom_flow**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        custom_flow?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.referral_config.eligibility_required**
        * - `bool` in database
        * - `NOT NULL`, default: `false`
        */
        eligibility_required?: boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.referral_config.eligibility_grace_period_in_seconds**
        * - `int4` in database
        * - `NOT NULL`, default: `0`
        */
        eligibility_grace_period_in_seconds?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.referral_config.callback_config**
        * - `jsonb` in database
        * - Nullable, no default
        */
        callback_config?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.referral_config.source**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        source?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      }
      export type UniqueIndex = 'referral_config_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.referral_source**
     * - Table in database
     */
    export namespace referral_source {
      export type Table = 'common.referral_source';
      export interface Selectable {
        /**
        * **common.referral_source.source**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        source: string;
        /**
        * **common.referral_source.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string;
        /**
        * **common.referral_source.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **common.referral_source.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **common.referral_source.source**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        source: string;
        /**
        * **common.referral_source.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string;
        /**
        * **common.referral_source.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **common.referral_source.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **common.referral_source.source**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        source?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.referral_source.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.referral_source.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.referral_source.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.referral_source.source**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        source: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.referral_source.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.referral_source.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.referral_source.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.referral_source.source**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        source?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.referral_source.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.referral_source.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.referral_source.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'referral_source_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.rippling_user**
     * - Table in database
     */
    export namespace rippling_user {
      export type Table = 'common.rippling_user';
      export interface Selectable {
        /**
        * **common.rippling_user.rippling_user_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        rippling_user_id: string;
        /**
        * **common.rippling_user.username**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        username: string;
        /**
        * **common.rippling_user.display_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        display_name: string;
        /**
        * **common.rippling_user.active**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        active: boolean;
        /**
        * **common.rippling_user.source_created_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        source_created_at: Date;
        /**
        * **common.rippling_user.source_updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        source_updated_at: Date | null;
        /**
        * **common.rippling_user.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **common.rippling_user.rippling_user_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        rippling_user_id: string;
        /**
        * **common.rippling_user.username**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        username: string;
        /**
        * **common.rippling_user.display_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        display_name: string;
        /**
        * **common.rippling_user.active**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        active: boolean;
        /**
        * **common.rippling_user.source_created_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        source_created_at: db.TimestampString;
        /**
        * **common.rippling_user.source_updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        source_updated_at: db.TimestampString | null;
        /**
        * **common.rippling_user.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **common.rippling_user.rippling_user_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        rippling_user_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.rippling_user.username**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        username?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.rippling_user.display_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        display_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.rippling_user.active**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        active?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.rippling_user.source_created_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        source_created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.rippling_user.source_updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        source_updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.rippling_user.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.rippling_user.rippling_user_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        rippling_user_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.rippling_user.username**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        username: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.rippling_user.display_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        display_name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.rippling_user.active**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        active: boolean | db.Parameter<boolean> | db.SQLFragment;
        /**
        * **common.rippling_user.source_created_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        source_created_at: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
        /**
        * **common.rippling_user.source_updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        source_updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.rippling_user.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.rippling_user.rippling_user_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        rippling_user_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.rippling_user.username**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        username?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.rippling_user.display_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        display_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.rippling_user.active**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        active?: boolean | db.Parameter<boolean> | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment>;
        /**
        * **common.rippling_user.source_created_at**
        * - `timestamp` in database
        * - `NOT NULL`, no default
        */
        source_created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
        /**
        * **common.rippling_user.source_updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        source_updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.rippling_user.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'rippling_user_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.segment_definition**
     * - Table in database
     */
    export namespace segment_definition {
      export type Table = 'common.segment_definition';
      export interface Selectable {
        /**
        * **common.segment_definition.segment_definition_id**
        * - `int4` in database
        * - Generated column
        */
        segment_definition_id: number;
        /**
        * **common.segment_definition.segment_profile_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_profile_id: number;
        /**
        * **common.segment_definition.rule**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        rule: string;
        /**
        * **common.segment_definition.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **common.segment_definition.schedule**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        schedule: string;
        /**
        * **common.segment_definition.description**
        * - `text` in database
        * - Nullable, no default
        */
        description: string | null;
        /**
        * **common.segment_definition.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **common.segment_definition.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **common.segment_definition.segment_definition_id**
        * - `int4` in database
        * - Generated column
        */
        segment_definition_id: number;
        /**
        * **common.segment_definition.segment_profile_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_profile_id: number;
        /**
        * **common.segment_definition.rule**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        rule: string;
        /**
        * **common.segment_definition.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **common.segment_definition.schedule**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        schedule: string;
        /**
        * **common.segment_definition.description**
        * - `text` in database
        * - Nullable, no default
        */
        description: string | null;
        /**
        * **common.segment_definition.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **common.segment_definition.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **common.segment_definition.segment_definition_id**
        * - `int4` in database
        * - Generated column
        */
        segment_definition_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_definition.segment_profile_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_profile_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_definition.rule**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        rule?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_definition.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_definition.schedule**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        schedule?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_definition.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_definition.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_definition.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.segment_definition.segment_profile_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_profile_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.segment_definition.rule**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        rule: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.segment_definition.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.segment_definition.schedule**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        schedule: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.segment_definition.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.segment_definition.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.segment_definition.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.segment_definition.segment_profile_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_profile_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.segment_definition.rule**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        rule?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.segment_definition.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.segment_definition.schedule**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        schedule?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.segment_definition.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.segment_definition.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.segment_definition.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'segment_definition_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.segment_destination_definition**
     * - Table in database
     */
    export namespace segment_destination_definition {
      export type Table = 'common.segment_destination_definition';
      export interface Selectable {
        /**
        * **common.segment_destination_definition.segment_destination_definition_id**
        * - `int8` in database
        * - Generated column
        */
        segment_destination_definition_id: db.Int8String;
        /**
        * **common.segment_destination_definition.destination**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        destination: string;
        /**
        * **common.segment_destination_definition.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **common.segment_destination_definition.description**
        * - `text` in database
        * - Nullable, no default
        */
        description: string | null;
        /**
        * **common.segment_destination_definition.destination_parameters**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        destination_parameters: db.JSONValue;
        /**
        * **common.segment_destination_definition.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **common.segment_destination_definition.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **common.segment_destination_definition.segment_destination_definition_id**
        * - `int8` in database
        * - Generated column
        */
        segment_destination_definition_id: number;
        /**
        * **common.segment_destination_definition.destination**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        destination: string;
        /**
        * **common.segment_destination_definition.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **common.segment_destination_definition.description**
        * - `text` in database
        * - Nullable, no default
        */
        description: string | null;
        /**
        * **common.segment_destination_definition.destination_parameters**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        destination_parameters: db.JSONValue;
        /**
        * **common.segment_destination_definition.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **common.segment_destination_definition.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **common.segment_destination_definition.segment_destination_definition_id**
        * - `int8` in database
        * - Generated column
        */
        segment_destination_definition_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_destination_definition.destination**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        destination?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_destination_definition.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_destination_definition.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_destination_definition.destination_parameters**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        destination_parameters?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_destination_definition.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_destination_definition.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.segment_destination_definition.destination**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        destination: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.segment_destination_definition.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.segment_destination_definition.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.segment_destination_definition.destination_parameters**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        destination_parameters: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment;
        /**
        * **common.segment_destination_definition.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.segment_destination_definition.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.segment_destination_definition.destination**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        destination?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.segment_destination_definition.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.segment_destination_definition.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.segment_destination_definition.destination_parameters**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        destination_parameters?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment>;
        /**
        * **common.segment_destination_definition.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.segment_destination_definition.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'segment_destination_definition_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.segment_destination_mapping**
     * - Table in database
     */
    export namespace segment_destination_mapping {
      export type Table = 'common.segment_destination_mapping';
      export interface Selectable {
        /**
        * **common.segment_destination_mapping.segment_destination_mapping_id**
        * - `int4` in database
        * - Generated column
        */
        segment_destination_mapping_id: number;
        /**
        * **common.segment_destination_mapping.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id: number;
        /**
        * **common.segment_destination_mapping.segment_destination_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_destination_definition_id: number;
        /**
        * **common.segment_destination_mapping.destination_config**
        * - `jsonb` in database
        * - Nullable, no default
        */
        destination_config: db.JSONValue | null;
        /**
        * **common.segment_destination_mapping.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **common.segment_destination_mapping.segment_destination_mapping_id**
        * - `int4` in database
        * - Generated column
        */
        segment_destination_mapping_id: number;
        /**
        * **common.segment_destination_mapping.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id: number;
        /**
        * **common.segment_destination_mapping.segment_destination_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_destination_definition_id: number;
        /**
        * **common.segment_destination_mapping.destination_config**
        * - `jsonb` in database
        * - Nullable, no default
        */
        destination_config: db.JSONValue | null;
        /**
        * **common.segment_destination_mapping.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **common.segment_destination_mapping.segment_destination_mapping_id**
        * - `int4` in database
        * - Generated column
        */
        segment_destination_mapping_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_destination_mapping.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_destination_mapping.segment_destination_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_destination_definition_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_destination_mapping.destination_config**
        * - `jsonb` in database
        * - Nullable, no default
        */
        destination_config?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_destination_mapping.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.segment_destination_mapping.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.segment_destination_mapping.segment_destination_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_destination_definition_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.segment_destination_mapping.destination_config**
        * - `jsonb` in database
        * - Nullable, no default
        */
        destination_config?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.segment_destination_mapping.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.segment_destination_mapping.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.segment_destination_mapping.segment_destination_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_destination_definition_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.segment_destination_mapping.destination_config**
        * - `jsonb` in database
        * - Nullable, no default
        */
        destination_config?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.segment_destination_mapping.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'segment_destination_mapping_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.segment_destination_sync**
     * - Table in database
     */
    export namespace segment_destination_sync {
      export type Table = 'common.segment_destination_sync';
      export interface Selectable {
        /**
        * **common.segment_destination_sync.segment_destination_sync_id**
        * - `int4` in database
        * - Generated column
        */
        segment_destination_sync_id: number;
        /**
        * **common.segment_destination_sync.segment_destination_mapping_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_destination_mapping_id: number;
        /**
        * **common.segment_destination_sync.sync_status**
        * - `text` in database
        * - Nullable, no default
        */
        sync_status: string | null;
        /**
        * **common.segment_destination_sync.stats**
        * - `jsonb` in database
        * - Nullable, no default
        */
        stats: db.JSONValue | null;
        /**
        * **common.segment_destination_sync.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **common.segment_destination_sync.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **common.segment_destination_sync.segment_destination_sync_id**
        * - `int4` in database
        * - Generated column
        */
        segment_destination_sync_id: number;
        /**
        * **common.segment_destination_sync.segment_destination_mapping_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_destination_mapping_id: number;
        /**
        * **common.segment_destination_sync.sync_status**
        * - `text` in database
        * - Nullable, no default
        */
        sync_status: string | null;
        /**
        * **common.segment_destination_sync.stats**
        * - `jsonb` in database
        * - Nullable, no default
        */
        stats: db.JSONValue | null;
        /**
        * **common.segment_destination_sync.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **common.segment_destination_sync.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **common.segment_destination_sync.segment_destination_sync_id**
        * - `int4` in database
        * - Generated column
        */
        segment_destination_sync_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_destination_sync.segment_destination_mapping_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_destination_mapping_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_destination_sync.sync_status**
        * - `text` in database
        * - Nullable, no default
        */
        sync_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_destination_sync.stats**
        * - `jsonb` in database
        * - Nullable, no default
        */
        stats?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_destination_sync.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_destination_sync.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.segment_destination_sync.segment_destination_mapping_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_destination_mapping_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.segment_destination_sync.sync_status**
        * - `text` in database
        * - Nullable, no default
        */
        sync_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.segment_destination_sync.stats**
        * - `jsonb` in database
        * - Nullable, no default
        */
        stats?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.segment_destination_sync.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.segment_destination_sync.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.segment_destination_sync.segment_destination_mapping_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_destination_mapping_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.segment_destination_sync.sync_status**
        * - `text` in database
        * - Nullable, no default
        */
        sync_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.segment_destination_sync.stats**
        * - `jsonb` in database
        * - Nullable, no default
        */
        stats?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.segment_destination_sync.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.segment_destination_sync.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'segment_destination_sync_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.segment_member**
     * - Table in database
     */
    export namespace segment_member {
      export type Table = 'common.segment_member';
      export interface Selectable {
        /**
        * **common.segment_member.segment_member_id**
        * - `int4` in database
        * - Generated column
        */
        segment_member_id: number;
        /**
        * **common.segment_member.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id: number;
        /**
        * **common.segment_member.segment_sync_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_sync_id: number;
        /**
        * **common.segment_member.member_id**
        * - `int4` in database
        * - Nullable, no default
        */
        member_id: number | null;
        /**
        * **common.segment_member.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **common.segment_member.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **common.segment_member.segment_member_id**
        * - `int4` in database
        * - Generated column
        */
        segment_member_id: number;
        /**
        * **common.segment_member.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id: number;
        /**
        * **common.segment_member.segment_sync_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_sync_id: number;
        /**
        * **common.segment_member.member_id**
        * - `int4` in database
        * - Nullable, no default
        */
        member_id: number | null;
        /**
        * **common.segment_member.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **common.segment_member.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **common.segment_member.segment_member_id**
        * - `int4` in database
        * - Generated column
        */
        segment_member_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_member.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_member.segment_sync_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_sync_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_member.member_id**
        * - `int4` in database
        * - Nullable, no default
        */
        member_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_member.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_member.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.segment_member.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.segment_member.segment_sync_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_sync_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.segment_member.member_id**
        * - `int4` in database
        * - Nullable, no default
        */
        member_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.segment_member.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.segment_member.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.segment_member.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.segment_member.segment_sync_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_sync_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.segment_member.member_id**
        * - `int4` in database
        * - Nullable, no default
        */
        member_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.segment_member.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.segment_member.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'segment_member_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.segment_member_history**
     * - Table in database
     */
    export namespace segment_member_history {
      export type Table = 'common.segment_member_history';
      export interface Selectable {
        /**
        * **common.segment_member_history.segment_member_history_id**
        * - `int4` in database
        * - Generated column
        */
        segment_member_history_id: number;
        /**
        * **common.segment_member_history.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id: number;
        /**
        * **common.segment_member_history.segment_sync_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_sync_id: number;
        /**
        * **common.segment_member_history.member_id**
        * - `int4` in database
        * - Nullable, no default
        */
        member_id: number | null;
        /**
        * **common.segment_member_history.operation**
        * - `text` in database
        * - Nullable, no default
        */
        operation: string | null;
        /**
        * **common.segment_member_history.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **common.segment_member_history.segment_member_history_id**
        * - `int4` in database
        * - Generated column
        */
        segment_member_history_id: number;
        /**
        * **common.segment_member_history.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id: number;
        /**
        * **common.segment_member_history.segment_sync_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_sync_id: number;
        /**
        * **common.segment_member_history.member_id**
        * - `int4` in database
        * - Nullable, no default
        */
        member_id: number | null;
        /**
        * **common.segment_member_history.operation**
        * - `text` in database
        * - Nullable, no default
        */
        operation: string | null;
        /**
        * **common.segment_member_history.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **common.segment_member_history.segment_member_history_id**
        * - `int4` in database
        * - Generated column
        */
        segment_member_history_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_member_history.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_member_history.segment_sync_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_sync_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_member_history.member_id**
        * - `int4` in database
        * - Nullable, no default
        */
        member_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_member_history.operation**
        * - `text` in database
        * - Nullable, no default
        */
        operation?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_member_history.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.segment_member_history.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.segment_member_history.segment_sync_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_sync_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.segment_member_history.member_id**
        * - `int4` in database
        * - Nullable, no default
        */
        member_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.segment_member_history.operation**
        * - `text` in database
        * - Nullable, no default
        */
        operation?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.segment_member_history.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.segment_member_history.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.segment_member_history.segment_sync_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_sync_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.segment_member_history.member_id**
        * - `int4` in database
        * - Nullable, no default
        */
        member_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.segment_member_history.operation**
        * - `text` in database
        * - Nullable, no default
        */
        operation?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.segment_member_history.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'segment_member_history_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.segment_profile**
     * - Table in database
     */
    export namespace segment_profile {
      export type Table = 'common.segment_profile';
      export interface Selectable {
        /**
        * **common.segment_profile.segment_profile_id**
        * - `int4` in database
        * - Generated column
        */
        segment_profile_id: number;
        /**
        * **common.segment_profile.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string;
        /**
        * **common.segment_profile.profile_schema**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        profile_schema: db.JSONValue;
        /**
        * **common.segment_profile.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **common.segment_profile.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string;
        /**
        * **common.segment_profile.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **common.segment_profile.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
        /**
        * **common.segment_profile.segment_member_id_column**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        segment_member_id_column: string;
      }
      export interface JSONSelectable {
        /**
        * **common.segment_profile.segment_profile_id**
        * - `int4` in database
        * - Generated column
        */
        segment_profile_id: number;
        /**
        * **common.segment_profile.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string;
        /**
        * **common.segment_profile.profile_schema**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        profile_schema: db.JSONValue;
        /**
        * **common.segment_profile.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **common.segment_profile.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string;
        /**
        * **common.segment_profile.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **common.segment_profile.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
        /**
        * **common.segment_profile.segment_member_id_column**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        segment_member_id_column: string;
      }
      export interface Whereable {
        /**
        * **common.segment_profile.segment_profile_id**
        * - `int4` in database
        * - Generated column
        */
        segment_profile_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_profile.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_profile.profile_schema**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        profile_schema?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_profile.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_profile.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_profile.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_profile.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_profile.segment_member_id_column**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        segment_member_id_column?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.segment_profile.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.segment_profile.profile_schema**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        profile_schema: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment;
        /**
        * **common.segment_profile.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.segment_profile.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.segment_profile.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.segment_profile.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.segment_profile.segment_member_id_column**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        segment_member_id_column: string | db.Parameter<string> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.segment_profile.query**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        query?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.segment_profile.profile_schema**
        * - `jsonb` in database
        * - `NOT NULL`, no default
        */
        profile_schema?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment>;
        /**
        * **common.segment_profile.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.segment_profile.description**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.segment_profile.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.segment_profile.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.segment_profile.segment_member_id_column**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        segment_member_id_column?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      }
      export type UniqueIndex = 'segment_profile_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.segment_sync**
     * - Table in database
     */
    export namespace segment_sync {
      export type Table = 'common.segment_sync';
      export interface Selectable {
        /**
        * **common.segment_sync.segment_sync_id**
        * - `int4` in database
        * - Generated column
        */
        segment_sync_id: number;
        /**
        * **common.segment_sync.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id: number;
        /**
        * **common.segment_sync.sync_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        sync_status: string;
        /**
        * **common.segment_sync.stats**
        * - `jsonb` in database
        * - Nullable, no default
        */
        stats: db.JSONValue | null;
        /**
        * **common.segment_sync.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **common.segment_sync.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **common.segment_sync.segment_sync_id**
        * - `int4` in database
        * - Generated column
        */
        segment_sync_id: number;
        /**
        * **common.segment_sync.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id: number;
        /**
        * **common.segment_sync.sync_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        sync_status: string;
        /**
        * **common.segment_sync.stats**
        * - `jsonb` in database
        * - Nullable, no default
        */
        stats: db.JSONValue | null;
        /**
        * **common.segment_sync.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **common.segment_sync.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **common.segment_sync.segment_sync_id**
        * - `int4` in database
        * - Generated column
        */
        segment_sync_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_sync.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_sync.sync_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        sync_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_sync.stats**
        * - `jsonb` in database
        * - Nullable, no default
        */
        stats?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_sync.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.segment_sync.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.segment_sync.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **common.segment_sync.sync_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        sync_status: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.segment_sync.stats**
        * - `jsonb` in database
        * - Nullable, no default
        */
        stats?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **common.segment_sync.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.segment_sync.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.segment_sync.segment_definition_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_definition_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **common.segment_sync.sync_status**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        sync_status?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.segment_sync.stats**
        * - `jsonb` in database
        * - Nullable, no default
        */
        stats?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **common.segment_sync.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.segment_sync.updated_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'segment_sync_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.state**
     * - Table in database
     */
    export namespace state {
      export type Table = 'common.state';
      export interface Selectable {
        /**
        * **common.state.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string;
      }
      export interface JSONSelectable {
        /**
        * **common.state.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string;
      }
      export interface Whereable {
        /**
        * **common.state.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.state.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state: string | db.Parameter<string> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.state.state**
        * - `bpchar` in database
        * - `NOT NULL`, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      }
      export type UniqueIndex = 'state_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.sync_token**
     * - Table in database
     */
    export namespace sync_token {
      export type Table = 'common.sync_token';
      export interface Selectable {
        /**
        * **common.sync_token.name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        name: string;
        /**
        * **common.sync_token.value**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        value: string;
        /**
        * **common.sync_token.created**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created: Date;
        /**
        * **common.sync_token.updated**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated: Date;
      }
      export interface JSONSelectable {
        /**
        * **common.sync_token.name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        name: string;
        /**
        * **common.sync_token.value**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        value: string;
        /**
        * **common.sync_token.created**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created: db.TimestampTzString;
        /**
        * **common.sync_token.updated**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated: db.TimestampTzString;
      }
      export interface Whereable {
        /**
        * **common.sync_token.name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.sync_token.value**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        value?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.sync_token.created**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.sync_token.updated**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.sync_token.name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.sync_token.value**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        value: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.sync_token.created**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **common.sync_token.updated**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.sync_token.name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.sync_token.value**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        value?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.sync_token.created**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        created?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.sync_token.updated**
        * - `timestamptz` in database
        * - `NOT NULL`, default: `now()`
        */
        updated?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'sync_token_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **common.timezone**
     * - Table in database
     */
    export namespace timezone {
      export type Table = 'common.timezone';
      export interface Selectable {
        /**
        * **common.timezone.id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.timezone_id_seq'::regclass)`
        */
        id: number;
        /**
        * **common.timezone.iana_timezone**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        iana_timezone: string;
        /**
        * **common.timezone.us_timezone_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        us_timezone_code: string;
        /**
        * **common.timezone.timezone_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        timezone_name: string;
      }
      export interface JSONSelectable {
        /**
        * **common.timezone.id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.timezone_id_seq'::regclass)`
        */
        id: number;
        /**
        * **common.timezone.iana_timezone**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        iana_timezone: string;
        /**
        * **common.timezone.us_timezone_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        us_timezone_code: string;
        /**
        * **common.timezone.timezone_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        timezone_name: string;
      }
      export interface Whereable {
        /**
        * **common.timezone.id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.timezone_id_seq'::regclass)`
        */
        id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.timezone.iana_timezone**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        iana_timezone?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.timezone.us_timezone_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        us_timezone_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **common.timezone.timezone_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        timezone_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **common.timezone.id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.timezone_id_seq'::regclass)`
        */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **common.timezone.iana_timezone**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        iana_timezone: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.timezone.us_timezone_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        us_timezone_code: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **common.timezone.timezone_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        timezone_name: string | db.Parameter<string> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **common.timezone.id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('common.timezone_id_seq'::regclass)`
        */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **common.timezone.iana_timezone**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        iana_timezone?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.timezone.us_timezone_code**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        us_timezone_code?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **common.timezone.timezone_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        timezone_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      }
      export type UniqueIndex = 'timezone_iana_timezone_key' | 'timezone_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /* --- aggregate types --- */
  
    export type Table = account.Table | account_membership.Table | company_holiday.Table | dnc_audit_email.Table | dnc_audit_identity.Table | dnc_audit_phone.Table | dnc_entry_email.Table | dnc_entry_identity.Table | dnc_entry_phone.Table | dnc_list_email.Table | dnc_list_phone.Table | eligibility_member.Table | employee.Table | flow_task_log.Table | language_iso6391.Table | meeting_participant.Table | outbound_file_config.Table | program.Table | program_contract.Table | program_membership.Table | program_membership_history.Table | program_rule.Table | referral_config.Table | referral_source.Table | rippling_user.Table | segment_definition.Table | segment_destination_definition.Table | segment_destination_mapping.Table | segment_destination_sync.Table | segment_member.Table | segment_member_history.Table | segment_profile.Table | segment_sync.Table | state.Table | sync_token.Table | timezone.Table;
    export type Selectable = account.Selectable | account_membership.Selectable | company_holiday.Selectable | dnc_audit_email.Selectable | dnc_audit_identity.Selectable | dnc_audit_phone.Selectable | dnc_entry_email.Selectable | dnc_entry_identity.Selectable | dnc_entry_phone.Selectable | dnc_list_email.Selectable | dnc_list_phone.Selectable | eligibility_member.Selectable | employee.Selectable | flow_task_log.Selectable | language_iso6391.Selectable | meeting_participant.Selectable | outbound_file_config.Selectable | program.Selectable | program_contract.Selectable | program_membership.Selectable | program_membership_history.Selectable | program_rule.Selectable | referral_config.Selectable | referral_source.Selectable | rippling_user.Selectable | segment_definition.Selectable | segment_destination_definition.Selectable | segment_destination_mapping.Selectable | segment_destination_sync.Selectable | segment_member.Selectable | segment_member_history.Selectable | segment_profile.Selectable | segment_sync.Selectable | state.Selectable | sync_token.Selectable | timezone.Selectable;
    export type JSONSelectable = account.JSONSelectable | account_membership.JSONSelectable | company_holiday.JSONSelectable | dnc_audit_email.JSONSelectable | dnc_audit_identity.JSONSelectable | dnc_audit_phone.JSONSelectable | dnc_entry_email.JSONSelectable | dnc_entry_identity.JSONSelectable | dnc_entry_phone.JSONSelectable | dnc_list_email.JSONSelectable | dnc_list_phone.JSONSelectable | eligibility_member.JSONSelectable | employee.JSONSelectable | flow_task_log.JSONSelectable | language_iso6391.JSONSelectable | meeting_participant.JSONSelectable | outbound_file_config.JSONSelectable | program.JSONSelectable | program_contract.JSONSelectable | program_membership.JSONSelectable | program_membership_history.JSONSelectable | program_rule.JSONSelectable | referral_config.JSONSelectable | referral_source.JSONSelectable | rippling_user.JSONSelectable | segment_definition.JSONSelectable | segment_destination_definition.JSONSelectable | segment_destination_mapping.JSONSelectable | segment_destination_sync.JSONSelectable | segment_member.JSONSelectable | segment_member_history.JSONSelectable | segment_profile.JSONSelectable | segment_sync.JSONSelectable | state.JSONSelectable | sync_token.JSONSelectable | timezone.JSONSelectable;
    export type Whereable = account.Whereable | account_membership.Whereable | company_holiday.Whereable | dnc_audit_email.Whereable | dnc_audit_identity.Whereable | dnc_audit_phone.Whereable | dnc_entry_email.Whereable | dnc_entry_identity.Whereable | dnc_entry_phone.Whereable | dnc_list_email.Whereable | dnc_list_phone.Whereable | eligibility_member.Whereable | employee.Whereable | flow_task_log.Whereable | language_iso6391.Whereable | meeting_participant.Whereable | outbound_file_config.Whereable | program.Whereable | program_contract.Whereable | program_membership.Whereable | program_membership_history.Whereable | program_rule.Whereable | referral_config.Whereable | referral_source.Whereable | rippling_user.Whereable | segment_definition.Whereable | segment_destination_definition.Whereable | segment_destination_mapping.Whereable | segment_destination_sync.Whereable | segment_member.Whereable | segment_member_history.Whereable | segment_profile.Whereable | segment_sync.Whereable | state.Whereable | sync_token.Whereable | timezone.Whereable;
    export type Insertable = account.Insertable | account_membership.Insertable | company_holiday.Insertable | dnc_audit_email.Insertable | dnc_audit_identity.Insertable | dnc_audit_phone.Insertable | dnc_entry_email.Insertable | dnc_entry_identity.Insertable | dnc_entry_phone.Insertable | dnc_list_email.Insertable | dnc_list_phone.Insertable | eligibility_member.Insertable | employee.Insertable | flow_task_log.Insertable | language_iso6391.Insertable | meeting_participant.Insertable | outbound_file_config.Insertable | program.Insertable | program_contract.Insertable | program_membership.Insertable | program_membership_history.Insertable | program_rule.Insertable | referral_config.Insertable | referral_source.Insertable | rippling_user.Insertable | segment_definition.Insertable | segment_destination_definition.Insertable | segment_destination_mapping.Insertable | segment_destination_sync.Insertable | segment_member.Insertable | segment_member_history.Insertable | segment_profile.Insertable | segment_sync.Insertable | state.Insertable | sync_token.Insertable | timezone.Insertable;
    export type Updatable = account.Updatable | account_membership.Updatable | company_holiday.Updatable | dnc_audit_email.Updatable | dnc_audit_identity.Updatable | dnc_audit_phone.Updatable | dnc_entry_email.Updatable | dnc_entry_identity.Updatable | dnc_entry_phone.Updatable | dnc_list_email.Updatable | dnc_list_phone.Updatable | eligibility_member.Updatable | employee.Updatable | flow_task_log.Updatable | language_iso6391.Updatable | meeting_participant.Updatable | outbound_file_config.Updatable | program.Updatable | program_contract.Updatable | program_membership.Updatable | program_membership_history.Updatable | program_rule.Updatable | referral_config.Updatable | referral_source.Updatable | rippling_user.Updatable | segment_definition.Updatable | segment_destination_definition.Updatable | segment_destination_mapping.Updatable | segment_destination_sync.Updatable | segment_member.Updatable | segment_member_history.Updatable | segment_profile.Updatable | segment_sync.Updatable | state.Updatable | sync_token.Updatable | timezone.Updatable;
    export type UniqueIndex = account.UniqueIndex | account_membership.UniqueIndex | company_holiday.UniqueIndex | dnc_audit_email.UniqueIndex | dnc_audit_identity.UniqueIndex | dnc_audit_phone.UniqueIndex | dnc_entry_email.UniqueIndex | dnc_entry_identity.UniqueIndex | dnc_entry_phone.UniqueIndex | dnc_list_email.UniqueIndex | dnc_list_phone.UniqueIndex | eligibility_member.UniqueIndex | employee.UniqueIndex | flow_task_log.UniqueIndex | language_iso6391.UniqueIndex | meeting_participant.UniqueIndex | outbound_file_config.UniqueIndex | program.UniqueIndex | program_contract.UniqueIndex | program_membership.UniqueIndex | program_membership_history.UniqueIndex | program_rule.UniqueIndex | referral_config.UniqueIndex | referral_source.UniqueIndex | rippling_user.UniqueIndex | segment_definition.UniqueIndex | segment_destination_definition.UniqueIndex | segment_destination_mapping.UniqueIndex | segment_destination_sync.UniqueIndex | segment_member.UniqueIndex | segment_member_history.UniqueIndex | segment_profile.UniqueIndex | segment_sync.UniqueIndex | state.UniqueIndex | sync_token.UniqueIndex | timezone.UniqueIndex;
    export type Column = account.Column | account_membership.Column | company_holiday.Column | dnc_audit_email.Column | dnc_audit_identity.Column | dnc_audit_phone.Column | dnc_entry_email.Column | dnc_entry_identity.Column | dnc_entry_phone.Column | dnc_list_email.Column | dnc_list_phone.Column | eligibility_member.Column | employee.Column | flow_task_log.Column | language_iso6391.Column | meeting_participant.Column | outbound_file_config.Column | program.Column | program_contract.Column | program_membership.Column | program_membership_history.Column | program_rule.Column | referral_config.Column | referral_source.Column | rippling_user.Column | segment_definition.Column | segment_destination_definition.Column | segment_destination_mapping.Column | segment_destination_sync.Column | segment_member.Column | segment_member_history.Column | segment_profile.Column | segment_sync.Column | state.Column | sync_token.Column | timezone.Column;
  
    export type AllBaseTables = [account.Table, account_membership.Table, company_holiday.Table, dnc_audit_email.Table, dnc_audit_identity.Table, dnc_audit_phone.Table, dnc_entry_email.Table, dnc_entry_identity.Table, dnc_entry_phone.Table, eligibility_member.Table, employee.Table, flow_task_log.Table, language_iso6391.Table, meeting_participant.Table, outbound_file_config.Table, program.Table, program_contract.Table, program_membership.Table, program_membership_history.Table, program_rule.Table, referral_config.Table, referral_source.Table, rippling_user.Table, segment_definition.Table, segment_destination_definition.Table, segment_destination_mapping.Table, segment_destination_sync.Table, segment_member.Table, segment_member_history.Table, segment_profile.Table, segment_sync.Table, state.Table, sync_token.Table, timezone.Table];
    export type AllForeignTables = [];
    export type AllViews = [];
    export type AllMaterializedViews = [dnc_list_email.Table, dnc_list_phone.Table];
    export type AllTablesAndViews = [account.Table, account_membership.Table, company_holiday.Table, dnc_audit_email.Table, dnc_audit_identity.Table, dnc_audit_phone.Table, dnc_entry_email.Table, dnc_entry_identity.Table, dnc_entry_phone.Table, dnc_list_email.Table, dnc_list_phone.Table, eligibility_member.Table, employee.Table, flow_task_log.Table, language_iso6391.Table, meeting_participant.Table, outbound_file_config.Table, program.Table, program_contract.Table, program_membership.Table, program_membership_history.Table, program_rule.Table, referral_config.Table, referral_source.Table, rippling_user.Table, segment_definition.Table, segment_destination_definition.Table, segment_destination_mapping.Table, segment_destination_sync.Table, segment_member.Table, segment_member_history.Table, segment_profile.Table, segment_sync.Table, state.Table, sync_token.Table, timezone.Table];
  }


  /* === schema: marketing === */

  export namespace marketing {
  
    /* --- enums --- */
    /* (none) */
  
    /* --- tables --- */
  
    /**
     * **marketing.cio_customer**
     * - Table in database
     */
    export namespace cio_customer {
      export type Table = 'marketing.cio_customer';
      export interface Selectable {
        /**
        * **marketing.cio_customer.id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        id: string;
        /**
        * **marketing.cio_customer.hash**
        * - `bpchar` in database
        * - Nullable, no default
        */
        hash: string | null;
        /**
        * **marketing.cio_customer.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **marketing.cio_customer.id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        id: string;
        /**
        * **marketing.cio_customer.hash**
        * - `bpchar` in database
        * - Nullable, no default
        */
        hash: string | null;
        /**
        * **marketing.cio_customer.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **marketing.cio_customer.id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_customer.hash**
        * - `bpchar` in database
        * - Nullable, no default
        */
        hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_customer.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **marketing.cio_customer.id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **marketing.cio_customer.hash**
        * - `bpchar` in database
        * - Nullable, no default
        */
        hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **marketing.cio_customer.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **marketing.cio_customer.id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **marketing.cio_customer.hash**
        * - `bpchar` in database
        * - Nullable, no default
        */
        hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **marketing.cio_customer.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'cio_customer_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **marketing.cio_customer_sync**
     * - Table in database
     */
    export namespace cio_customer_sync {
      export type Table = 'marketing.cio_customer_sync';
      export interface Selectable {
        /**
        * **marketing.cio_customer_sync.customer_sync_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('marketing.cio_customer_sync_customer_sync_id_seq'::regclass)`
        */
        customer_sync_id: number;
        /**
        * **marketing.cio_customer_sync.status**
        * - `int2` in database
        * - `NOT NULL`, default: `0`
        */
        status: number;
        /**
        * **marketing.cio_customer_sync.result**
        * - `jsonb` in database
        * - Nullable, no default
        */
        result: db.JSONValue | null;
        /**
        * **marketing.cio_customer_sync.started_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        started_at: Date;
        /**
        * **marketing.cio_customer_sync.stopped_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        stopped_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **marketing.cio_customer_sync.customer_sync_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('marketing.cio_customer_sync_customer_sync_id_seq'::regclass)`
        */
        customer_sync_id: number;
        /**
        * **marketing.cio_customer_sync.status**
        * - `int2` in database
        * - `NOT NULL`, default: `0`
        */
        status: number;
        /**
        * **marketing.cio_customer_sync.result**
        * - `jsonb` in database
        * - Nullable, no default
        */
        result: db.JSONValue | null;
        /**
        * **marketing.cio_customer_sync.started_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        started_at: db.TimestampString;
        /**
        * **marketing.cio_customer_sync.stopped_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        stopped_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **marketing.cio_customer_sync.customer_sync_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('marketing.cio_customer_sync_customer_sync_id_seq'::regclass)`
        */
        customer_sync_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_customer_sync.status**
        * - `int2` in database
        * - `NOT NULL`, default: `0`
        */
        status?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_customer_sync.result**
        * - `jsonb` in database
        * - Nullable, no default
        */
        result?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_customer_sync.started_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        started_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_customer_sync.stopped_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        stopped_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **marketing.cio_customer_sync.customer_sync_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('marketing.cio_customer_sync_customer_sync_id_seq'::regclass)`
        */
        customer_sync_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **marketing.cio_customer_sync.status**
        * - `int2` in database
        * - `NOT NULL`, default: `0`
        */
        status?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **marketing.cio_customer_sync.result**
        * - `jsonb` in database
        * - Nullable, no default
        */
        result?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **marketing.cio_customer_sync.started_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        started_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **marketing.cio_customer_sync.stopped_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        stopped_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **marketing.cio_customer_sync.customer_sync_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('marketing.cio_customer_sync_customer_sync_id_seq'::regclass)`
        */
        customer_sync_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **marketing.cio_customer_sync.status**
        * - `int2` in database
        * - `NOT NULL`, default: `0`
        */
        status?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **marketing.cio_customer_sync.result**
        * - `jsonb` in database
        * - Nullable, no default
        */
        result?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **marketing.cio_customer_sync.started_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        started_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **marketing.cio_customer_sync.stopped_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        stopped_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'cio_customer_sync_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **marketing.cio_segment**
     * - Table in database
     */
    export namespace cio_segment {
      export type Table = 'marketing.cio_segment';
      export interface Selectable {
        /**
        * **marketing.cio_segment.segment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_id: number;
        /**
        * **marketing.cio_segment.segment_run_id**
        * - `int4` in database
        * - Nullable, no default
        */
        segment_run_id: number | null;
        /**
        * **marketing.cio_segment.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name: string;
        /**
        * **marketing.cio_segment.description**
        * - `text` in database
        * - Nullable, no default
        */
        description: string | null;
        /**
        * **marketing.cio_segment.sql**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        sql: string;
        /**
        * **marketing.cio_segment.count**
        * - `int4` in database
        * - `NOT NULL`, default: `0`
        */
        count: number;
        /**
        * **marketing.cio_segment.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: Date | null;
        /**
        * **marketing.cio_segment.run_interval**
        * - `interval` in database
        * - Nullable, no default
        */
        run_interval: string | null;
      }
      export interface JSONSelectable {
        /**
        * **marketing.cio_segment.segment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_id: number;
        /**
        * **marketing.cio_segment.segment_run_id**
        * - `int4` in database
        * - Nullable, no default
        */
        segment_run_id: number | null;
        /**
        * **marketing.cio_segment.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name: string;
        /**
        * **marketing.cio_segment.description**
        * - `text` in database
        * - Nullable, no default
        */
        description: string | null;
        /**
        * **marketing.cio_segment.sql**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        sql: string;
        /**
        * **marketing.cio_segment.count**
        * - `int4` in database
        * - `NOT NULL`, default: `0`
        */
        count: number;
        /**
        * **marketing.cio_segment.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at: db.TimestampString | null;
        /**
        * **marketing.cio_segment.run_interval**
        * - `interval` in database
        * - Nullable, no default
        */
        run_interval: string | null;
      }
      export interface Whereable {
        /**
        * **marketing.cio_segment.segment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_segment.segment_run_id**
        * - `int4` in database
        * - Nullable, no default
        */
        segment_run_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_segment.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_segment.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_segment.sql**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        sql?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_segment.count**
        * - `int4` in database
        * - `NOT NULL`, default: `0`
        */
        count?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_segment.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_segment.run_interval**
        * - `interval` in database
        * - Nullable, no default
        */
        run_interval?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **marketing.cio_segment.segment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **marketing.cio_segment.segment_run_id**
        * - `int4` in database
        * - Nullable, no default
        */
        segment_run_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **marketing.cio_segment.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **marketing.cio_segment.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **marketing.cio_segment.sql**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        sql: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **marketing.cio_segment.count**
        * - `int4` in database
        * - `NOT NULL`, default: `0`
        */
        count?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **marketing.cio_segment.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **marketing.cio_segment.run_interval**
        * - `interval` in database
        * - Nullable, no default
        */
        run_interval?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **marketing.cio_segment.segment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **marketing.cio_segment.segment_run_id**
        * - `int4` in database
        * - Nullable, no default
        */
        segment_run_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **marketing.cio_segment.name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **marketing.cio_segment.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **marketing.cio_segment.sql**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        sql?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **marketing.cio_segment.count**
        * - `int4` in database
        * - `NOT NULL`, default: `0`
        */
        count?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **marketing.cio_segment.created_at**
        * - `timestamp` in database
        * - Nullable, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **marketing.cio_segment.run_interval**
        * - `interval` in database
        * - Nullable, no default
        */
        run_interval?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'cio_segment_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **marketing.cio_segment_run**
     * - Table in database
     */
    export namespace cio_segment_run {
      export type Table = 'marketing.cio_segment_run';
      export interface Selectable {
        /**
        * **marketing.cio_segment_run.segment_run_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('marketing.cio_segment_run_segment_run_id_seq'::regclass)`
        */
        segment_run_id: number;
        /**
        * **marketing.cio_segment_run.segment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_id: number;
        /**
        * **marketing.cio_segment_run.status**
        * - `int2` in database
        * - `NOT NULL`, default: `0`
        */
        status: number;
        /**
        * **marketing.cio_segment_run.result**
        * - `jsonb` in database
        * - Nullable, no default
        */
        result: db.JSONValue | null;
        /**
        * **marketing.cio_segment_run.started_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        started_at: Date;
        /**
        * **marketing.cio_segment_run.stopped_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        stopped_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **marketing.cio_segment_run.segment_run_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('marketing.cio_segment_run_segment_run_id_seq'::regclass)`
        */
        segment_run_id: number;
        /**
        * **marketing.cio_segment_run.segment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_id: number;
        /**
        * **marketing.cio_segment_run.status**
        * - `int2` in database
        * - `NOT NULL`, default: `0`
        */
        status: number;
        /**
        * **marketing.cio_segment_run.result**
        * - `jsonb` in database
        * - Nullable, no default
        */
        result: db.JSONValue | null;
        /**
        * **marketing.cio_segment_run.started_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        started_at: db.TimestampString;
        /**
        * **marketing.cio_segment_run.stopped_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        stopped_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **marketing.cio_segment_run.segment_run_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('marketing.cio_segment_run_segment_run_id_seq'::regclass)`
        */
        segment_run_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_segment_run.segment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_segment_run.status**
        * - `int2` in database
        * - `NOT NULL`, default: `0`
        */
        status?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_segment_run.result**
        * - `jsonb` in database
        * - Nullable, no default
        */
        result?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_segment_run.started_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        started_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **marketing.cio_segment_run.stopped_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        stopped_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **marketing.cio_segment_run.segment_run_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('marketing.cio_segment_run_segment_run_id_seq'::regclass)`
        */
        segment_run_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **marketing.cio_segment_run.segment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **marketing.cio_segment_run.status**
        * - `int2` in database
        * - `NOT NULL`, default: `0`
        */
        status?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **marketing.cio_segment_run.result**
        * - `jsonb` in database
        * - Nullable, no default
        */
        result?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
        /**
        * **marketing.cio_segment_run.started_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        started_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **marketing.cio_segment_run.stopped_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        stopped_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **marketing.cio_segment_run.segment_run_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('marketing.cio_segment_run_segment_run_id_seq'::regclass)`
        */
        segment_run_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **marketing.cio_segment_run.segment_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        segment_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **marketing.cio_segment_run.status**
        * - `int2` in database
        * - `NOT NULL`, default: `0`
        */
        status?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **marketing.cio_segment_run.result**
        * - `jsonb` in database
        * - Nullable, no default
        */
        result?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **marketing.cio_segment_run.started_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        started_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **marketing.cio_segment_run.stopped_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        stopped_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'cio_segment_run_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /* --- aggregate types --- */
  
    export type Table = cio_customer.Table | cio_customer_sync.Table | cio_segment.Table | cio_segment_run.Table;
    export type Selectable = cio_customer.Selectable | cio_customer_sync.Selectable | cio_segment.Selectable | cio_segment_run.Selectable;
    export type JSONSelectable = cio_customer.JSONSelectable | cio_customer_sync.JSONSelectable | cio_segment.JSONSelectable | cio_segment_run.JSONSelectable;
    export type Whereable = cio_customer.Whereable | cio_customer_sync.Whereable | cio_segment.Whereable | cio_segment_run.Whereable;
    export type Insertable = cio_customer.Insertable | cio_customer_sync.Insertable | cio_segment.Insertable | cio_segment_run.Insertable;
    export type Updatable = cio_customer.Updatable | cio_customer_sync.Updatable | cio_segment.Updatable | cio_segment_run.Updatable;
    export type UniqueIndex = cio_customer.UniqueIndex | cio_customer_sync.UniqueIndex | cio_segment.UniqueIndex | cio_segment_run.UniqueIndex;
    export type Column = cio_customer.Column | cio_customer_sync.Column | cio_segment.Column | cio_segment_run.Column;
  
    export type AllBaseTables = [cio_customer.Table, cio_customer_sync.Table, cio_segment.Table, cio_segment_run.Table];
    export type AllForeignTables = [];
    export type AllViews = [];
    export type AllMaterializedViews = [];
    export type AllTablesAndViews = [cio_customer.Table, cio_customer_sync.Table, cio_segment.Table, cio_segment_run.Table];
  }


  /* === schema: callcenter === */

  export namespace callcenter {
  
    /* --- enums --- */
    /* (none) */
  
    /* --- tables --- */
  
    /**
     * **callcenter.agent**
     * - Table in database
     */
    export namespace agent {
      export type Table = 'callcenter.agent';
      export interface Selectable {
        /**
        * **callcenter.agent.agent_id**
        * - `int4` in database
        * - Generated column
        */
        agent_id: number;
        /**
        * **callcenter.agent.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **callcenter.agent.email**
        * - `text` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **callcenter.agent.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **callcenter.agent.agent_id**
        * - `int4` in database
        * - Generated column
        */
        agent_id: number;
        /**
        * **callcenter.agent.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **callcenter.agent.email**
        * - `text` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **callcenter.agent.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **callcenter.agent.agent_id**
        * - `int4` in database
        * - Generated column
        */
        agent_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.agent.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.agent.email**
        * - `text` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.agent.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **callcenter.agent.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.agent.email**
        * - `text` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.agent.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **callcenter.agent.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.agent.email**
        * - `text` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.agent.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'agent_email_idx' | 'agent_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **callcenter.calling_list**
     * - Table in database
     */
    export namespace calling_list {
      export type Table = 'callcenter.calling_list';
      export interface Selectable {
        /**
        * **callcenter.calling_list.calling_list_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        calling_list_id: string;
        /**
        * **callcenter.calling_list.campaign_id**
        * - `int4` in database
        * - Nullable, no default
        */
        campaign_id: number | null;
        /**
        * **callcenter.calling_list.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **callcenter.calling_list.script_id**
        * - `int4` in database
        * - Nullable, no default
        */
        script_id: number | null;
        /**
        * **callcenter.calling_list.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **callcenter.calling_list.calling_list_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        calling_list_id: string;
        /**
        * **callcenter.calling_list.campaign_id**
        * - `int4` in database
        * - Nullable, no default
        */
        campaign_id: number | null;
        /**
        * **callcenter.calling_list.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **callcenter.calling_list.script_id**
        * - `int4` in database
        * - Nullable, no default
        */
        script_id: number | null;
        /**
        * **callcenter.calling_list.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **callcenter.calling_list.calling_list_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        calling_list_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.calling_list.campaign_id**
        * - `int4` in database
        * - Nullable, no default
        */
        campaign_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.calling_list.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.calling_list.script_id**
        * - `int4` in database
        * - Nullable, no default
        */
        script_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.calling_list.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **callcenter.calling_list.calling_list_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        calling_list_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **callcenter.calling_list.campaign_id**
        * - `int4` in database
        * - Nullable, no default
        */
        campaign_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.calling_list.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.calling_list.script_id**
        * - `int4` in database
        * - Nullable, no default
        */
        script_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.calling_list.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **callcenter.calling_list.calling_list_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        calling_list_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **callcenter.calling_list.campaign_id**
        * - `int4` in database
        * - Nullable, no default
        */
        campaign_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.calling_list.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.calling_list.script_id**
        * - `int4` in database
        * - Nullable, no default
        */
        script_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.calling_list.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'calling_list_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **callcenter.calling_list_agent**
     * - Table in database
     */
    export namespace calling_list_agent {
      export type Table = 'callcenter.calling_list_agent';
      export interface Selectable {
        /**
        * **callcenter.calling_list_agent.calling_list_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        calling_list_id: string;
        /**
        * **callcenter.calling_list_agent.agent_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        agent_id: number;
        /**
        * **callcenter.calling_list_agent.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **callcenter.calling_list_agent.calling_list_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        calling_list_id: string;
        /**
        * **callcenter.calling_list_agent.agent_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        agent_id: number;
        /**
        * **callcenter.calling_list_agent.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **callcenter.calling_list_agent.calling_list_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        calling_list_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.calling_list_agent.agent_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        agent_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.calling_list_agent.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **callcenter.calling_list_agent.calling_list_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        calling_list_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **callcenter.calling_list_agent.agent_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        agent_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **callcenter.calling_list_agent.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **callcenter.calling_list_agent.calling_list_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        calling_list_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **callcenter.calling_list_agent.agent_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        agent_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **callcenter.calling_list_agent.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'calling_list_agent_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **callcenter.campaign**
     * - Table in database
     */
    export namespace campaign {
      export type Table = 'callcenter.campaign';
      export interface Selectable {
        /**
        * **callcenter.campaign.campaign_id**
        * - `int4` in database
        * - Generated column
        */
        campaign_id: number;
        /**
        * **callcenter.campaign.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **callcenter.campaign.description**
        * - `text` in database
        * - Nullable, no default
        */
        description: string | null;
        /**
        * **callcenter.campaign.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **callcenter.campaign.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **callcenter.campaign.campaign_id**
        * - `int4` in database
        * - Generated column
        */
        campaign_id: number;
        /**
        * **callcenter.campaign.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string;
        /**
        * **callcenter.campaign.description**
        * - `text` in database
        * - Nullable, no default
        */
        description: string | null;
        /**
        * **callcenter.campaign.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **callcenter.campaign.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **callcenter.campaign.campaign_id**
        * - `int4` in database
        * - Generated column
        */
        campaign_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.campaign.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.campaign.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.campaign.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.campaign.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **callcenter.campaign.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **callcenter.campaign.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.campaign.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.campaign.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **callcenter.campaign.label**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **callcenter.campaign.description**
        * - `text` in database
        * - Nullable, no default
        */
        description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.campaign.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.campaign.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'campaign_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **callcenter.dial**
     * - Table in database
     */
    export namespace dial {
      export type Table = 'callcenter.dial';
      export interface Selectable {
        /**
        * **callcenter.dial.dial_id**
        * - `int4` in database
        * - Generated column
        */
        dial_id: number;
        /**
        * **callcenter.dial.lead_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        lead_id: number;
        /**
        * **callcenter.dial.dialed_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        dialed_at: Date | null;
        /**
        * **callcenter.dial.dial_result_id**
        * - `int4` in database
        * - Nullable, no default
        */
        dial_result_id: number | null;
        /**
        * **callcenter.dial.agent_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        agent_id: number;
        /**
        * **callcenter.dial.script_id**
        * - `int4` in database
        * - Nullable, no default
        */
        script_id: number | null;
        /**
        * **callcenter.dial.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **callcenter.dial.dial_id**
        * - `int4` in database
        * - Generated column
        */
        dial_id: number;
        /**
        * **callcenter.dial.lead_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        lead_id: number;
        /**
        * **callcenter.dial.dialed_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        dialed_at: db.TimestampTzString | null;
        /**
        * **callcenter.dial.dial_result_id**
        * - `int4` in database
        * - Nullable, no default
        */
        dial_result_id: number | null;
        /**
        * **callcenter.dial.agent_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        agent_id: number;
        /**
        * **callcenter.dial.script_id**
        * - `int4` in database
        * - Nullable, no default
        */
        script_id: number | null;
        /**
        * **callcenter.dial.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **callcenter.dial.dial_id**
        * - `int4` in database
        * - Generated column
        */
        dial_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.dial.lead_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        lead_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.dial.dialed_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        dialed_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.dial.dial_result_id**
        * - `int4` in database
        * - Nullable, no default
        */
        dial_result_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.dial.agent_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        agent_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.dial.script_id**
        * - `int4` in database
        * - Nullable, no default
        */
        script_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.dial.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **callcenter.dial.lead_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        lead_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **callcenter.dial.dialed_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        dialed_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.dial.dial_result_id**
        * - `int4` in database
        * - Nullable, no default
        */
        dial_result_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.dial.agent_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        agent_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **callcenter.dial.script_id**
        * - `int4` in database
        * - Nullable, no default
        */
        script_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.dial.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **callcenter.dial.lead_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        lead_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **callcenter.dial.dialed_at**
        * - `timestamptz` in database
        * - Nullable, no default
        */
        dialed_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.dial.dial_result_id**
        * - `int4` in database
        * - Nullable, no default
        */
        dial_result_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.dial.agent_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        agent_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **callcenter.dial.script_id**
        * - `int4` in database
        * - Nullable, no default
        */
        script_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.dial.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'dial_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **callcenter.dial_result**
     * - Table in database
     */
    export namespace dial_result {
      export type Table = 'callcenter.dial_result';
      export interface Selectable {
        /**
        * **callcenter.dial_result.dial_result_id**
        * - `int4` in database
        * - Generated column
        */
        dial_result_id: number;
        /**
        * **callcenter.dial_result.label**
        * - `text` in database
        * - Nullable, no default
        */
        label: string | null;
        /**
        * **callcenter.dial_result.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **callcenter.dial_result.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at: Date | null;
        /**
        * **callcenter.dial_result.mapped_result**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        mapped_result: string;
      }
      export interface JSONSelectable {
        /**
        * **callcenter.dial_result.dial_result_id**
        * - `int4` in database
        * - Generated column
        */
        dial_result_id: number;
        /**
        * **callcenter.dial_result.label**
        * - `text` in database
        * - Nullable, no default
        */
        label: string | null;
        /**
        * **callcenter.dial_result.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **callcenter.dial_result.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at: db.TimestampString | null;
        /**
        * **callcenter.dial_result.mapped_result**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        mapped_result: string;
      }
      export interface Whereable {
        /**
        * **callcenter.dial_result.dial_result_id**
        * - `int4` in database
        * - Generated column
        */
        dial_result_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.dial_result.label**
        * - `text` in database
        * - Nullable, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.dial_result.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.dial_result.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.dial_result.mapped_result**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        mapped_result?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **callcenter.dial_result.label**
        * - `text` in database
        * - Nullable, no default
        */
        label?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.dial_result.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.dial_result.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.dial_result.mapped_result**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        mapped_result: string | db.Parameter<string> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **callcenter.dial_result.label**
        * - `text` in database
        * - Nullable, no default
        */
        label?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.dial_result.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.dial_result.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.dial_result.mapped_result**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        mapped_result?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      }
      export type UniqueIndex = 'dial_result_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **callcenter.do_not_call**
     * - Table in database
     */
    export namespace do_not_call {
      export type Table = 'callcenter.do_not_call';
      export interface Selectable {
        /**
        * **callcenter.do_not_call.phone**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        phone: string;
        /**
        * **callcenter.do_not_call.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
      }
      export interface JSONSelectable {
        /**
        * **callcenter.do_not_call.phone**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        phone: string;
        /**
        * **callcenter.do_not_call.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
      }
      export interface Whereable {
        /**
        * **callcenter.do_not_call.phone**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        phone?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.do_not_call.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **callcenter.do_not_call.phone**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        phone: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **callcenter.do_not_call.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **callcenter.do_not_call.phone**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        phone?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **callcenter.do_not_call.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'do_not_call_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **callcenter.lead**
     * - Table in database
     */
    export namespace lead {
      export type Table = 'callcenter.lead';
      export interface Selectable {
        /**
        * **callcenter.lead.lead_id**
        * - `int4` in database
        * - Generated column
        */
        lead_id: number;
        /**
        * **callcenter.lead.status**
        * - `text` in database
        * - `NOT NULL`, default: `0`
        */
        status: string;
        /**
        * **callcenter.lead.first_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        first_name: string;
        /**
        * **callcenter.lead.last_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        last_name: string;
        /**
        * **callcenter.lead.phone**
        * - `_varchar` in database
        * - `NOT NULL`, no default
        */
        phone: string[];
        /**
        * **callcenter.lead.agent_id**
        * - `int4` in database
        * - Nullable, no default
        */
        agent_id: number | null;
        /**
        * **callcenter.lead.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **callcenter.lead.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id: number | null;
        /**
        * **callcenter.lead.eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        eligible_id: number | null;
        /**
        * **callcenter.lead.user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        user_id: number | null;
        /**
        * **callcenter.lead.address**
        * - `text` in database
        * - Nullable, no default
        */
        address: string | null;
        /**
        * **callcenter.lead.address2**
        * - `text` in database
        * - Nullable, no default
        */
        address2: string | null;
        /**
        * **callcenter.lead.city**
        * - `varchar` in database
        * - Nullable, no default
        */
        city: string | null;
        /**
        * **callcenter.lead.state**
        * - `varchar` in database
        * - Nullable, no default
        */
        state: string | null;
        /**
        * **callcenter.lead.postal_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        postal_code: string | null;
        /**
        * **callcenter.lead.dob**
        * - `varchar` in database
        * - Nullable, no default
        */
        dob: string | null;
        /**
        * **callcenter.lead.lang**
        * - `bpchar` in database
        * - Nullable, no default
        */
        lang: string | null;
        /**
        * **callcenter.lead.gender**
        * - `varchar` in database
        * - Nullable, no default
        */
        gender: string | null;
        /**
        * **callcenter.lead.member_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        member_id: string | null;
        /**
        * **callcenter.lead.guardian_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        guardian_name: string | null;
        /**
        * **callcenter.lead.email**
        * - `text` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **callcenter.lead.provider**
        * - `text` in database
        * - Nullable, no default
        */
        provider: string | null;
        /**
        * **callcenter.lead.superpackage**
        * - `text` in database
        * - Nullable, no default
        */
        superpackage: string | null;
        /**
        * **callcenter.lead.program**
        * - `text` in database
        * - Nullable, no default
        */
        program: string | null;
        /**
        * **callcenter.lead.special_program**
        * - `text` in database
        * - Nullable, no default
        */
        special_program: string | null;
        /**
        * **callcenter.lead.last_appointment_date**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_appointment_date: string | null;
        /**
        * **callcenter.lead.followups_completed**
        * - `int2` in database
        * - Nullable, no default
        */
        followups_completed: number | null;
        /**
        * **callcenter.lead.followups_scheduled**
        * - `int2` in database
        * - Nullable, no default
        */
        followups_scheduled: number | null;
        /**
        * **callcenter.lead.calling_list_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        calling_list_id: string;
        /**
        * **callcenter.lead.last_dialed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        last_dialed_at: Date | null;
        /**
        * **callcenter.lead.identity_id**
        * - `int8` in database
        * - Nullable, no default
        */
        identity_id: db.Int8String | null;
        /**
        * **callcenter.lead.schedule_url**
        * - `text` in database
        * - Nullable, no default
        */
        schedule_url: string | null;
        /**
        * **callcenter.lead.group_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        group_id: string | null;
        /**
        * **callcenter.lead.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
      }
      export interface JSONSelectable {
        /**
        * **callcenter.lead.lead_id**
        * - `int4` in database
        * - Generated column
        */
        lead_id: number;
        /**
        * **callcenter.lead.status**
        * - `text` in database
        * - `NOT NULL`, default: `0`
        */
        status: string;
        /**
        * **callcenter.lead.first_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        first_name: string;
        /**
        * **callcenter.lead.last_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        last_name: string;
        /**
        * **callcenter.lead.phone**
        * - `_varchar` in database
        * - `NOT NULL`, no default
        */
        phone: string[];
        /**
        * **callcenter.lead.agent_id**
        * - `int4` in database
        * - Nullable, no default
        */
        agent_id: number | null;
        /**
        * **callcenter.lead.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **callcenter.lead.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id: number | null;
        /**
        * **callcenter.lead.eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        eligible_id: number | null;
        /**
        * **callcenter.lead.user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        user_id: number | null;
        /**
        * **callcenter.lead.address**
        * - `text` in database
        * - Nullable, no default
        */
        address: string | null;
        /**
        * **callcenter.lead.address2**
        * - `text` in database
        * - Nullable, no default
        */
        address2: string | null;
        /**
        * **callcenter.lead.city**
        * - `varchar` in database
        * - Nullable, no default
        */
        city: string | null;
        /**
        * **callcenter.lead.state**
        * - `varchar` in database
        * - Nullable, no default
        */
        state: string | null;
        /**
        * **callcenter.lead.postal_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        postal_code: string | null;
        /**
        * **callcenter.lead.dob**
        * - `varchar` in database
        * - Nullable, no default
        */
        dob: string | null;
        /**
        * **callcenter.lead.lang**
        * - `bpchar` in database
        * - Nullable, no default
        */
        lang: string | null;
        /**
        * **callcenter.lead.gender**
        * - `varchar` in database
        * - Nullable, no default
        */
        gender: string | null;
        /**
        * **callcenter.lead.member_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        member_id: string | null;
        /**
        * **callcenter.lead.guardian_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        guardian_name: string | null;
        /**
        * **callcenter.lead.email**
        * - `text` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **callcenter.lead.provider**
        * - `text` in database
        * - Nullable, no default
        */
        provider: string | null;
        /**
        * **callcenter.lead.superpackage**
        * - `text` in database
        * - Nullable, no default
        */
        superpackage: string | null;
        /**
        * **callcenter.lead.program**
        * - `text` in database
        * - Nullable, no default
        */
        program: string | null;
        /**
        * **callcenter.lead.special_program**
        * - `text` in database
        * - Nullable, no default
        */
        special_program: string | null;
        /**
        * **callcenter.lead.last_appointment_date**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_appointment_date: string | null;
        /**
        * **callcenter.lead.followups_completed**
        * - `int2` in database
        * - Nullable, no default
        */
        followups_completed: number | null;
        /**
        * **callcenter.lead.followups_scheduled**
        * - `int2` in database
        * - Nullable, no default
        */
        followups_scheduled: number | null;
        /**
        * **callcenter.lead.calling_list_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        calling_list_id: string;
        /**
        * **callcenter.lead.last_dialed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        last_dialed_at: db.TimestampString | null;
        /**
        * **callcenter.lead.identity_id**
        * - `int8` in database
        * - Nullable, no default
        */
        identity_id: number | null;
        /**
        * **callcenter.lead.schedule_url**
        * - `text` in database
        * - Nullable, no default
        */
        schedule_url: string | null;
        /**
        * **callcenter.lead.group_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        group_id: string | null;
        /**
        * **callcenter.lead.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id: number | null;
      }
      export interface Whereable {
        /**
        * **callcenter.lead.lead_id**
        * - `int4` in database
        * - Generated column
        */
        lead_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.status**
        * - `text` in database
        * - `NOT NULL`, default: `0`
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.first_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        first_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.last_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        last_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.phone**
        * - `_varchar` in database
        * - `NOT NULL`, no default
        */
        phone?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.agent_id**
        * - `int4` in database
        * - Nullable, no default
        */
        agent_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        eligible_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        user_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.address**
        * - `text` in database
        * - Nullable, no default
        */
        address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.address2**
        * - `text` in database
        * - Nullable, no default
        */
        address2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.city**
        * - `varchar` in database
        * - Nullable, no default
        */
        city?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.state**
        * - `varchar` in database
        * - Nullable, no default
        */
        state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.postal_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        postal_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.dob**
        * - `varchar` in database
        * - Nullable, no default
        */
        dob?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.lang**
        * - `bpchar` in database
        * - Nullable, no default
        */
        lang?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.gender**
        * - `varchar` in database
        * - Nullable, no default
        */
        gender?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.member_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        member_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.guardian_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        guardian_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.email**
        * - `text` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.provider**
        * - `text` in database
        * - Nullable, no default
        */
        provider?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.superpackage**
        * - `text` in database
        * - Nullable, no default
        */
        superpackage?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.program**
        * - `text` in database
        * - Nullable, no default
        */
        program?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.special_program**
        * - `text` in database
        * - Nullable, no default
        */
        special_program?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.last_appointment_date**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_appointment_date?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.followups_completed**
        * - `int2` in database
        * - Nullable, no default
        */
        followups_completed?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.followups_scheduled**
        * - `int2` in database
        * - Nullable, no default
        */
        followups_scheduled?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.calling_list_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        calling_list_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.last_dialed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        last_dialed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.identity_id**
        * - `int8` in database
        * - Nullable, no default
        */
        identity_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.schedule_url**
        * - `text` in database
        * - Nullable, no default
        */
        schedule_url?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.group_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        group_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.lead.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **callcenter.lead.status**
        * - `text` in database
        * - `NOT NULL`, default: `0`
        */
        status?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.first_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        first_name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **callcenter.lead.last_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        last_name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **callcenter.lead.phone**
        * - `_varchar` in database
        * - `NOT NULL`, no default
        */
        phone: string[] | db.Parameter<string[]> | db.SQLFragment;
        /**
        * **callcenter.lead.agent_id**
        * - `int4` in database
        * - Nullable, no default
        */
        agent_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        eligible_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        user_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.address**
        * - `text` in database
        * - Nullable, no default
        */
        address?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.address2**
        * - `text` in database
        * - Nullable, no default
        */
        address2?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.city**
        * - `varchar` in database
        * - Nullable, no default
        */
        city?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.state**
        * - `varchar` in database
        * - Nullable, no default
        */
        state?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.postal_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        postal_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.dob**
        * - `varchar` in database
        * - Nullable, no default
        */
        dob?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.lang**
        * - `bpchar` in database
        * - Nullable, no default
        */
        lang?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.gender**
        * - `varchar` in database
        * - Nullable, no default
        */
        gender?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.member_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        member_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.guardian_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        guardian_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.email**
        * - `text` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.provider**
        * - `text` in database
        * - Nullable, no default
        */
        provider?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.superpackage**
        * - `text` in database
        * - Nullable, no default
        */
        superpackage?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.program**
        * - `text` in database
        * - Nullable, no default
        */
        program?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.special_program**
        * - `text` in database
        * - Nullable, no default
        */
        special_program?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.last_appointment_date**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_appointment_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.followups_completed**
        * - `int2` in database
        * - Nullable, no default
        */
        followups_completed?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.followups_scheduled**
        * - `int2` in database
        * - Nullable, no default
        */
        followups_scheduled?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.calling_list_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        calling_list_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **callcenter.lead.last_dialed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        last_dialed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.identity_id**
        * - `int8` in database
        * - Nullable, no default
        */
        identity_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.schedule_url**
        * - `text` in database
        * - Nullable, no default
        */
        schedule_url?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.group_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        group_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.lead.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **callcenter.lead.status**
        * - `text` in database
        * - `NOT NULL`, default: `0`
        */
        status?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.first_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        first_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **callcenter.lead.last_name**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        last_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **callcenter.lead.phone**
        * - `_varchar` in database
        * - `NOT NULL`, no default
        */
        phone?: string[] | db.Parameter<string[]> | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment>;
        /**
        * **callcenter.lead.agent_id**
        * - `int4` in database
        * - Nullable, no default
        */
        agent_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.account_id**
        * - `int4` in database
        * - Nullable, no default
        */
        account_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.eligible_id**
        * - `int4` in database
        * - Nullable, no default
        */
        eligible_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.user_id**
        * - `int4` in database
        * - Nullable, no default
        */
        user_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.address**
        * - `text` in database
        * - Nullable, no default
        */
        address?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.address2**
        * - `text` in database
        * - Nullable, no default
        */
        address2?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.city**
        * - `varchar` in database
        * - Nullable, no default
        */
        city?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.state**
        * - `varchar` in database
        * - Nullable, no default
        */
        state?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.postal_code**
        * - `varchar` in database
        * - Nullable, no default
        */
        postal_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.dob**
        * - `varchar` in database
        * - Nullable, no default
        */
        dob?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.lang**
        * - `bpchar` in database
        * - Nullable, no default
        */
        lang?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.gender**
        * - `varchar` in database
        * - Nullable, no default
        */
        gender?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.member_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        member_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.guardian_name**
        * - `varchar` in database
        * - Nullable, no default
        */
        guardian_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.email**
        * - `text` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.provider**
        * - `text` in database
        * - Nullable, no default
        */
        provider?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.superpackage**
        * - `text` in database
        * - Nullable, no default
        */
        superpackage?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.program**
        * - `text` in database
        * - Nullable, no default
        */
        program?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.special_program**
        * - `text` in database
        * - Nullable, no default
        */
        special_program?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.last_appointment_date**
        * - `varchar` in database
        * - Nullable, no default
        */
        last_appointment_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.followups_completed**
        * - `int2` in database
        * - Nullable, no default
        */
        followups_completed?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.followups_scheduled**
        * - `int2` in database
        * - Nullable, no default
        */
        followups_scheduled?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.calling_list_id**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        calling_list_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **callcenter.lead.last_dialed_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        last_dialed_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.identity_id**
        * - `int8` in database
        * - Nullable, no default
        */
        identity_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.schedule_url**
        * - `text` in database
        * - Nullable, no default
        */
        schedule_url?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.group_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        group_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.lead.patient_id**
        * - `int4` in database
        * - Nullable, no default
        */
        patient_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'lead_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **callcenter.rd_lead**
     * - Table in database
     */
    export namespace rd_lead {
      export type Table = 'callcenter.rd_lead';
      export interface Selectable {
        /**
        * **callcenter.rd_lead.rd_lead_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('callcenter.rd_lead_id_seq'::regclass)`
        */
        rd_lead_id: number;
        /**
        * **callcenter.rd_lead.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name: string;
        /**
        * **callcenter.rd_lead.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name: string;
        /**
        * **callcenter.rd_lead.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone: string | null;
        /**
        * **callcenter.rd_lead.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **callcenter.rd_lead.npi_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        npi_id: string;
        /**
        * **callcenter.rd_lead.cdr_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        cdr_id: string | null;
        /**
        * **callcenter.rd_lead.status**
        * - `varchar` in database
        * - `NOT NULL`, default: `'available'::character varying`
        */
        status: string;
        /**
        * **callcenter.rd_lead.states**
        * - `_varchar` in database
        * - Nullable, default: `'{}'::character varying[]`
        */
        states: string[] | null;
        /**
        * **callcenter.rd_lead.languages**
        * - `_varchar` in database
        * - Nullable, default: `'{}'::character varying[]`
        */
        languages: string[] | null;
        /**
        * **callcenter.rd_lead.tenure**
        * - `int4` in database
        * - Nullable, default: `0`
        */
        tenure: number | null;
        /**
        * **callcenter.rd_lead.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at: Date | null;
        /**
        * **callcenter.rd_lead.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **callcenter.rd_lead.rd_lead_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('callcenter.rd_lead_id_seq'::regclass)`
        */
        rd_lead_id: number;
        /**
        * **callcenter.rd_lead.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name: string;
        /**
        * **callcenter.rd_lead.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name: string;
        /**
        * **callcenter.rd_lead.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone: string | null;
        /**
        * **callcenter.rd_lead.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email: string | null;
        /**
        * **callcenter.rd_lead.npi_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        npi_id: string;
        /**
        * **callcenter.rd_lead.cdr_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        cdr_id: string | null;
        /**
        * **callcenter.rd_lead.status**
        * - `varchar` in database
        * - `NOT NULL`, default: `'available'::character varying`
        */
        status: string;
        /**
        * **callcenter.rd_lead.states**
        * - `_varchar` in database
        * - Nullable, default: `'{}'::character varying[]`
        */
        states: string[] | null;
        /**
        * **callcenter.rd_lead.languages**
        * - `_varchar` in database
        * - Nullable, default: `'{}'::character varying[]`
        */
        languages: string[] | null;
        /**
        * **callcenter.rd_lead.tenure**
        * - `int4` in database
        * - Nullable, default: `0`
        */
        tenure: number | null;
        /**
        * **callcenter.rd_lead.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at: db.TimestampString | null;
        /**
        * **callcenter.rd_lead.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **callcenter.rd_lead.rd_lead_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('callcenter.rd_lead_id_seq'::regclass)`
        */
        rd_lead_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.rd_lead.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.rd_lead.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.rd_lead.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.rd_lead.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.rd_lead.npi_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        npi_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.rd_lead.cdr_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        cdr_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.rd_lead.status**
        * - `varchar` in database
        * - `NOT NULL`, default: `'available'::character varying`
        */
        status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.rd_lead.states**
        * - `_varchar` in database
        * - Nullable, default: `'{}'::character varying[]`
        */
        states?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.rd_lead.languages**
        * - `_varchar` in database
        * - Nullable, default: `'{}'::character varying[]`
        */
        languages?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.rd_lead.tenure**
        * - `int4` in database
        * - Nullable, default: `0`
        */
        tenure?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.rd_lead.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.rd_lead.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **callcenter.rd_lead.rd_lead_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('callcenter.rd_lead_id_seq'::regclass)`
        */
        rd_lead_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.rd_lead.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **callcenter.rd_lead.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **callcenter.rd_lead.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.rd_lead.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.rd_lead.npi_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        npi_id: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **callcenter.rd_lead.cdr_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        cdr_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.rd_lead.status**
        * - `varchar` in database
        * - `NOT NULL`, default: `'available'::character varying`
        */
        status?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.rd_lead.states**
        * - `_varchar` in database
        * - Nullable, default: `'{}'::character varying[]`
        */
        states?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.rd_lead.languages**
        * - `_varchar` in database
        * - Nullable, default: `'{}'::character varying[]`
        */
        languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.rd_lead.tenure**
        * - `int4` in database
        * - Nullable, default: `0`
        */
        tenure?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.rd_lead.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.rd_lead.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **callcenter.rd_lead.rd_lead_id**
        * - `int4` in database
        * - `NOT NULL`, default: `nextval('callcenter.rd_lead_id_seq'::regclass)`
        */
        rd_lead_id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.rd_lead.first_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        first_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **callcenter.rd_lead.last_name**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        last_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **callcenter.rd_lead.phone**
        * - `varchar` in database
        * - Nullable, no default
        */
        phone?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.rd_lead.email**
        * - `varchar` in database
        * - Nullable, no default
        */
        email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.rd_lead.npi_id**
        * - `varchar` in database
        * - `NOT NULL`, no default
        */
        npi_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **callcenter.rd_lead.cdr_id**
        * - `varchar` in database
        * - Nullable, no default
        */
        cdr_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.rd_lead.status**
        * - `varchar` in database
        * - `NOT NULL`, default: `'available'::character varying`
        */
        status?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.rd_lead.states**
        * - `_varchar` in database
        * - Nullable, default: `'{}'::character varying[]`
        */
        states?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.rd_lead.languages**
        * - `_varchar` in database
        * - Nullable, default: `'{}'::character varying[]`
        */
        languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.rd_lead.tenure**
        * - `int4` in database
        * - Nullable, default: `0`
        */
        tenure?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.rd_lead.created_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.rd_lead.updated_at**
        * - `timestamp` in database
        * - Nullable, default: `CURRENT_TIMESTAMP`
        */
        updated_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'rd_lead_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **callcenter.script**
     * - Table in database
     */
    export namespace script {
      export type Table = 'callcenter.script';
      export interface Selectable {
        /**
        * **callcenter.script.script_id**
        * - `int4` in database
        * - Generated column
        */
        script_id: number;
        /**
        * **callcenter.script.label**
        * - `text` in database
        * - Nullable, no default
        */
        label: string | null;
        /**
        * **callcenter.script.instructions**
        * - `text` in database
        * - Nullable, no default
        */
        instructions: string | null;
        /**
        * **callcenter.script.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: Date;
        /**
        * **callcenter.script.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at: Date | null;
      }
      export interface JSONSelectable {
        /**
        * **callcenter.script.script_id**
        * - `int4` in database
        * - Generated column
        */
        script_id: number;
        /**
        * **callcenter.script.label**
        * - `text` in database
        * - Nullable, no default
        */
        label: string | null;
        /**
        * **callcenter.script.instructions**
        * - `text` in database
        * - Nullable, no default
        */
        instructions: string | null;
        /**
        * **callcenter.script.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at: db.TimestampString;
        /**
        * **callcenter.script.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at: db.TimestampString | null;
      }
      export interface Whereable {
        /**
        * **callcenter.script.script_id**
        * - `int4` in database
        * - Generated column
        */
        script_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.script.label**
        * - `text` in database
        * - Nullable, no default
        */
        label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.script.instructions**
        * - `text` in database
        * - Nullable, no default
        */
        instructions?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.script.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **callcenter.script.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **callcenter.script.label**
        * - `text` in database
        * - Nullable, no default
        */
        label?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.script.instructions**
        * - `text` in database
        * - Nullable, no default
        */
        instructions?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.script.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
        /**
        * **callcenter.script.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **callcenter.script.label**
        * - `text` in database
        * - Nullable, no default
        */
        label?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.script.instructions**
        * - `text` in database
        * - Nullable, no default
        */
        instructions?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.script.created_at**
        * - `timestamp` in database
        * - `NOT NULL`, default: `now()`
        */
        created_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
        /**
        * **callcenter.script.deleted_at**
        * - `timestamp` in database
        * - Nullable, no default
        */
        deleted_at?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      }
      export type UniqueIndex = 'script_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /* --- aggregate types --- */
  
    export type Table = agent.Table | calling_list.Table | calling_list_agent.Table | campaign.Table | dial.Table | dial_result.Table | do_not_call.Table | lead.Table | rd_lead.Table | script.Table;
    export type Selectable = agent.Selectable | calling_list.Selectable | calling_list_agent.Selectable | campaign.Selectable | dial.Selectable | dial_result.Selectable | do_not_call.Selectable | lead.Selectable | rd_lead.Selectable | script.Selectable;
    export type JSONSelectable = agent.JSONSelectable | calling_list.JSONSelectable | calling_list_agent.JSONSelectable | campaign.JSONSelectable | dial.JSONSelectable | dial_result.JSONSelectable | do_not_call.JSONSelectable | lead.JSONSelectable | rd_lead.JSONSelectable | script.JSONSelectable;
    export type Whereable = agent.Whereable | calling_list.Whereable | calling_list_agent.Whereable | campaign.Whereable | dial.Whereable | dial_result.Whereable | do_not_call.Whereable | lead.Whereable | rd_lead.Whereable | script.Whereable;
    export type Insertable = agent.Insertable | calling_list.Insertable | calling_list_agent.Insertable | campaign.Insertable | dial.Insertable | dial_result.Insertable | do_not_call.Insertable | lead.Insertable | rd_lead.Insertable | script.Insertable;
    export type Updatable = agent.Updatable | calling_list.Updatable | calling_list_agent.Updatable | campaign.Updatable | dial.Updatable | dial_result.Updatable | do_not_call.Updatable | lead.Updatable | rd_lead.Updatable | script.Updatable;
    export type UniqueIndex = agent.UniqueIndex | calling_list.UniqueIndex | calling_list_agent.UniqueIndex | campaign.UniqueIndex | dial.UniqueIndex | dial_result.UniqueIndex | do_not_call.UniqueIndex | lead.UniqueIndex | rd_lead.UniqueIndex | script.UniqueIndex;
    export type Column = agent.Column | calling_list.Column | calling_list_agent.Column | campaign.Column | dial.Column | dial_result.Column | do_not_call.Column | lead.Column | rd_lead.Column | script.Column;
  
    export type AllBaseTables = [agent.Table, calling_list.Table, calling_list_agent.Table, campaign.Table, dial.Table, dial_result.Table, do_not_call.Table, lead.Table, rd_lead.Table, script.Table];
    export type AllForeignTables = [];
    export type AllViews = [];
    export type AllMaterializedViews = [];
    export type AllTablesAndViews = [agent.Table, calling_list.Table, calling_list_agent.Table, campaign.Table, dial.Table, dial_result.Table, do_not_call.Table, lead.Table, rd_lead.Table, script.Table];
  }


  /* === global aggregate types === */

  export type Schema = 'foodcards' | 'telenutrition' | 'common' | 'marketing' | 'callcenter';
  export type Table = foodcards.Table | telenutrition.Table | common.Table | marketing.Table | callcenter.Table;
  export type Selectable = foodcards.Selectable | telenutrition.Selectable | common.Selectable | marketing.Selectable | callcenter.Selectable;
  export type JSONSelectable = foodcards.JSONSelectable | telenutrition.JSONSelectable | common.JSONSelectable | marketing.JSONSelectable | callcenter.JSONSelectable;
  export type Whereable = foodcards.Whereable | telenutrition.Whereable | common.Whereable | marketing.Whereable | callcenter.Whereable;
  export type Insertable = foodcards.Insertable | telenutrition.Insertable | common.Insertable | marketing.Insertable | callcenter.Insertable;
  export type Updatable = foodcards.Updatable | telenutrition.Updatable | common.Updatable | marketing.Updatable | callcenter.Updatable;
  export type UniqueIndex = foodcards.UniqueIndex | telenutrition.UniqueIndex | common.UniqueIndex | marketing.UniqueIndex | callcenter.UniqueIndex;
  export type Column = foodcards.Column | telenutrition.Column | common.Column | marketing.Column | callcenter.Column;

  export type AllSchemas = ['foodcards', 'telenutrition', 'common', 'marketing', 'callcenter'];
  export type AllBaseTables = [...foodcards.AllBaseTables, ...telenutrition.AllBaseTables, ...common.AllBaseTables, ...marketing.AllBaseTables, ...callcenter.AllBaseTables];
  export type AllForeignTables = [...foodcards.AllForeignTables, ...telenutrition.AllForeignTables, ...common.AllForeignTables, ...marketing.AllForeignTables, ...callcenter.AllForeignTables];
  export type AllViews = [...foodcards.AllViews, ...telenutrition.AllViews, ...common.AllViews, ...marketing.AllViews, ...callcenter.AllViews];
  export type AllMaterializedViews = [...foodcards.AllMaterializedViews, ...telenutrition.AllMaterializedViews, ...common.AllMaterializedViews, ...marketing.AllMaterializedViews, ...callcenter.AllMaterializedViews];
  export type AllTablesAndViews = [...foodcards.AllTablesAndViews, ...telenutrition.AllTablesAndViews, ...common.AllTablesAndViews, ...marketing.AllTablesAndViews, ...callcenter.AllTablesAndViews];


  /* === lookups === */

  export type SelectableForTable<T extends Table> = {
    "foodcards.incomm_eligibility": foodcards.incomm_eligibility.Selectable;
    "foodcards.incomm_program_purses": foodcards.incomm_program_purses.Selectable;
    "foodcards.participants": foodcards.participants.Selectable;
    "telenutrition.account_food_offering_vendor_mapping": telenutrition.account_food_offering_vendor_mapping.Selectable;
    "telenutrition.account_food_offering_vendor_mapping_history": telenutrition.account_food_offering_vendor_mapping_history.Selectable;
    "telenutrition.account_payment_method_type": telenutrition.account_payment_method_type.Selectable;
    "telenutrition.activity": telenutrition.activity.Selectable;
    "telenutrition.activity_user": telenutrition.activity_user.Selectable;
    "telenutrition.appointment_cancel_reason": telenutrition.appointment_cancel_reason.Selectable;
    "telenutrition.athena_api_auth": telenutrition.athena_api_auth.Selectable;
    "telenutrition.billing_code": telenutrition.billing_code.Selectable;
    "telenutrition.billing_contract": telenutrition.billing_contract.Selectable;
    "telenutrition.billing_rule": telenutrition.billing_rule.Selectable;
    "telenutrition.billing_rule_history": telenutrition.billing_rule_history.Selectable;
    "telenutrition.billing_service_facility": telenutrition.billing_service_facility.Selectable;
    "telenutrition.billing_transaction": telenutrition.billing_transaction.Selectable;
    "telenutrition.clinical_encounter": telenutrition.clinical_encounter.Selectable;
    "telenutrition.clinical_encounter_amendment": telenutrition.clinical_encounter_amendment.Selectable;
    "telenutrition.clinical_encounter_history": telenutrition.clinical_encounter_history.Selectable;
    "telenutrition.clinical_encounter_oversight": telenutrition.clinical_encounter_oversight.Selectable;
    "telenutrition.clinical_encounter_screening_questionnaire": telenutrition.clinical_encounter_screening_questionnaire.Selectable;
    "telenutrition.common_verification": telenutrition.common_verification.Selectable;
    "telenutrition.common_verification_method": telenutrition.common_verification_method.Selectable;
    "telenutrition.food_offering_type": telenutrition.food_offering_type.Selectable;
    "telenutrition.food_offering_type_history": telenutrition.food_offering_type_history.Selectable;
    "telenutrition.food_vendor": telenutrition.food_vendor.Selectable;
    "telenutrition.food_vendor_history": telenutrition.food_vendor_history.Selectable;
    "telenutrition.historical_athena_encounter_raw": telenutrition.historical_athena_encounter_raw.Selectable;
    "telenutrition.iam_federated_credentials": telenutrition.iam_federated_credentials.Selectable;
    "telenutrition.iam_identity": telenutrition.iam_identity.Selectable;
    "telenutrition.iam_user": telenutrition.iam_user.Selectable;
    "telenutrition.incentive": telenutrition.incentive.Selectable;
    "telenutrition.incentive_contract": telenutrition.incentive_contract.Selectable;
    "telenutrition.incentive_rule": telenutrition.incentive_rule.Selectable;
    "telenutrition.instacart_code": telenutrition.instacart_code.Selectable;
    "telenutrition.instacart_code_order": telenutrition.instacart_code_order.Selectable;
    "telenutrition.issue_report": telenutrition.issue_report.Selectable;
    "telenutrition.issue_report_type": telenutrition.issue_report_type.Selectable;
    "telenutrition.medallion_provider": telenutrition.medallion_provider.Selectable;
    "telenutrition.ontology_concept": telenutrition.ontology_concept.Selectable;
    "telenutrition.patient_attribute": telenutrition.patient_attribute.Selectable;
    "telenutrition.patient_attribute_option": telenutrition.patient_attribute_option.Selectable;
    "telenutrition.patient_fact": telenutrition.patient_fact.Selectable;
    "telenutrition.patient_fact_source": telenutrition.patient_fact_source.Selectable;
    "telenutrition.patient_payment_transaction": telenutrition.patient_payment_transaction.Selectable;
    "telenutrition.patient_summary": telenutrition.patient_summary.Selectable;
    "telenutrition.payer": telenutrition.payer.Selectable;
    "telenutrition.payer_enrollment": telenutrition.payer_enrollment.Selectable;
    "telenutrition.payer_provider_schedulability": telenutrition.payer_provider_schedulability.Selectable;
    "telenutrition.payer_roster": telenutrition.payer_roster.Selectable;
    "telenutrition.payment_eligibility_check": telenutrition.payment_eligibility_check.Selectable;
    "telenutrition.payment_method_type": telenutrition.payment_method_type.Selectable;
    "telenutrition.provider_board_certificate": telenutrition.provider_board_certificate.Selectable;
    "telenutrition.provider_license": telenutrition.provider_license.Selectable;
    "telenutrition.provider_license_application": telenutrition.provider_license_application.Selectable;
    "telenutrition.provider_license_summary": telenutrition.provider_license_summary.Selectable;
    "telenutrition.provider_program_enrollment": telenutrition.provider_program_enrollment.Selectable;
    "telenutrition.provider_task": telenutrition.provider_task.Selectable;
    "telenutrition.reward": telenutrition.reward.Selectable;
    "telenutrition.reward_user": telenutrition.reward_user.Selectable;
    "telenutrition.schedule_appointment": telenutrition.schedule_appointment.Selectable;
    "telenutrition.schedule_appointment_history": telenutrition.schedule_appointment_history.Selectable;
    "telenutrition.schedule_appointment_type": telenutrition.schedule_appointment_type.Selectable;
    "telenutrition.schedule_appointment_type_mapping": telenutrition.schedule_appointment_type_mapping.Selectable;
    "telenutrition.schedule_consent": telenutrition.schedule_consent.Selectable;
    "telenutrition.schedule_department": telenutrition.schedule_department.Selectable;
    "telenutrition.schedule_department_provider": telenutrition.schedule_department_provider.Selectable;
    "telenutrition.schedule_department_provider_licensed": telenutrition.schedule_department_provider_licensed.Selectable;
    "telenutrition.schedule_employer": telenutrition.schedule_employer.Selectable;
    "telenutrition.schedule_flow": telenutrition.schedule_flow.Selectable;
    "telenutrition.schedule_insurance": telenutrition.schedule_insurance.Selectable;
    "telenutrition.schedule_patient": telenutrition.schedule_patient.Selectable;
    "telenutrition.schedule_patient_payment_method": telenutrition.schedule_patient_payment_method.Selectable;
    "telenutrition.schedule_patient_survey": telenutrition.schedule_patient_survey.Selectable;
    "telenutrition.schedule_provider": telenutrition.schedule_provider.Selectable;
    "telenutrition.schedule_referral": telenutrition.schedule_referral.Selectable;
    "telenutrition.schedule_referrer": telenutrition.schedule_referrer.Selectable;
    "telenutrition.schedule_slot": telenutrition.schedule_slot.Selectable;
    "telenutrition.schedule_sponsor": telenutrition.schedule_sponsor.Selectable;
    "telenutrition.schedule_user": telenutrition.schedule_user.Selectable;
    "telenutrition.schedule_user_patient": telenutrition.schedule_user_patient.Selectable;
    "telenutrition.state_credentialing_config": telenutrition.state_credentialing_config.Selectable;
    "telenutrition.sticky_note": telenutrition.sticky_note.Selectable;
    "telenutrition.valid_provider_payer_enrollment": telenutrition.valid_provider_payer_enrollment.Selectable;
    "telenutrition.wallet": telenutrition.wallet.Selectable;
    "telenutrition.wallet_transaction": telenutrition.wallet_transaction.Selectable;
    "telenutrition.workramp_contact": telenutrition.workramp_contact.Selectable;
    "telenutrition.workramp_contact_path": telenutrition.workramp_contact_path.Selectable;
    "common.account": common.account.Selectable;
    "common.account_membership": common.account_membership.Selectable;
    "common.company_holiday": common.company_holiday.Selectable;
    "common.dnc_audit_email": common.dnc_audit_email.Selectable;
    "common.dnc_audit_identity": common.dnc_audit_identity.Selectable;
    "common.dnc_audit_phone": common.dnc_audit_phone.Selectable;
    "common.dnc_entry_email": common.dnc_entry_email.Selectable;
    "common.dnc_entry_identity": common.dnc_entry_identity.Selectable;
    "common.dnc_entry_phone": common.dnc_entry_phone.Selectable;
    "common.dnc_list_email": common.dnc_list_email.Selectable;
    "common.dnc_list_phone": common.dnc_list_phone.Selectable;
    "common.eligibility_member": common.eligibility_member.Selectable;
    "common.employee": common.employee.Selectable;
    "common.flow_task_log": common.flow_task_log.Selectable;
    "common.language_iso6391": common.language_iso6391.Selectable;
    "common.meeting_participant": common.meeting_participant.Selectable;
    "common.outbound_file_config": common.outbound_file_config.Selectable;
    "common.program": common.program.Selectable;
    "common.program_contract": common.program_contract.Selectable;
    "common.program_membership": common.program_membership.Selectable;
    "common.program_membership_history": common.program_membership_history.Selectable;
    "common.program_rule": common.program_rule.Selectable;
    "common.referral_config": common.referral_config.Selectable;
    "common.referral_source": common.referral_source.Selectable;
    "common.rippling_user": common.rippling_user.Selectable;
    "common.segment_definition": common.segment_definition.Selectable;
    "common.segment_destination_definition": common.segment_destination_definition.Selectable;
    "common.segment_destination_mapping": common.segment_destination_mapping.Selectable;
    "common.segment_destination_sync": common.segment_destination_sync.Selectable;
    "common.segment_member": common.segment_member.Selectable;
    "common.segment_member_history": common.segment_member_history.Selectable;
    "common.segment_profile": common.segment_profile.Selectable;
    "common.segment_sync": common.segment_sync.Selectable;
    "common.state": common.state.Selectable;
    "common.sync_token": common.sync_token.Selectable;
    "common.timezone": common.timezone.Selectable;
    "marketing.cio_customer": marketing.cio_customer.Selectable;
    "marketing.cio_customer_sync": marketing.cio_customer_sync.Selectable;
    "marketing.cio_segment": marketing.cio_segment.Selectable;
    "marketing.cio_segment_run": marketing.cio_segment_run.Selectable;
    "callcenter.agent": callcenter.agent.Selectable;
    "callcenter.calling_list": callcenter.calling_list.Selectable;
    "callcenter.calling_list_agent": callcenter.calling_list_agent.Selectable;
    "callcenter.campaign": callcenter.campaign.Selectable;
    "callcenter.dial": callcenter.dial.Selectable;
    "callcenter.dial_result": callcenter.dial_result.Selectable;
    "callcenter.do_not_call": callcenter.do_not_call.Selectable;
    "callcenter.lead": callcenter.lead.Selectable;
    "callcenter.rd_lead": callcenter.rd_lead.Selectable;
    "callcenter.script": callcenter.script.Selectable;
  }[T];

  export type JSONSelectableForTable<T extends Table> = {
    "foodcards.incomm_eligibility": foodcards.incomm_eligibility.JSONSelectable;
    "foodcards.incomm_program_purses": foodcards.incomm_program_purses.JSONSelectable;
    "foodcards.participants": foodcards.participants.JSONSelectable;
    "telenutrition.account_food_offering_vendor_mapping": telenutrition.account_food_offering_vendor_mapping.JSONSelectable;
    "telenutrition.account_food_offering_vendor_mapping_history": telenutrition.account_food_offering_vendor_mapping_history.JSONSelectable;
    "telenutrition.account_payment_method_type": telenutrition.account_payment_method_type.JSONSelectable;
    "telenutrition.activity": telenutrition.activity.JSONSelectable;
    "telenutrition.activity_user": telenutrition.activity_user.JSONSelectable;
    "telenutrition.appointment_cancel_reason": telenutrition.appointment_cancel_reason.JSONSelectable;
    "telenutrition.athena_api_auth": telenutrition.athena_api_auth.JSONSelectable;
    "telenutrition.billing_code": telenutrition.billing_code.JSONSelectable;
    "telenutrition.billing_contract": telenutrition.billing_contract.JSONSelectable;
    "telenutrition.billing_rule": telenutrition.billing_rule.JSONSelectable;
    "telenutrition.billing_rule_history": telenutrition.billing_rule_history.JSONSelectable;
    "telenutrition.billing_service_facility": telenutrition.billing_service_facility.JSONSelectable;
    "telenutrition.billing_transaction": telenutrition.billing_transaction.JSONSelectable;
    "telenutrition.clinical_encounter": telenutrition.clinical_encounter.JSONSelectable;
    "telenutrition.clinical_encounter_amendment": telenutrition.clinical_encounter_amendment.JSONSelectable;
    "telenutrition.clinical_encounter_history": telenutrition.clinical_encounter_history.JSONSelectable;
    "telenutrition.clinical_encounter_oversight": telenutrition.clinical_encounter_oversight.JSONSelectable;
    "telenutrition.clinical_encounter_screening_questionnaire": telenutrition.clinical_encounter_screening_questionnaire.JSONSelectable;
    "telenutrition.common_verification": telenutrition.common_verification.JSONSelectable;
    "telenutrition.common_verification_method": telenutrition.common_verification_method.JSONSelectable;
    "telenutrition.food_offering_type": telenutrition.food_offering_type.JSONSelectable;
    "telenutrition.food_offering_type_history": telenutrition.food_offering_type_history.JSONSelectable;
    "telenutrition.food_vendor": telenutrition.food_vendor.JSONSelectable;
    "telenutrition.food_vendor_history": telenutrition.food_vendor_history.JSONSelectable;
    "telenutrition.historical_athena_encounter_raw": telenutrition.historical_athena_encounter_raw.JSONSelectable;
    "telenutrition.iam_federated_credentials": telenutrition.iam_federated_credentials.JSONSelectable;
    "telenutrition.iam_identity": telenutrition.iam_identity.JSONSelectable;
    "telenutrition.iam_user": telenutrition.iam_user.JSONSelectable;
    "telenutrition.incentive": telenutrition.incentive.JSONSelectable;
    "telenutrition.incentive_contract": telenutrition.incentive_contract.JSONSelectable;
    "telenutrition.incentive_rule": telenutrition.incentive_rule.JSONSelectable;
    "telenutrition.instacart_code": telenutrition.instacart_code.JSONSelectable;
    "telenutrition.instacart_code_order": telenutrition.instacart_code_order.JSONSelectable;
    "telenutrition.issue_report": telenutrition.issue_report.JSONSelectable;
    "telenutrition.issue_report_type": telenutrition.issue_report_type.JSONSelectable;
    "telenutrition.medallion_provider": telenutrition.medallion_provider.JSONSelectable;
    "telenutrition.ontology_concept": telenutrition.ontology_concept.JSONSelectable;
    "telenutrition.patient_attribute": telenutrition.patient_attribute.JSONSelectable;
    "telenutrition.patient_attribute_option": telenutrition.patient_attribute_option.JSONSelectable;
    "telenutrition.patient_fact": telenutrition.patient_fact.JSONSelectable;
    "telenutrition.patient_fact_source": telenutrition.patient_fact_source.JSONSelectable;
    "telenutrition.patient_payment_transaction": telenutrition.patient_payment_transaction.JSONSelectable;
    "telenutrition.patient_summary": telenutrition.patient_summary.JSONSelectable;
    "telenutrition.payer": telenutrition.payer.JSONSelectable;
    "telenutrition.payer_enrollment": telenutrition.payer_enrollment.JSONSelectable;
    "telenutrition.payer_provider_schedulability": telenutrition.payer_provider_schedulability.JSONSelectable;
    "telenutrition.payer_roster": telenutrition.payer_roster.JSONSelectable;
    "telenutrition.payment_eligibility_check": telenutrition.payment_eligibility_check.JSONSelectable;
    "telenutrition.payment_method_type": telenutrition.payment_method_type.JSONSelectable;
    "telenutrition.provider_board_certificate": telenutrition.provider_board_certificate.JSONSelectable;
    "telenutrition.provider_license": telenutrition.provider_license.JSONSelectable;
    "telenutrition.provider_license_application": telenutrition.provider_license_application.JSONSelectable;
    "telenutrition.provider_license_summary": telenutrition.provider_license_summary.JSONSelectable;
    "telenutrition.provider_program_enrollment": telenutrition.provider_program_enrollment.JSONSelectable;
    "telenutrition.provider_task": telenutrition.provider_task.JSONSelectable;
    "telenutrition.reward": telenutrition.reward.JSONSelectable;
    "telenutrition.reward_user": telenutrition.reward_user.JSONSelectable;
    "telenutrition.schedule_appointment": telenutrition.schedule_appointment.JSONSelectable;
    "telenutrition.schedule_appointment_history": telenutrition.schedule_appointment_history.JSONSelectable;
    "telenutrition.schedule_appointment_type": telenutrition.schedule_appointment_type.JSONSelectable;
    "telenutrition.schedule_appointment_type_mapping": telenutrition.schedule_appointment_type_mapping.JSONSelectable;
    "telenutrition.schedule_consent": telenutrition.schedule_consent.JSONSelectable;
    "telenutrition.schedule_department": telenutrition.schedule_department.JSONSelectable;
    "telenutrition.schedule_department_provider": telenutrition.schedule_department_provider.JSONSelectable;
    "telenutrition.schedule_department_provider_licensed": telenutrition.schedule_department_provider_licensed.JSONSelectable;
    "telenutrition.schedule_employer": telenutrition.schedule_employer.JSONSelectable;
    "telenutrition.schedule_flow": telenutrition.schedule_flow.JSONSelectable;
    "telenutrition.schedule_insurance": telenutrition.schedule_insurance.JSONSelectable;
    "telenutrition.schedule_patient": telenutrition.schedule_patient.JSONSelectable;
    "telenutrition.schedule_patient_payment_method": telenutrition.schedule_patient_payment_method.JSONSelectable;
    "telenutrition.schedule_patient_survey": telenutrition.schedule_patient_survey.JSONSelectable;
    "telenutrition.schedule_provider": telenutrition.schedule_provider.JSONSelectable;
    "telenutrition.schedule_referral": telenutrition.schedule_referral.JSONSelectable;
    "telenutrition.schedule_referrer": telenutrition.schedule_referrer.JSONSelectable;
    "telenutrition.schedule_slot": telenutrition.schedule_slot.JSONSelectable;
    "telenutrition.schedule_sponsor": telenutrition.schedule_sponsor.JSONSelectable;
    "telenutrition.schedule_user": telenutrition.schedule_user.JSONSelectable;
    "telenutrition.schedule_user_patient": telenutrition.schedule_user_patient.JSONSelectable;
    "telenutrition.state_credentialing_config": telenutrition.state_credentialing_config.JSONSelectable;
    "telenutrition.sticky_note": telenutrition.sticky_note.JSONSelectable;
    "telenutrition.valid_provider_payer_enrollment": telenutrition.valid_provider_payer_enrollment.JSONSelectable;
    "telenutrition.wallet": telenutrition.wallet.JSONSelectable;
    "telenutrition.wallet_transaction": telenutrition.wallet_transaction.JSONSelectable;
    "telenutrition.workramp_contact": telenutrition.workramp_contact.JSONSelectable;
    "telenutrition.workramp_contact_path": telenutrition.workramp_contact_path.JSONSelectable;
    "common.account": common.account.JSONSelectable;
    "common.account_membership": common.account_membership.JSONSelectable;
    "common.company_holiday": common.company_holiday.JSONSelectable;
    "common.dnc_audit_email": common.dnc_audit_email.JSONSelectable;
    "common.dnc_audit_identity": common.dnc_audit_identity.JSONSelectable;
    "common.dnc_audit_phone": common.dnc_audit_phone.JSONSelectable;
    "common.dnc_entry_email": common.dnc_entry_email.JSONSelectable;
    "common.dnc_entry_identity": common.dnc_entry_identity.JSONSelectable;
    "common.dnc_entry_phone": common.dnc_entry_phone.JSONSelectable;
    "common.dnc_list_email": common.dnc_list_email.JSONSelectable;
    "common.dnc_list_phone": common.dnc_list_phone.JSONSelectable;
    "common.eligibility_member": common.eligibility_member.JSONSelectable;
    "common.employee": common.employee.JSONSelectable;
    "common.flow_task_log": common.flow_task_log.JSONSelectable;
    "common.language_iso6391": common.language_iso6391.JSONSelectable;
    "common.meeting_participant": common.meeting_participant.JSONSelectable;
    "common.outbound_file_config": common.outbound_file_config.JSONSelectable;
    "common.program": common.program.JSONSelectable;
    "common.program_contract": common.program_contract.JSONSelectable;
    "common.program_membership": common.program_membership.JSONSelectable;
    "common.program_membership_history": common.program_membership_history.JSONSelectable;
    "common.program_rule": common.program_rule.JSONSelectable;
    "common.referral_config": common.referral_config.JSONSelectable;
    "common.referral_source": common.referral_source.JSONSelectable;
    "common.rippling_user": common.rippling_user.JSONSelectable;
    "common.segment_definition": common.segment_definition.JSONSelectable;
    "common.segment_destination_definition": common.segment_destination_definition.JSONSelectable;
    "common.segment_destination_mapping": common.segment_destination_mapping.JSONSelectable;
    "common.segment_destination_sync": common.segment_destination_sync.JSONSelectable;
    "common.segment_member": common.segment_member.JSONSelectable;
    "common.segment_member_history": common.segment_member_history.JSONSelectable;
    "common.segment_profile": common.segment_profile.JSONSelectable;
    "common.segment_sync": common.segment_sync.JSONSelectable;
    "common.state": common.state.JSONSelectable;
    "common.sync_token": common.sync_token.JSONSelectable;
    "common.timezone": common.timezone.JSONSelectable;
    "marketing.cio_customer": marketing.cio_customer.JSONSelectable;
    "marketing.cio_customer_sync": marketing.cio_customer_sync.JSONSelectable;
    "marketing.cio_segment": marketing.cio_segment.JSONSelectable;
    "marketing.cio_segment_run": marketing.cio_segment_run.JSONSelectable;
    "callcenter.agent": callcenter.agent.JSONSelectable;
    "callcenter.calling_list": callcenter.calling_list.JSONSelectable;
    "callcenter.calling_list_agent": callcenter.calling_list_agent.JSONSelectable;
    "callcenter.campaign": callcenter.campaign.JSONSelectable;
    "callcenter.dial": callcenter.dial.JSONSelectable;
    "callcenter.dial_result": callcenter.dial_result.JSONSelectable;
    "callcenter.do_not_call": callcenter.do_not_call.JSONSelectable;
    "callcenter.lead": callcenter.lead.JSONSelectable;
    "callcenter.rd_lead": callcenter.rd_lead.JSONSelectable;
    "callcenter.script": callcenter.script.JSONSelectable;
  }[T];

  export type WhereableForTable<T extends Table> = {
    "foodcards.incomm_eligibility": foodcards.incomm_eligibility.Whereable;
    "foodcards.incomm_program_purses": foodcards.incomm_program_purses.Whereable;
    "foodcards.participants": foodcards.participants.Whereable;
    "telenutrition.account_food_offering_vendor_mapping": telenutrition.account_food_offering_vendor_mapping.Whereable;
    "telenutrition.account_food_offering_vendor_mapping_history": telenutrition.account_food_offering_vendor_mapping_history.Whereable;
    "telenutrition.account_payment_method_type": telenutrition.account_payment_method_type.Whereable;
    "telenutrition.activity": telenutrition.activity.Whereable;
    "telenutrition.activity_user": telenutrition.activity_user.Whereable;
    "telenutrition.appointment_cancel_reason": telenutrition.appointment_cancel_reason.Whereable;
    "telenutrition.athena_api_auth": telenutrition.athena_api_auth.Whereable;
    "telenutrition.billing_code": telenutrition.billing_code.Whereable;
    "telenutrition.billing_contract": telenutrition.billing_contract.Whereable;
    "telenutrition.billing_rule": telenutrition.billing_rule.Whereable;
    "telenutrition.billing_rule_history": telenutrition.billing_rule_history.Whereable;
    "telenutrition.billing_service_facility": telenutrition.billing_service_facility.Whereable;
    "telenutrition.billing_transaction": telenutrition.billing_transaction.Whereable;
    "telenutrition.clinical_encounter": telenutrition.clinical_encounter.Whereable;
    "telenutrition.clinical_encounter_amendment": telenutrition.clinical_encounter_amendment.Whereable;
    "telenutrition.clinical_encounter_history": telenutrition.clinical_encounter_history.Whereable;
    "telenutrition.clinical_encounter_oversight": telenutrition.clinical_encounter_oversight.Whereable;
    "telenutrition.clinical_encounter_screening_questionnaire": telenutrition.clinical_encounter_screening_questionnaire.Whereable;
    "telenutrition.common_verification": telenutrition.common_verification.Whereable;
    "telenutrition.common_verification_method": telenutrition.common_verification_method.Whereable;
    "telenutrition.food_offering_type": telenutrition.food_offering_type.Whereable;
    "telenutrition.food_offering_type_history": telenutrition.food_offering_type_history.Whereable;
    "telenutrition.food_vendor": telenutrition.food_vendor.Whereable;
    "telenutrition.food_vendor_history": telenutrition.food_vendor_history.Whereable;
    "telenutrition.historical_athena_encounter_raw": telenutrition.historical_athena_encounter_raw.Whereable;
    "telenutrition.iam_federated_credentials": telenutrition.iam_federated_credentials.Whereable;
    "telenutrition.iam_identity": telenutrition.iam_identity.Whereable;
    "telenutrition.iam_user": telenutrition.iam_user.Whereable;
    "telenutrition.incentive": telenutrition.incentive.Whereable;
    "telenutrition.incentive_contract": telenutrition.incentive_contract.Whereable;
    "telenutrition.incentive_rule": telenutrition.incentive_rule.Whereable;
    "telenutrition.instacart_code": telenutrition.instacart_code.Whereable;
    "telenutrition.instacart_code_order": telenutrition.instacart_code_order.Whereable;
    "telenutrition.issue_report": telenutrition.issue_report.Whereable;
    "telenutrition.issue_report_type": telenutrition.issue_report_type.Whereable;
    "telenutrition.medallion_provider": telenutrition.medallion_provider.Whereable;
    "telenutrition.ontology_concept": telenutrition.ontology_concept.Whereable;
    "telenutrition.patient_attribute": telenutrition.patient_attribute.Whereable;
    "telenutrition.patient_attribute_option": telenutrition.patient_attribute_option.Whereable;
    "telenutrition.patient_fact": telenutrition.patient_fact.Whereable;
    "telenutrition.patient_fact_source": telenutrition.patient_fact_source.Whereable;
    "telenutrition.patient_payment_transaction": telenutrition.patient_payment_transaction.Whereable;
    "telenutrition.patient_summary": telenutrition.patient_summary.Whereable;
    "telenutrition.payer": telenutrition.payer.Whereable;
    "telenutrition.payer_enrollment": telenutrition.payer_enrollment.Whereable;
    "telenutrition.payer_provider_schedulability": telenutrition.payer_provider_schedulability.Whereable;
    "telenutrition.payer_roster": telenutrition.payer_roster.Whereable;
    "telenutrition.payment_eligibility_check": telenutrition.payment_eligibility_check.Whereable;
    "telenutrition.payment_method_type": telenutrition.payment_method_type.Whereable;
    "telenutrition.provider_board_certificate": telenutrition.provider_board_certificate.Whereable;
    "telenutrition.provider_license": telenutrition.provider_license.Whereable;
    "telenutrition.provider_license_application": telenutrition.provider_license_application.Whereable;
    "telenutrition.provider_license_summary": telenutrition.provider_license_summary.Whereable;
    "telenutrition.provider_program_enrollment": telenutrition.provider_program_enrollment.Whereable;
    "telenutrition.provider_task": telenutrition.provider_task.Whereable;
    "telenutrition.reward": telenutrition.reward.Whereable;
    "telenutrition.reward_user": telenutrition.reward_user.Whereable;
    "telenutrition.schedule_appointment": telenutrition.schedule_appointment.Whereable;
    "telenutrition.schedule_appointment_history": telenutrition.schedule_appointment_history.Whereable;
    "telenutrition.schedule_appointment_type": telenutrition.schedule_appointment_type.Whereable;
    "telenutrition.schedule_appointment_type_mapping": telenutrition.schedule_appointment_type_mapping.Whereable;
    "telenutrition.schedule_consent": telenutrition.schedule_consent.Whereable;
    "telenutrition.schedule_department": telenutrition.schedule_department.Whereable;
    "telenutrition.schedule_department_provider": telenutrition.schedule_department_provider.Whereable;
    "telenutrition.schedule_department_provider_licensed": telenutrition.schedule_department_provider_licensed.Whereable;
    "telenutrition.schedule_employer": telenutrition.schedule_employer.Whereable;
    "telenutrition.schedule_flow": telenutrition.schedule_flow.Whereable;
    "telenutrition.schedule_insurance": telenutrition.schedule_insurance.Whereable;
    "telenutrition.schedule_patient": telenutrition.schedule_patient.Whereable;
    "telenutrition.schedule_patient_payment_method": telenutrition.schedule_patient_payment_method.Whereable;
    "telenutrition.schedule_patient_survey": telenutrition.schedule_patient_survey.Whereable;
    "telenutrition.schedule_provider": telenutrition.schedule_provider.Whereable;
    "telenutrition.schedule_referral": telenutrition.schedule_referral.Whereable;
    "telenutrition.schedule_referrer": telenutrition.schedule_referrer.Whereable;
    "telenutrition.schedule_slot": telenutrition.schedule_slot.Whereable;
    "telenutrition.schedule_sponsor": telenutrition.schedule_sponsor.Whereable;
    "telenutrition.schedule_user": telenutrition.schedule_user.Whereable;
    "telenutrition.schedule_user_patient": telenutrition.schedule_user_patient.Whereable;
    "telenutrition.state_credentialing_config": telenutrition.state_credentialing_config.Whereable;
    "telenutrition.sticky_note": telenutrition.sticky_note.Whereable;
    "telenutrition.valid_provider_payer_enrollment": telenutrition.valid_provider_payer_enrollment.Whereable;
    "telenutrition.wallet": telenutrition.wallet.Whereable;
    "telenutrition.wallet_transaction": telenutrition.wallet_transaction.Whereable;
    "telenutrition.workramp_contact": telenutrition.workramp_contact.Whereable;
    "telenutrition.workramp_contact_path": telenutrition.workramp_contact_path.Whereable;
    "common.account": common.account.Whereable;
    "common.account_membership": common.account_membership.Whereable;
    "common.company_holiday": common.company_holiday.Whereable;
    "common.dnc_audit_email": common.dnc_audit_email.Whereable;
    "common.dnc_audit_identity": common.dnc_audit_identity.Whereable;
    "common.dnc_audit_phone": common.dnc_audit_phone.Whereable;
    "common.dnc_entry_email": common.dnc_entry_email.Whereable;
    "common.dnc_entry_identity": common.dnc_entry_identity.Whereable;
    "common.dnc_entry_phone": common.dnc_entry_phone.Whereable;
    "common.dnc_list_email": common.dnc_list_email.Whereable;
    "common.dnc_list_phone": common.dnc_list_phone.Whereable;
    "common.eligibility_member": common.eligibility_member.Whereable;
    "common.employee": common.employee.Whereable;
    "common.flow_task_log": common.flow_task_log.Whereable;
    "common.language_iso6391": common.language_iso6391.Whereable;
    "common.meeting_participant": common.meeting_participant.Whereable;
    "common.outbound_file_config": common.outbound_file_config.Whereable;
    "common.program": common.program.Whereable;
    "common.program_contract": common.program_contract.Whereable;
    "common.program_membership": common.program_membership.Whereable;
    "common.program_membership_history": common.program_membership_history.Whereable;
    "common.program_rule": common.program_rule.Whereable;
    "common.referral_config": common.referral_config.Whereable;
    "common.referral_source": common.referral_source.Whereable;
    "common.rippling_user": common.rippling_user.Whereable;
    "common.segment_definition": common.segment_definition.Whereable;
    "common.segment_destination_definition": common.segment_destination_definition.Whereable;
    "common.segment_destination_mapping": common.segment_destination_mapping.Whereable;
    "common.segment_destination_sync": common.segment_destination_sync.Whereable;
    "common.segment_member": common.segment_member.Whereable;
    "common.segment_member_history": common.segment_member_history.Whereable;
    "common.segment_profile": common.segment_profile.Whereable;
    "common.segment_sync": common.segment_sync.Whereable;
    "common.state": common.state.Whereable;
    "common.sync_token": common.sync_token.Whereable;
    "common.timezone": common.timezone.Whereable;
    "marketing.cio_customer": marketing.cio_customer.Whereable;
    "marketing.cio_customer_sync": marketing.cio_customer_sync.Whereable;
    "marketing.cio_segment": marketing.cio_segment.Whereable;
    "marketing.cio_segment_run": marketing.cio_segment_run.Whereable;
    "callcenter.agent": callcenter.agent.Whereable;
    "callcenter.calling_list": callcenter.calling_list.Whereable;
    "callcenter.calling_list_agent": callcenter.calling_list_agent.Whereable;
    "callcenter.campaign": callcenter.campaign.Whereable;
    "callcenter.dial": callcenter.dial.Whereable;
    "callcenter.dial_result": callcenter.dial_result.Whereable;
    "callcenter.do_not_call": callcenter.do_not_call.Whereable;
    "callcenter.lead": callcenter.lead.Whereable;
    "callcenter.rd_lead": callcenter.rd_lead.Whereable;
    "callcenter.script": callcenter.script.Whereable;
  }[T];

  export type InsertableForTable<T extends Table> = {
    "foodcards.incomm_eligibility": foodcards.incomm_eligibility.Insertable;
    "foodcards.incomm_program_purses": foodcards.incomm_program_purses.Insertable;
    "foodcards.participants": foodcards.participants.Insertable;
    "telenutrition.account_food_offering_vendor_mapping": telenutrition.account_food_offering_vendor_mapping.Insertable;
    "telenutrition.account_food_offering_vendor_mapping_history": telenutrition.account_food_offering_vendor_mapping_history.Insertable;
    "telenutrition.account_payment_method_type": telenutrition.account_payment_method_type.Insertable;
    "telenutrition.activity": telenutrition.activity.Insertable;
    "telenutrition.activity_user": telenutrition.activity_user.Insertable;
    "telenutrition.appointment_cancel_reason": telenutrition.appointment_cancel_reason.Insertable;
    "telenutrition.athena_api_auth": telenutrition.athena_api_auth.Insertable;
    "telenutrition.billing_code": telenutrition.billing_code.Insertable;
    "telenutrition.billing_contract": telenutrition.billing_contract.Insertable;
    "telenutrition.billing_rule": telenutrition.billing_rule.Insertable;
    "telenutrition.billing_rule_history": telenutrition.billing_rule_history.Insertable;
    "telenutrition.billing_service_facility": telenutrition.billing_service_facility.Insertable;
    "telenutrition.billing_transaction": telenutrition.billing_transaction.Insertable;
    "telenutrition.clinical_encounter": telenutrition.clinical_encounter.Insertable;
    "telenutrition.clinical_encounter_amendment": telenutrition.clinical_encounter_amendment.Insertable;
    "telenutrition.clinical_encounter_history": telenutrition.clinical_encounter_history.Insertable;
    "telenutrition.clinical_encounter_oversight": telenutrition.clinical_encounter_oversight.Insertable;
    "telenutrition.clinical_encounter_screening_questionnaire": telenutrition.clinical_encounter_screening_questionnaire.Insertable;
    "telenutrition.common_verification": telenutrition.common_verification.Insertable;
    "telenutrition.common_verification_method": telenutrition.common_verification_method.Insertable;
    "telenutrition.food_offering_type": telenutrition.food_offering_type.Insertable;
    "telenutrition.food_offering_type_history": telenutrition.food_offering_type_history.Insertable;
    "telenutrition.food_vendor": telenutrition.food_vendor.Insertable;
    "telenutrition.food_vendor_history": telenutrition.food_vendor_history.Insertable;
    "telenutrition.historical_athena_encounter_raw": telenutrition.historical_athena_encounter_raw.Insertable;
    "telenutrition.iam_federated_credentials": telenutrition.iam_federated_credentials.Insertable;
    "telenutrition.iam_identity": telenutrition.iam_identity.Insertable;
    "telenutrition.iam_user": telenutrition.iam_user.Insertable;
    "telenutrition.incentive": telenutrition.incentive.Insertable;
    "telenutrition.incentive_contract": telenutrition.incentive_contract.Insertable;
    "telenutrition.incentive_rule": telenutrition.incentive_rule.Insertable;
    "telenutrition.instacart_code": telenutrition.instacart_code.Insertable;
    "telenutrition.instacart_code_order": telenutrition.instacart_code_order.Insertable;
    "telenutrition.issue_report": telenutrition.issue_report.Insertable;
    "telenutrition.issue_report_type": telenutrition.issue_report_type.Insertable;
    "telenutrition.medallion_provider": telenutrition.medallion_provider.Insertable;
    "telenutrition.ontology_concept": telenutrition.ontology_concept.Insertable;
    "telenutrition.patient_attribute": telenutrition.patient_attribute.Insertable;
    "telenutrition.patient_attribute_option": telenutrition.patient_attribute_option.Insertable;
    "telenutrition.patient_fact": telenutrition.patient_fact.Insertable;
    "telenutrition.patient_fact_source": telenutrition.patient_fact_source.Insertable;
    "telenutrition.patient_payment_transaction": telenutrition.patient_payment_transaction.Insertable;
    "telenutrition.patient_summary": telenutrition.patient_summary.Insertable;
    "telenutrition.payer": telenutrition.payer.Insertable;
    "telenutrition.payer_enrollment": telenutrition.payer_enrollment.Insertable;
    "telenutrition.payer_provider_schedulability": telenutrition.payer_provider_schedulability.Insertable;
    "telenutrition.payer_roster": telenutrition.payer_roster.Insertable;
    "telenutrition.payment_eligibility_check": telenutrition.payment_eligibility_check.Insertable;
    "telenutrition.payment_method_type": telenutrition.payment_method_type.Insertable;
    "telenutrition.provider_board_certificate": telenutrition.provider_board_certificate.Insertable;
    "telenutrition.provider_license": telenutrition.provider_license.Insertable;
    "telenutrition.provider_license_application": telenutrition.provider_license_application.Insertable;
    "telenutrition.provider_license_summary": telenutrition.provider_license_summary.Insertable;
    "telenutrition.provider_program_enrollment": telenutrition.provider_program_enrollment.Insertable;
    "telenutrition.provider_task": telenutrition.provider_task.Insertable;
    "telenutrition.reward": telenutrition.reward.Insertable;
    "telenutrition.reward_user": telenutrition.reward_user.Insertable;
    "telenutrition.schedule_appointment": telenutrition.schedule_appointment.Insertable;
    "telenutrition.schedule_appointment_history": telenutrition.schedule_appointment_history.Insertable;
    "telenutrition.schedule_appointment_type": telenutrition.schedule_appointment_type.Insertable;
    "telenutrition.schedule_appointment_type_mapping": telenutrition.schedule_appointment_type_mapping.Insertable;
    "telenutrition.schedule_consent": telenutrition.schedule_consent.Insertable;
    "telenutrition.schedule_department": telenutrition.schedule_department.Insertable;
    "telenutrition.schedule_department_provider": telenutrition.schedule_department_provider.Insertable;
    "telenutrition.schedule_department_provider_licensed": telenutrition.schedule_department_provider_licensed.Insertable;
    "telenutrition.schedule_employer": telenutrition.schedule_employer.Insertable;
    "telenutrition.schedule_flow": telenutrition.schedule_flow.Insertable;
    "telenutrition.schedule_insurance": telenutrition.schedule_insurance.Insertable;
    "telenutrition.schedule_patient": telenutrition.schedule_patient.Insertable;
    "telenutrition.schedule_patient_payment_method": telenutrition.schedule_patient_payment_method.Insertable;
    "telenutrition.schedule_patient_survey": telenutrition.schedule_patient_survey.Insertable;
    "telenutrition.schedule_provider": telenutrition.schedule_provider.Insertable;
    "telenutrition.schedule_referral": telenutrition.schedule_referral.Insertable;
    "telenutrition.schedule_referrer": telenutrition.schedule_referrer.Insertable;
    "telenutrition.schedule_slot": telenutrition.schedule_slot.Insertable;
    "telenutrition.schedule_sponsor": telenutrition.schedule_sponsor.Insertable;
    "telenutrition.schedule_user": telenutrition.schedule_user.Insertable;
    "telenutrition.schedule_user_patient": telenutrition.schedule_user_patient.Insertable;
    "telenutrition.state_credentialing_config": telenutrition.state_credentialing_config.Insertable;
    "telenutrition.sticky_note": telenutrition.sticky_note.Insertable;
    "telenutrition.valid_provider_payer_enrollment": telenutrition.valid_provider_payer_enrollment.Insertable;
    "telenutrition.wallet": telenutrition.wallet.Insertable;
    "telenutrition.wallet_transaction": telenutrition.wallet_transaction.Insertable;
    "telenutrition.workramp_contact": telenutrition.workramp_contact.Insertable;
    "telenutrition.workramp_contact_path": telenutrition.workramp_contact_path.Insertable;
    "common.account": common.account.Insertable;
    "common.account_membership": common.account_membership.Insertable;
    "common.company_holiday": common.company_holiday.Insertable;
    "common.dnc_audit_email": common.dnc_audit_email.Insertable;
    "common.dnc_audit_identity": common.dnc_audit_identity.Insertable;
    "common.dnc_audit_phone": common.dnc_audit_phone.Insertable;
    "common.dnc_entry_email": common.dnc_entry_email.Insertable;
    "common.dnc_entry_identity": common.dnc_entry_identity.Insertable;
    "common.dnc_entry_phone": common.dnc_entry_phone.Insertable;
    "common.dnc_list_email": common.dnc_list_email.Insertable;
    "common.dnc_list_phone": common.dnc_list_phone.Insertable;
    "common.eligibility_member": common.eligibility_member.Insertable;
    "common.employee": common.employee.Insertable;
    "common.flow_task_log": common.flow_task_log.Insertable;
    "common.language_iso6391": common.language_iso6391.Insertable;
    "common.meeting_participant": common.meeting_participant.Insertable;
    "common.outbound_file_config": common.outbound_file_config.Insertable;
    "common.program": common.program.Insertable;
    "common.program_contract": common.program_contract.Insertable;
    "common.program_membership": common.program_membership.Insertable;
    "common.program_membership_history": common.program_membership_history.Insertable;
    "common.program_rule": common.program_rule.Insertable;
    "common.referral_config": common.referral_config.Insertable;
    "common.referral_source": common.referral_source.Insertable;
    "common.rippling_user": common.rippling_user.Insertable;
    "common.segment_definition": common.segment_definition.Insertable;
    "common.segment_destination_definition": common.segment_destination_definition.Insertable;
    "common.segment_destination_mapping": common.segment_destination_mapping.Insertable;
    "common.segment_destination_sync": common.segment_destination_sync.Insertable;
    "common.segment_member": common.segment_member.Insertable;
    "common.segment_member_history": common.segment_member_history.Insertable;
    "common.segment_profile": common.segment_profile.Insertable;
    "common.segment_sync": common.segment_sync.Insertable;
    "common.state": common.state.Insertable;
    "common.sync_token": common.sync_token.Insertable;
    "common.timezone": common.timezone.Insertable;
    "marketing.cio_customer": marketing.cio_customer.Insertable;
    "marketing.cio_customer_sync": marketing.cio_customer_sync.Insertable;
    "marketing.cio_segment": marketing.cio_segment.Insertable;
    "marketing.cio_segment_run": marketing.cio_segment_run.Insertable;
    "callcenter.agent": callcenter.agent.Insertable;
    "callcenter.calling_list": callcenter.calling_list.Insertable;
    "callcenter.calling_list_agent": callcenter.calling_list_agent.Insertable;
    "callcenter.campaign": callcenter.campaign.Insertable;
    "callcenter.dial": callcenter.dial.Insertable;
    "callcenter.dial_result": callcenter.dial_result.Insertable;
    "callcenter.do_not_call": callcenter.do_not_call.Insertable;
    "callcenter.lead": callcenter.lead.Insertable;
    "callcenter.rd_lead": callcenter.rd_lead.Insertable;
    "callcenter.script": callcenter.script.Insertable;
  }[T];

  export type UpdatableForTable<T extends Table> = {
    "foodcards.incomm_eligibility": foodcards.incomm_eligibility.Updatable;
    "foodcards.incomm_program_purses": foodcards.incomm_program_purses.Updatable;
    "foodcards.participants": foodcards.participants.Updatable;
    "telenutrition.account_food_offering_vendor_mapping": telenutrition.account_food_offering_vendor_mapping.Updatable;
    "telenutrition.account_food_offering_vendor_mapping_history": telenutrition.account_food_offering_vendor_mapping_history.Updatable;
    "telenutrition.account_payment_method_type": telenutrition.account_payment_method_type.Updatable;
    "telenutrition.activity": telenutrition.activity.Updatable;
    "telenutrition.activity_user": telenutrition.activity_user.Updatable;
    "telenutrition.appointment_cancel_reason": telenutrition.appointment_cancel_reason.Updatable;
    "telenutrition.athena_api_auth": telenutrition.athena_api_auth.Updatable;
    "telenutrition.billing_code": telenutrition.billing_code.Updatable;
    "telenutrition.billing_contract": telenutrition.billing_contract.Updatable;
    "telenutrition.billing_rule": telenutrition.billing_rule.Updatable;
    "telenutrition.billing_rule_history": telenutrition.billing_rule_history.Updatable;
    "telenutrition.billing_service_facility": telenutrition.billing_service_facility.Updatable;
    "telenutrition.billing_transaction": telenutrition.billing_transaction.Updatable;
    "telenutrition.clinical_encounter": telenutrition.clinical_encounter.Updatable;
    "telenutrition.clinical_encounter_amendment": telenutrition.clinical_encounter_amendment.Updatable;
    "telenutrition.clinical_encounter_history": telenutrition.clinical_encounter_history.Updatable;
    "telenutrition.clinical_encounter_oversight": telenutrition.clinical_encounter_oversight.Updatable;
    "telenutrition.clinical_encounter_screening_questionnaire": telenutrition.clinical_encounter_screening_questionnaire.Updatable;
    "telenutrition.common_verification": telenutrition.common_verification.Updatable;
    "telenutrition.common_verification_method": telenutrition.common_verification_method.Updatable;
    "telenutrition.food_offering_type": telenutrition.food_offering_type.Updatable;
    "telenutrition.food_offering_type_history": telenutrition.food_offering_type_history.Updatable;
    "telenutrition.food_vendor": telenutrition.food_vendor.Updatable;
    "telenutrition.food_vendor_history": telenutrition.food_vendor_history.Updatable;
    "telenutrition.historical_athena_encounter_raw": telenutrition.historical_athena_encounter_raw.Updatable;
    "telenutrition.iam_federated_credentials": telenutrition.iam_federated_credentials.Updatable;
    "telenutrition.iam_identity": telenutrition.iam_identity.Updatable;
    "telenutrition.iam_user": telenutrition.iam_user.Updatable;
    "telenutrition.incentive": telenutrition.incentive.Updatable;
    "telenutrition.incentive_contract": telenutrition.incentive_contract.Updatable;
    "telenutrition.incentive_rule": telenutrition.incentive_rule.Updatable;
    "telenutrition.instacart_code": telenutrition.instacart_code.Updatable;
    "telenutrition.instacart_code_order": telenutrition.instacart_code_order.Updatable;
    "telenutrition.issue_report": telenutrition.issue_report.Updatable;
    "telenutrition.issue_report_type": telenutrition.issue_report_type.Updatable;
    "telenutrition.medallion_provider": telenutrition.medallion_provider.Updatable;
    "telenutrition.ontology_concept": telenutrition.ontology_concept.Updatable;
    "telenutrition.patient_attribute": telenutrition.patient_attribute.Updatable;
    "telenutrition.patient_attribute_option": telenutrition.patient_attribute_option.Updatable;
    "telenutrition.patient_fact": telenutrition.patient_fact.Updatable;
    "telenutrition.patient_fact_source": telenutrition.patient_fact_source.Updatable;
    "telenutrition.patient_payment_transaction": telenutrition.patient_payment_transaction.Updatable;
    "telenutrition.patient_summary": telenutrition.patient_summary.Updatable;
    "telenutrition.payer": telenutrition.payer.Updatable;
    "telenutrition.payer_enrollment": telenutrition.payer_enrollment.Updatable;
    "telenutrition.payer_provider_schedulability": telenutrition.payer_provider_schedulability.Updatable;
    "telenutrition.payer_roster": telenutrition.payer_roster.Updatable;
    "telenutrition.payment_eligibility_check": telenutrition.payment_eligibility_check.Updatable;
    "telenutrition.payment_method_type": telenutrition.payment_method_type.Updatable;
    "telenutrition.provider_board_certificate": telenutrition.provider_board_certificate.Updatable;
    "telenutrition.provider_license": telenutrition.provider_license.Updatable;
    "telenutrition.provider_license_application": telenutrition.provider_license_application.Updatable;
    "telenutrition.provider_license_summary": telenutrition.provider_license_summary.Updatable;
    "telenutrition.provider_program_enrollment": telenutrition.provider_program_enrollment.Updatable;
    "telenutrition.provider_task": telenutrition.provider_task.Updatable;
    "telenutrition.reward": telenutrition.reward.Updatable;
    "telenutrition.reward_user": telenutrition.reward_user.Updatable;
    "telenutrition.schedule_appointment": telenutrition.schedule_appointment.Updatable;
    "telenutrition.schedule_appointment_history": telenutrition.schedule_appointment_history.Updatable;
    "telenutrition.schedule_appointment_type": telenutrition.schedule_appointment_type.Updatable;
    "telenutrition.schedule_appointment_type_mapping": telenutrition.schedule_appointment_type_mapping.Updatable;
    "telenutrition.schedule_consent": telenutrition.schedule_consent.Updatable;
    "telenutrition.schedule_department": telenutrition.schedule_department.Updatable;
    "telenutrition.schedule_department_provider": telenutrition.schedule_department_provider.Updatable;
    "telenutrition.schedule_department_provider_licensed": telenutrition.schedule_department_provider_licensed.Updatable;
    "telenutrition.schedule_employer": telenutrition.schedule_employer.Updatable;
    "telenutrition.schedule_flow": telenutrition.schedule_flow.Updatable;
    "telenutrition.schedule_insurance": telenutrition.schedule_insurance.Updatable;
    "telenutrition.schedule_patient": telenutrition.schedule_patient.Updatable;
    "telenutrition.schedule_patient_payment_method": telenutrition.schedule_patient_payment_method.Updatable;
    "telenutrition.schedule_patient_survey": telenutrition.schedule_patient_survey.Updatable;
    "telenutrition.schedule_provider": telenutrition.schedule_provider.Updatable;
    "telenutrition.schedule_referral": telenutrition.schedule_referral.Updatable;
    "telenutrition.schedule_referrer": telenutrition.schedule_referrer.Updatable;
    "telenutrition.schedule_slot": telenutrition.schedule_slot.Updatable;
    "telenutrition.schedule_sponsor": telenutrition.schedule_sponsor.Updatable;
    "telenutrition.schedule_user": telenutrition.schedule_user.Updatable;
    "telenutrition.schedule_user_patient": telenutrition.schedule_user_patient.Updatable;
    "telenutrition.state_credentialing_config": telenutrition.state_credentialing_config.Updatable;
    "telenutrition.sticky_note": telenutrition.sticky_note.Updatable;
    "telenutrition.valid_provider_payer_enrollment": telenutrition.valid_provider_payer_enrollment.Updatable;
    "telenutrition.wallet": telenutrition.wallet.Updatable;
    "telenutrition.wallet_transaction": telenutrition.wallet_transaction.Updatable;
    "telenutrition.workramp_contact": telenutrition.workramp_contact.Updatable;
    "telenutrition.workramp_contact_path": telenutrition.workramp_contact_path.Updatable;
    "common.account": common.account.Updatable;
    "common.account_membership": common.account_membership.Updatable;
    "common.company_holiday": common.company_holiday.Updatable;
    "common.dnc_audit_email": common.dnc_audit_email.Updatable;
    "common.dnc_audit_identity": common.dnc_audit_identity.Updatable;
    "common.dnc_audit_phone": common.dnc_audit_phone.Updatable;
    "common.dnc_entry_email": common.dnc_entry_email.Updatable;
    "common.dnc_entry_identity": common.dnc_entry_identity.Updatable;
    "common.dnc_entry_phone": common.dnc_entry_phone.Updatable;
    "common.dnc_list_email": common.dnc_list_email.Updatable;
    "common.dnc_list_phone": common.dnc_list_phone.Updatable;
    "common.eligibility_member": common.eligibility_member.Updatable;
    "common.employee": common.employee.Updatable;
    "common.flow_task_log": common.flow_task_log.Updatable;
    "common.language_iso6391": common.language_iso6391.Updatable;
    "common.meeting_participant": common.meeting_participant.Updatable;
    "common.outbound_file_config": common.outbound_file_config.Updatable;
    "common.program": common.program.Updatable;
    "common.program_contract": common.program_contract.Updatable;
    "common.program_membership": common.program_membership.Updatable;
    "common.program_membership_history": common.program_membership_history.Updatable;
    "common.program_rule": common.program_rule.Updatable;
    "common.referral_config": common.referral_config.Updatable;
    "common.referral_source": common.referral_source.Updatable;
    "common.rippling_user": common.rippling_user.Updatable;
    "common.segment_definition": common.segment_definition.Updatable;
    "common.segment_destination_definition": common.segment_destination_definition.Updatable;
    "common.segment_destination_mapping": common.segment_destination_mapping.Updatable;
    "common.segment_destination_sync": common.segment_destination_sync.Updatable;
    "common.segment_member": common.segment_member.Updatable;
    "common.segment_member_history": common.segment_member_history.Updatable;
    "common.segment_profile": common.segment_profile.Updatable;
    "common.segment_sync": common.segment_sync.Updatable;
    "common.state": common.state.Updatable;
    "common.sync_token": common.sync_token.Updatable;
    "common.timezone": common.timezone.Updatable;
    "marketing.cio_customer": marketing.cio_customer.Updatable;
    "marketing.cio_customer_sync": marketing.cio_customer_sync.Updatable;
    "marketing.cio_segment": marketing.cio_segment.Updatable;
    "marketing.cio_segment_run": marketing.cio_segment_run.Updatable;
    "callcenter.agent": callcenter.agent.Updatable;
    "callcenter.calling_list": callcenter.calling_list.Updatable;
    "callcenter.calling_list_agent": callcenter.calling_list_agent.Updatable;
    "callcenter.campaign": callcenter.campaign.Updatable;
    "callcenter.dial": callcenter.dial.Updatable;
    "callcenter.dial_result": callcenter.dial_result.Updatable;
    "callcenter.do_not_call": callcenter.do_not_call.Updatable;
    "callcenter.lead": callcenter.lead.Updatable;
    "callcenter.rd_lead": callcenter.rd_lead.Updatable;
    "callcenter.script": callcenter.script.Updatable;
  }[T];

  export type UniqueIndexForTable<T extends Table> = {
    "foodcards.incomm_eligibility": foodcards.incomm_eligibility.UniqueIndex;
    "foodcards.incomm_program_purses": foodcards.incomm_program_purses.UniqueIndex;
    "foodcards.participants": foodcards.participants.UniqueIndex;
    "telenutrition.account_food_offering_vendor_mapping": telenutrition.account_food_offering_vendor_mapping.UniqueIndex;
    "telenutrition.account_food_offering_vendor_mapping_history": telenutrition.account_food_offering_vendor_mapping_history.UniqueIndex;
    "telenutrition.account_payment_method_type": telenutrition.account_payment_method_type.UniqueIndex;
    "telenutrition.activity": telenutrition.activity.UniqueIndex;
    "telenutrition.activity_user": telenutrition.activity_user.UniqueIndex;
    "telenutrition.appointment_cancel_reason": telenutrition.appointment_cancel_reason.UniqueIndex;
    "telenutrition.athena_api_auth": telenutrition.athena_api_auth.UniqueIndex;
    "telenutrition.billing_code": telenutrition.billing_code.UniqueIndex;
    "telenutrition.billing_contract": telenutrition.billing_contract.UniqueIndex;
    "telenutrition.billing_rule": telenutrition.billing_rule.UniqueIndex;
    "telenutrition.billing_rule_history": telenutrition.billing_rule_history.UniqueIndex;
    "telenutrition.billing_service_facility": telenutrition.billing_service_facility.UniqueIndex;
    "telenutrition.billing_transaction": telenutrition.billing_transaction.UniqueIndex;
    "telenutrition.clinical_encounter": telenutrition.clinical_encounter.UniqueIndex;
    "telenutrition.clinical_encounter_amendment": telenutrition.clinical_encounter_amendment.UniqueIndex;
    "telenutrition.clinical_encounter_history": telenutrition.clinical_encounter_history.UniqueIndex;
    "telenutrition.clinical_encounter_oversight": telenutrition.clinical_encounter_oversight.UniqueIndex;
    "telenutrition.clinical_encounter_screening_questionnaire": telenutrition.clinical_encounter_screening_questionnaire.UniqueIndex;
    "telenutrition.common_verification": telenutrition.common_verification.UniqueIndex;
    "telenutrition.common_verification_method": telenutrition.common_verification_method.UniqueIndex;
    "telenutrition.food_offering_type": telenutrition.food_offering_type.UniqueIndex;
    "telenutrition.food_offering_type_history": telenutrition.food_offering_type_history.UniqueIndex;
    "telenutrition.food_vendor": telenutrition.food_vendor.UniqueIndex;
    "telenutrition.food_vendor_history": telenutrition.food_vendor_history.UniqueIndex;
    "telenutrition.historical_athena_encounter_raw": telenutrition.historical_athena_encounter_raw.UniqueIndex;
    "telenutrition.iam_federated_credentials": telenutrition.iam_federated_credentials.UniqueIndex;
    "telenutrition.iam_identity": telenutrition.iam_identity.UniqueIndex;
    "telenutrition.iam_user": telenutrition.iam_user.UniqueIndex;
    "telenutrition.incentive": telenutrition.incentive.UniqueIndex;
    "telenutrition.incentive_contract": telenutrition.incentive_contract.UniqueIndex;
    "telenutrition.incentive_rule": telenutrition.incentive_rule.UniqueIndex;
    "telenutrition.instacart_code": telenutrition.instacart_code.UniqueIndex;
    "telenutrition.instacart_code_order": telenutrition.instacart_code_order.UniqueIndex;
    "telenutrition.issue_report": telenutrition.issue_report.UniqueIndex;
    "telenutrition.issue_report_type": telenutrition.issue_report_type.UniqueIndex;
    "telenutrition.medallion_provider": telenutrition.medallion_provider.UniqueIndex;
    "telenutrition.ontology_concept": telenutrition.ontology_concept.UniqueIndex;
    "telenutrition.patient_attribute": telenutrition.patient_attribute.UniqueIndex;
    "telenutrition.patient_attribute_option": telenutrition.patient_attribute_option.UniqueIndex;
    "telenutrition.patient_fact": telenutrition.patient_fact.UniqueIndex;
    "telenutrition.patient_fact_source": telenutrition.patient_fact_source.UniqueIndex;
    "telenutrition.patient_payment_transaction": telenutrition.patient_payment_transaction.UniqueIndex;
    "telenutrition.patient_summary": telenutrition.patient_summary.UniqueIndex;
    "telenutrition.payer": telenutrition.payer.UniqueIndex;
    "telenutrition.payer_enrollment": telenutrition.payer_enrollment.UniqueIndex;
    "telenutrition.payer_provider_schedulability": telenutrition.payer_provider_schedulability.UniqueIndex;
    "telenutrition.payer_roster": telenutrition.payer_roster.UniqueIndex;
    "telenutrition.payment_eligibility_check": telenutrition.payment_eligibility_check.UniqueIndex;
    "telenutrition.payment_method_type": telenutrition.payment_method_type.UniqueIndex;
    "telenutrition.provider_board_certificate": telenutrition.provider_board_certificate.UniqueIndex;
    "telenutrition.provider_license": telenutrition.provider_license.UniqueIndex;
    "telenutrition.provider_license_application": telenutrition.provider_license_application.UniqueIndex;
    "telenutrition.provider_license_summary": telenutrition.provider_license_summary.UniqueIndex;
    "telenutrition.provider_program_enrollment": telenutrition.provider_program_enrollment.UniqueIndex;
    "telenutrition.provider_task": telenutrition.provider_task.UniqueIndex;
    "telenutrition.reward": telenutrition.reward.UniqueIndex;
    "telenutrition.reward_user": telenutrition.reward_user.UniqueIndex;
    "telenutrition.schedule_appointment": telenutrition.schedule_appointment.UniqueIndex;
    "telenutrition.schedule_appointment_history": telenutrition.schedule_appointment_history.UniqueIndex;
    "telenutrition.schedule_appointment_type": telenutrition.schedule_appointment_type.UniqueIndex;
    "telenutrition.schedule_appointment_type_mapping": telenutrition.schedule_appointment_type_mapping.UniqueIndex;
    "telenutrition.schedule_consent": telenutrition.schedule_consent.UniqueIndex;
    "telenutrition.schedule_department": telenutrition.schedule_department.UniqueIndex;
    "telenutrition.schedule_department_provider": telenutrition.schedule_department_provider.UniqueIndex;
    "telenutrition.schedule_department_provider_licensed": telenutrition.schedule_department_provider_licensed.UniqueIndex;
    "telenutrition.schedule_employer": telenutrition.schedule_employer.UniqueIndex;
    "telenutrition.schedule_flow": telenutrition.schedule_flow.UniqueIndex;
    "telenutrition.schedule_insurance": telenutrition.schedule_insurance.UniqueIndex;
    "telenutrition.schedule_patient": telenutrition.schedule_patient.UniqueIndex;
    "telenutrition.schedule_patient_payment_method": telenutrition.schedule_patient_payment_method.UniqueIndex;
    "telenutrition.schedule_patient_survey": telenutrition.schedule_patient_survey.UniqueIndex;
    "telenutrition.schedule_provider": telenutrition.schedule_provider.UniqueIndex;
    "telenutrition.schedule_referral": telenutrition.schedule_referral.UniqueIndex;
    "telenutrition.schedule_referrer": telenutrition.schedule_referrer.UniqueIndex;
    "telenutrition.schedule_slot": telenutrition.schedule_slot.UniqueIndex;
    "telenutrition.schedule_sponsor": telenutrition.schedule_sponsor.UniqueIndex;
    "telenutrition.schedule_user": telenutrition.schedule_user.UniqueIndex;
    "telenutrition.schedule_user_patient": telenutrition.schedule_user_patient.UniqueIndex;
    "telenutrition.state_credentialing_config": telenutrition.state_credentialing_config.UniqueIndex;
    "telenutrition.sticky_note": telenutrition.sticky_note.UniqueIndex;
    "telenutrition.valid_provider_payer_enrollment": telenutrition.valid_provider_payer_enrollment.UniqueIndex;
    "telenutrition.wallet": telenutrition.wallet.UniqueIndex;
    "telenutrition.wallet_transaction": telenutrition.wallet_transaction.UniqueIndex;
    "telenutrition.workramp_contact": telenutrition.workramp_contact.UniqueIndex;
    "telenutrition.workramp_contact_path": telenutrition.workramp_contact_path.UniqueIndex;
    "common.account": common.account.UniqueIndex;
    "common.account_membership": common.account_membership.UniqueIndex;
    "common.company_holiday": common.company_holiday.UniqueIndex;
    "common.dnc_audit_email": common.dnc_audit_email.UniqueIndex;
    "common.dnc_audit_identity": common.dnc_audit_identity.UniqueIndex;
    "common.dnc_audit_phone": common.dnc_audit_phone.UniqueIndex;
    "common.dnc_entry_email": common.dnc_entry_email.UniqueIndex;
    "common.dnc_entry_identity": common.dnc_entry_identity.UniqueIndex;
    "common.dnc_entry_phone": common.dnc_entry_phone.UniqueIndex;
    "common.dnc_list_email": common.dnc_list_email.UniqueIndex;
    "common.dnc_list_phone": common.dnc_list_phone.UniqueIndex;
    "common.eligibility_member": common.eligibility_member.UniqueIndex;
    "common.employee": common.employee.UniqueIndex;
    "common.flow_task_log": common.flow_task_log.UniqueIndex;
    "common.language_iso6391": common.language_iso6391.UniqueIndex;
    "common.meeting_participant": common.meeting_participant.UniqueIndex;
    "common.outbound_file_config": common.outbound_file_config.UniqueIndex;
    "common.program": common.program.UniqueIndex;
    "common.program_contract": common.program_contract.UniqueIndex;
    "common.program_membership": common.program_membership.UniqueIndex;
    "common.program_membership_history": common.program_membership_history.UniqueIndex;
    "common.program_rule": common.program_rule.UniqueIndex;
    "common.referral_config": common.referral_config.UniqueIndex;
    "common.referral_source": common.referral_source.UniqueIndex;
    "common.rippling_user": common.rippling_user.UniqueIndex;
    "common.segment_definition": common.segment_definition.UniqueIndex;
    "common.segment_destination_definition": common.segment_destination_definition.UniqueIndex;
    "common.segment_destination_mapping": common.segment_destination_mapping.UniqueIndex;
    "common.segment_destination_sync": common.segment_destination_sync.UniqueIndex;
    "common.segment_member": common.segment_member.UniqueIndex;
    "common.segment_member_history": common.segment_member_history.UniqueIndex;
    "common.segment_profile": common.segment_profile.UniqueIndex;
    "common.segment_sync": common.segment_sync.UniqueIndex;
    "common.state": common.state.UniqueIndex;
    "common.sync_token": common.sync_token.UniqueIndex;
    "common.timezone": common.timezone.UniqueIndex;
    "marketing.cio_customer": marketing.cio_customer.UniqueIndex;
    "marketing.cio_customer_sync": marketing.cio_customer_sync.UniqueIndex;
    "marketing.cio_segment": marketing.cio_segment.UniqueIndex;
    "marketing.cio_segment_run": marketing.cio_segment_run.UniqueIndex;
    "callcenter.agent": callcenter.agent.UniqueIndex;
    "callcenter.calling_list": callcenter.calling_list.UniqueIndex;
    "callcenter.calling_list_agent": callcenter.calling_list_agent.UniqueIndex;
    "callcenter.campaign": callcenter.campaign.UniqueIndex;
    "callcenter.dial": callcenter.dial.UniqueIndex;
    "callcenter.dial_result": callcenter.dial_result.UniqueIndex;
    "callcenter.do_not_call": callcenter.do_not_call.UniqueIndex;
    "callcenter.lead": callcenter.lead.UniqueIndex;
    "callcenter.rd_lead": callcenter.rd_lead.UniqueIndex;
    "callcenter.script": callcenter.script.UniqueIndex;
  }[T];

  export type ColumnForTable<T extends Table> = {
    "foodcards.incomm_eligibility": foodcards.incomm_eligibility.Column;
    "foodcards.incomm_program_purses": foodcards.incomm_program_purses.Column;
    "foodcards.participants": foodcards.participants.Column;
    "telenutrition.account_food_offering_vendor_mapping": telenutrition.account_food_offering_vendor_mapping.Column;
    "telenutrition.account_food_offering_vendor_mapping_history": telenutrition.account_food_offering_vendor_mapping_history.Column;
    "telenutrition.account_payment_method_type": telenutrition.account_payment_method_type.Column;
    "telenutrition.activity": telenutrition.activity.Column;
    "telenutrition.activity_user": telenutrition.activity_user.Column;
    "telenutrition.appointment_cancel_reason": telenutrition.appointment_cancel_reason.Column;
    "telenutrition.athena_api_auth": telenutrition.athena_api_auth.Column;
    "telenutrition.billing_code": telenutrition.billing_code.Column;
    "telenutrition.billing_contract": telenutrition.billing_contract.Column;
    "telenutrition.billing_rule": telenutrition.billing_rule.Column;
    "telenutrition.billing_rule_history": telenutrition.billing_rule_history.Column;
    "telenutrition.billing_service_facility": telenutrition.billing_service_facility.Column;
    "telenutrition.billing_transaction": telenutrition.billing_transaction.Column;
    "telenutrition.clinical_encounter": telenutrition.clinical_encounter.Column;
    "telenutrition.clinical_encounter_amendment": telenutrition.clinical_encounter_amendment.Column;
    "telenutrition.clinical_encounter_history": telenutrition.clinical_encounter_history.Column;
    "telenutrition.clinical_encounter_oversight": telenutrition.clinical_encounter_oversight.Column;
    "telenutrition.clinical_encounter_screening_questionnaire": telenutrition.clinical_encounter_screening_questionnaire.Column;
    "telenutrition.common_verification": telenutrition.common_verification.Column;
    "telenutrition.common_verification_method": telenutrition.common_verification_method.Column;
    "telenutrition.food_offering_type": telenutrition.food_offering_type.Column;
    "telenutrition.food_offering_type_history": telenutrition.food_offering_type_history.Column;
    "telenutrition.food_vendor": telenutrition.food_vendor.Column;
    "telenutrition.food_vendor_history": telenutrition.food_vendor_history.Column;
    "telenutrition.historical_athena_encounter_raw": telenutrition.historical_athena_encounter_raw.Column;
    "telenutrition.iam_federated_credentials": telenutrition.iam_federated_credentials.Column;
    "telenutrition.iam_identity": telenutrition.iam_identity.Column;
    "telenutrition.iam_user": telenutrition.iam_user.Column;
    "telenutrition.incentive": telenutrition.incentive.Column;
    "telenutrition.incentive_contract": telenutrition.incentive_contract.Column;
    "telenutrition.incentive_rule": telenutrition.incentive_rule.Column;
    "telenutrition.instacart_code": telenutrition.instacart_code.Column;
    "telenutrition.instacart_code_order": telenutrition.instacart_code_order.Column;
    "telenutrition.issue_report": telenutrition.issue_report.Column;
    "telenutrition.issue_report_type": telenutrition.issue_report_type.Column;
    "telenutrition.medallion_provider": telenutrition.medallion_provider.Column;
    "telenutrition.ontology_concept": telenutrition.ontology_concept.Column;
    "telenutrition.patient_attribute": telenutrition.patient_attribute.Column;
    "telenutrition.patient_attribute_option": telenutrition.patient_attribute_option.Column;
    "telenutrition.patient_fact": telenutrition.patient_fact.Column;
    "telenutrition.patient_fact_source": telenutrition.patient_fact_source.Column;
    "telenutrition.patient_payment_transaction": telenutrition.patient_payment_transaction.Column;
    "telenutrition.patient_summary": telenutrition.patient_summary.Column;
    "telenutrition.payer": telenutrition.payer.Column;
    "telenutrition.payer_enrollment": telenutrition.payer_enrollment.Column;
    "telenutrition.payer_provider_schedulability": telenutrition.payer_provider_schedulability.Column;
    "telenutrition.payer_roster": telenutrition.payer_roster.Column;
    "telenutrition.payment_eligibility_check": telenutrition.payment_eligibility_check.Column;
    "telenutrition.payment_method_type": telenutrition.payment_method_type.Column;
    "telenutrition.provider_board_certificate": telenutrition.provider_board_certificate.Column;
    "telenutrition.provider_license": telenutrition.provider_license.Column;
    "telenutrition.provider_license_application": telenutrition.provider_license_application.Column;
    "telenutrition.provider_license_summary": telenutrition.provider_license_summary.Column;
    "telenutrition.provider_program_enrollment": telenutrition.provider_program_enrollment.Column;
    "telenutrition.provider_task": telenutrition.provider_task.Column;
    "telenutrition.reward": telenutrition.reward.Column;
    "telenutrition.reward_user": telenutrition.reward_user.Column;
    "telenutrition.schedule_appointment": telenutrition.schedule_appointment.Column;
    "telenutrition.schedule_appointment_history": telenutrition.schedule_appointment_history.Column;
    "telenutrition.schedule_appointment_type": telenutrition.schedule_appointment_type.Column;
    "telenutrition.schedule_appointment_type_mapping": telenutrition.schedule_appointment_type_mapping.Column;
    "telenutrition.schedule_consent": telenutrition.schedule_consent.Column;
    "telenutrition.schedule_department": telenutrition.schedule_department.Column;
    "telenutrition.schedule_department_provider": telenutrition.schedule_department_provider.Column;
    "telenutrition.schedule_department_provider_licensed": telenutrition.schedule_department_provider_licensed.Column;
    "telenutrition.schedule_employer": telenutrition.schedule_employer.Column;
    "telenutrition.schedule_flow": telenutrition.schedule_flow.Column;
    "telenutrition.schedule_insurance": telenutrition.schedule_insurance.Column;
    "telenutrition.schedule_patient": telenutrition.schedule_patient.Column;
    "telenutrition.schedule_patient_payment_method": telenutrition.schedule_patient_payment_method.Column;
    "telenutrition.schedule_patient_survey": telenutrition.schedule_patient_survey.Column;
    "telenutrition.schedule_provider": telenutrition.schedule_provider.Column;
    "telenutrition.schedule_referral": telenutrition.schedule_referral.Column;
    "telenutrition.schedule_referrer": telenutrition.schedule_referrer.Column;
    "telenutrition.schedule_slot": telenutrition.schedule_slot.Column;
    "telenutrition.schedule_sponsor": telenutrition.schedule_sponsor.Column;
    "telenutrition.schedule_user": telenutrition.schedule_user.Column;
    "telenutrition.schedule_user_patient": telenutrition.schedule_user_patient.Column;
    "telenutrition.state_credentialing_config": telenutrition.state_credentialing_config.Column;
    "telenutrition.sticky_note": telenutrition.sticky_note.Column;
    "telenutrition.valid_provider_payer_enrollment": telenutrition.valid_provider_payer_enrollment.Column;
    "telenutrition.wallet": telenutrition.wallet.Column;
    "telenutrition.wallet_transaction": telenutrition.wallet_transaction.Column;
    "telenutrition.workramp_contact": telenutrition.workramp_contact.Column;
    "telenutrition.workramp_contact_path": telenutrition.workramp_contact_path.Column;
    "common.account": common.account.Column;
    "common.account_membership": common.account_membership.Column;
    "common.company_holiday": common.company_holiday.Column;
    "common.dnc_audit_email": common.dnc_audit_email.Column;
    "common.dnc_audit_identity": common.dnc_audit_identity.Column;
    "common.dnc_audit_phone": common.dnc_audit_phone.Column;
    "common.dnc_entry_email": common.dnc_entry_email.Column;
    "common.dnc_entry_identity": common.dnc_entry_identity.Column;
    "common.dnc_entry_phone": common.dnc_entry_phone.Column;
    "common.dnc_list_email": common.dnc_list_email.Column;
    "common.dnc_list_phone": common.dnc_list_phone.Column;
    "common.eligibility_member": common.eligibility_member.Column;
    "common.employee": common.employee.Column;
    "common.flow_task_log": common.flow_task_log.Column;
    "common.language_iso6391": common.language_iso6391.Column;
    "common.meeting_participant": common.meeting_participant.Column;
    "common.outbound_file_config": common.outbound_file_config.Column;
    "common.program": common.program.Column;
    "common.program_contract": common.program_contract.Column;
    "common.program_membership": common.program_membership.Column;
    "common.program_membership_history": common.program_membership_history.Column;
    "common.program_rule": common.program_rule.Column;
    "common.referral_config": common.referral_config.Column;
    "common.referral_source": common.referral_source.Column;
    "common.rippling_user": common.rippling_user.Column;
    "common.segment_definition": common.segment_definition.Column;
    "common.segment_destination_definition": common.segment_destination_definition.Column;
    "common.segment_destination_mapping": common.segment_destination_mapping.Column;
    "common.segment_destination_sync": common.segment_destination_sync.Column;
    "common.segment_member": common.segment_member.Column;
    "common.segment_member_history": common.segment_member_history.Column;
    "common.segment_profile": common.segment_profile.Column;
    "common.segment_sync": common.segment_sync.Column;
    "common.state": common.state.Column;
    "common.sync_token": common.sync_token.Column;
    "common.timezone": common.timezone.Column;
    "marketing.cio_customer": marketing.cio_customer.Column;
    "marketing.cio_customer_sync": marketing.cio_customer_sync.Column;
    "marketing.cio_segment": marketing.cio_segment.Column;
    "marketing.cio_segment_run": marketing.cio_segment_run.Column;
    "callcenter.agent": callcenter.agent.Column;
    "callcenter.calling_list": callcenter.calling_list.Column;
    "callcenter.calling_list_agent": callcenter.calling_list_agent.Column;
    "callcenter.campaign": callcenter.campaign.Column;
    "callcenter.dial": callcenter.dial.Column;
    "callcenter.dial_result": callcenter.dial_result.Column;
    "callcenter.do_not_call": callcenter.do_not_call.Column;
    "callcenter.lead": callcenter.lead.Column;
    "callcenter.rd_lead": callcenter.rd_lead.Column;
    "callcenter.script": callcenter.script.Column;
  }[T];

  export type SQLForTable<T extends Table> = {
    "foodcards.incomm_eligibility": foodcards.incomm_eligibility.SQL;
    "foodcards.incomm_program_purses": foodcards.incomm_program_purses.SQL;
    "foodcards.participants": foodcards.participants.SQL;
    "telenutrition.account_food_offering_vendor_mapping": telenutrition.account_food_offering_vendor_mapping.SQL;
    "telenutrition.account_food_offering_vendor_mapping_history": telenutrition.account_food_offering_vendor_mapping_history.SQL;
    "telenutrition.account_payment_method_type": telenutrition.account_payment_method_type.SQL;
    "telenutrition.activity": telenutrition.activity.SQL;
    "telenutrition.activity_user": telenutrition.activity_user.SQL;
    "telenutrition.appointment_cancel_reason": telenutrition.appointment_cancel_reason.SQL;
    "telenutrition.athena_api_auth": telenutrition.athena_api_auth.SQL;
    "telenutrition.billing_code": telenutrition.billing_code.SQL;
    "telenutrition.billing_contract": telenutrition.billing_contract.SQL;
    "telenutrition.billing_rule": telenutrition.billing_rule.SQL;
    "telenutrition.billing_rule_history": telenutrition.billing_rule_history.SQL;
    "telenutrition.billing_service_facility": telenutrition.billing_service_facility.SQL;
    "telenutrition.billing_transaction": telenutrition.billing_transaction.SQL;
    "telenutrition.clinical_encounter": telenutrition.clinical_encounter.SQL;
    "telenutrition.clinical_encounter_amendment": telenutrition.clinical_encounter_amendment.SQL;
    "telenutrition.clinical_encounter_history": telenutrition.clinical_encounter_history.SQL;
    "telenutrition.clinical_encounter_oversight": telenutrition.clinical_encounter_oversight.SQL;
    "telenutrition.clinical_encounter_screening_questionnaire": telenutrition.clinical_encounter_screening_questionnaire.SQL;
    "telenutrition.common_verification": telenutrition.common_verification.SQL;
    "telenutrition.common_verification_method": telenutrition.common_verification_method.SQL;
    "telenutrition.food_offering_type": telenutrition.food_offering_type.SQL;
    "telenutrition.food_offering_type_history": telenutrition.food_offering_type_history.SQL;
    "telenutrition.food_vendor": telenutrition.food_vendor.SQL;
    "telenutrition.food_vendor_history": telenutrition.food_vendor_history.SQL;
    "telenutrition.historical_athena_encounter_raw": telenutrition.historical_athena_encounter_raw.SQL;
    "telenutrition.iam_federated_credentials": telenutrition.iam_federated_credentials.SQL;
    "telenutrition.iam_identity": telenutrition.iam_identity.SQL;
    "telenutrition.iam_user": telenutrition.iam_user.SQL;
    "telenutrition.incentive": telenutrition.incentive.SQL;
    "telenutrition.incentive_contract": telenutrition.incentive_contract.SQL;
    "telenutrition.incentive_rule": telenutrition.incentive_rule.SQL;
    "telenutrition.instacart_code": telenutrition.instacart_code.SQL;
    "telenutrition.instacart_code_order": telenutrition.instacart_code_order.SQL;
    "telenutrition.issue_report": telenutrition.issue_report.SQL;
    "telenutrition.issue_report_type": telenutrition.issue_report_type.SQL;
    "telenutrition.medallion_provider": telenutrition.medallion_provider.SQL;
    "telenutrition.ontology_concept": telenutrition.ontology_concept.SQL;
    "telenutrition.patient_attribute": telenutrition.patient_attribute.SQL;
    "telenutrition.patient_attribute_option": telenutrition.patient_attribute_option.SQL;
    "telenutrition.patient_fact": telenutrition.patient_fact.SQL;
    "telenutrition.patient_fact_source": telenutrition.patient_fact_source.SQL;
    "telenutrition.patient_payment_transaction": telenutrition.patient_payment_transaction.SQL;
    "telenutrition.patient_summary": telenutrition.patient_summary.SQL;
    "telenutrition.payer": telenutrition.payer.SQL;
    "telenutrition.payer_enrollment": telenutrition.payer_enrollment.SQL;
    "telenutrition.payer_provider_schedulability": telenutrition.payer_provider_schedulability.SQL;
    "telenutrition.payer_roster": telenutrition.payer_roster.SQL;
    "telenutrition.payment_eligibility_check": telenutrition.payment_eligibility_check.SQL;
    "telenutrition.payment_method_type": telenutrition.payment_method_type.SQL;
    "telenutrition.provider_board_certificate": telenutrition.provider_board_certificate.SQL;
    "telenutrition.provider_license": telenutrition.provider_license.SQL;
    "telenutrition.provider_license_application": telenutrition.provider_license_application.SQL;
    "telenutrition.provider_license_summary": telenutrition.provider_license_summary.SQL;
    "telenutrition.provider_program_enrollment": telenutrition.provider_program_enrollment.SQL;
    "telenutrition.provider_task": telenutrition.provider_task.SQL;
    "telenutrition.reward": telenutrition.reward.SQL;
    "telenutrition.reward_user": telenutrition.reward_user.SQL;
    "telenutrition.schedule_appointment": telenutrition.schedule_appointment.SQL;
    "telenutrition.schedule_appointment_history": telenutrition.schedule_appointment_history.SQL;
    "telenutrition.schedule_appointment_type": telenutrition.schedule_appointment_type.SQL;
    "telenutrition.schedule_appointment_type_mapping": telenutrition.schedule_appointment_type_mapping.SQL;
    "telenutrition.schedule_consent": telenutrition.schedule_consent.SQL;
    "telenutrition.schedule_department": telenutrition.schedule_department.SQL;
    "telenutrition.schedule_department_provider": telenutrition.schedule_department_provider.SQL;
    "telenutrition.schedule_department_provider_licensed": telenutrition.schedule_department_provider_licensed.SQL;
    "telenutrition.schedule_employer": telenutrition.schedule_employer.SQL;
    "telenutrition.schedule_flow": telenutrition.schedule_flow.SQL;
    "telenutrition.schedule_insurance": telenutrition.schedule_insurance.SQL;
    "telenutrition.schedule_patient": telenutrition.schedule_patient.SQL;
    "telenutrition.schedule_patient_payment_method": telenutrition.schedule_patient_payment_method.SQL;
    "telenutrition.schedule_patient_survey": telenutrition.schedule_patient_survey.SQL;
    "telenutrition.schedule_provider": telenutrition.schedule_provider.SQL;
    "telenutrition.schedule_referral": telenutrition.schedule_referral.SQL;
    "telenutrition.schedule_referrer": telenutrition.schedule_referrer.SQL;
    "telenutrition.schedule_slot": telenutrition.schedule_slot.SQL;
    "telenutrition.schedule_sponsor": telenutrition.schedule_sponsor.SQL;
    "telenutrition.schedule_user": telenutrition.schedule_user.SQL;
    "telenutrition.schedule_user_patient": telenutrition.schedule_user_patient.SQL;
    "telenutrition.state_credentialing_config": telenutrition.state_credentialing_config.SQL;
    "telenutrition.sticky_note": telenutrition.sticky_note.SQL;
    "telenutrition.valid_provider_payer_enrollment": telenutrition.valid_provider_payer_enrollment.SQL;
    "telenutrition.wallet": telenutrition.wallet.SQL;
    "telenutrition.wallet_transaction": telenutrition.wallet_transaction.SQL;
    "telenutrition.workramp_contact": telenutrition.workramp_contact.SQL;
    "telenutrition.workramp_contact_path": telenutrition.workramp_contact_path.SQL;
    "common.account": common.account.SQL;
    "common.account_membership": common.account_membership.SQL;
    "common.company_holiday": common.company_holiday.SQL;
    "common.dnc_audit_email": common.dnc_audit_email.SQL;
    "common.dnc_audit_identity": common.dnc_audit_identity.SQL;
    "common.dnc_audit_phone": common.dnc_audit_phone.SQL;
    "common.dnc_entry_email": common.dnc_entry_email.SQL;
    "common.dnc_entry_identity": common.dnc_entry_identity.SQL;
    "common.dnc_entry_phone": common.dnc_entry_phone.SQL;
    "common.dnc_list_email": common.dnc_list_email.SQL;
    "common.dnc_list_phone": common.dnc_list_phone.SQL;
    "common.eligibility_member": common.eligibility_member.SQL;
    "common.employee": common.employee.SQL;
    "common.flow_task_log": common.flow_task_log.SQL;
    "common.language_iso6391": common.language_iso6391.SQL;
    "common.meeting_participant": common.meeting_participant.SQL;
    "common.outbound_file_config": common.outbound_file_config.SQL;
    "common.program": common.program.SQL;
    "common.program_contract": common.program_contract.SQL;
    "common.program_membership": common.program_membership.SQL;
    "common.program_membership_history": common.program_membership_history.SQL;
    "common.program_rule": common.program_rule.SQL;
    "common.referral_config": common.referral_config.SQL;
    "common.referral_source": common.referral_source.SQL;
    "common.rippling_user": common.rippling_user.SQL;
    "common.segment_definition": common.segment_definition.SQL;
    "common.segment_destination_definition": common.segment_destination_definition.SQL;
    "common.segment_destination_mapping": common.segment_destination_mapping.SQL;
    "common.segment_destination_sync": common.segment_destination_sync.SQL;
    "common.segment_member": common.segment_member.SQL;
    "common.segment_member_history": common.segment_member_history.SQL;
    "common.segment_profile": common.segment_profile.SQL;
    "common.segment_sync": common.segment_sync.SQL;
    "common.state": common.state.SQL;
    "common.sync_token": common.sync_token.SQL;
    "common.timezone": common.timezone.SQL;
    "marketing.cio_customer": marketing.cio_customer.SQL;
    "marketing.cio_customer_sync": marketing.cio_customer_sync.SQL;
    "marketing.cio_segment": marketing.cio_segment.SQL;
    "marketing.cio_segment_run": marketing.cio_segment_run.SQL;
    "callcenter.agent": callcenter.agent.SQL;
    "callcenter.calling_list": callcenter.calling_list.SQL;
    "callcenter.calling_list_agent": callcenter.calling_list_agent.SQL;
    "callcenter.campaign": callcenter.campaign.SQL;
    "callcenter.dial": callcenter.dial.SQL;
    "callcenter.dial_result": callcenter.dial_result.SQL;
    "callcenter.do_not_call": callcenter.do_not_call.SQL;
    "callcenter.lead": callcenter.lead.SQL;
    "callcenter.rd_lead": callcenter.rd_lead.SQL;
    "callcenter.script": callcenter.script.SQL;
  }[T];

}
